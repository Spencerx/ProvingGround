2020.06.24 06:40:06 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TautologyInitState], id: (1,-384837536), content:
TautologyInitState(TermState([m : 0.14285714285714285, sym : 0.14285714285714285, ((mul) (m)) (n) : 0.14285714285714285, refl : 0.14285714285714285, mul : 0.14285714285714285, n : 0.14285714285714285, trans : 0.14285714285714285],[M : 1.0],Vector(),[],[],Empty))
2020.06.24 06:40:06 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.SpecialInitState], id: (2,1588327529), content:
SpecialInitState(TermState([trans : 0.9, sym : 0.1],[M : 1.0],Vector(),[],[],Empty),0.001,0.5,0.05,Some(TermGenParams(0.0,0.4,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.7,0.5,0.0,0.0,0.0,<function1>)),Some(2))
2020.06.24 06:40:06 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.SpecialInitState], id: (3,246182078), content:
SpecialInitState(TermState([left-multiply : 0.2, right-multiply : 0.2, ((mul) (m)) (n) : 0.2, m : 0.2, n : 0.2],[M : 1.0],Vector(),[],[],Empty),0.001,0.5,0.5,Some(TermGenParams(0.4,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.7,0.5,0.0,0.0,0.0,<function1>)),Some(2))
2020.06.24 06:40:06 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.LocalProver], id: (4,582823858), content:
LocalProver(TermState([m : 0.08333333333333333, left-multiply : 0.08333333333333333, eqM : 0.08333333333333333, mul : 0.08333333333333333, n : 0.08333333333333333, trans : 0.08333333333333333, sym : 0.08333333333333333, ass1 : 0.08333333333333333, right-multiply : 0.08333333333333333, ass2 : 0.08333333333333333, refl : 0.08333333333333333, ((mul) (m)) (n) : 0.08333333333333333],[M : 1.0],Vector(),[],[((eqM) (((mul) (m)) (n))) (((mul) (n)) (m)) : 1.0],Empty),TermGenParams(0.1,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.7,0.5,0.0,0.0,0.0,<function1>),1.0E-4,None,12 minutes,1.01,1.0,10000,10,1.0,1.0,None,false,false,0.5,1.0,Some(500000))
2020.06.24 06:40:06 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.ExpressionEval] to posts of type TypeTag[provingground.learning.LocalProver]
2020.06.24 06:40:20 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (5,1010672813), content:
provingground.learning.ExpressionEval$$anon$2@3c3da4ad
2020.06.24 06:40:20 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.ExpressionEval]
2020.06.24 06:40:20 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.FinalState] to posts of type TypeTag[provingground.learning.ExpressionEval]
2020.06.24 06:40:22 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.FinalState], id: (6,-1664112044)
2020.06.24 06:40:22 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 06:40:22 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 06:40:22 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.Lemmas] to posts of type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 06:40:22 [INFO] provingground.learning.HoTTBot.$anonfun:339:18 - Results: 3
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best proof: ((ass1) (m)) (n) with weight 2.666676177661691E-4; statement weight 4.922526522818089E-5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best proof: ((ass2) (((mul) (m)) (n))) (n) with weight 2.6875890673843706E-4; statement weight 3.283350224245018E-7
Lemma: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best proof: ((ass1) (((mul) (m)) (n))) (m) with weight 2.6875890673843706E-4; statement weight 2.901648730630753E-7
2020.06.24 06:40:24 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.Lemmas], id: (7,1645406931), content:
Lemmas(Vector((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),Some(((ass1) (m)) (n)),0.006507855171418817), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n),Some(((ass2) (m)) (n)),0.006506150985966044), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))),4.351622891122576E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),Some(((ass2) (((mul) (m)) (n))) (n)),4.312076800721712E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m),Some(((ass2) (((mul) (m)) (n))) (m)),4.312076800721712E-5), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (m)) (((mul) (m)) (n))),4.3108590784249295E-5), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (n)) (((mul) (m)) (n))),4.3108590784249295E-5), (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m),Some(((ass2) (n)) (m)),4.2716893714967655E-5), (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m),Some(((ass2) (m)) (m)),4.2716893714967655E-5), (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n),Some(((ass2) (n)) (n)),4.2716893714967655E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))),3.8448934653344136E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m),Some(((ass1) (m)) (((mul) (m)) (n))),3.818672941021252E-5), (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n),Some(((ass1) (n)) (((mul) (m)) (n))),3.818672941021252E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (m)),3.810782073384677E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (n)),3.810782073384677E-5), (((eqM) (((mul) (((mul) (m)) (m))) (m))) (m),Some(((ass1) (m)) (m)),3.784799433194509E-5), (((eqM) (((mul) (((mul) (n)) (n))) (n))) (n),Some(((ass1) (n)) (n)),3.784799433194509E-5), (((eqM) (((mul) (((mul) (n)) (m))) (m))) (n),Some(((ass1) (n)) (m)),3.784799433194509E-5)))
2020.06.24 06:40:24 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[(provingground.learning.HoTTMessages.UsedLemmas :: provingground.learning.HoTTMessages.TangentLemmas :: shapeless.HNil) :: provingground.learning.HoTTMessages.BaseMixinLemmas :: shapeless.HNil] to posts of type TypeTag[provingground.learning.HoTTMessages.Lemmas]
2020.06.24 06:40:24 [INFO] provingground.learning.HoTTBot.$anonfun:857:24 - excluded lemmas:

2020.06.24 06:40:24 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.UsedLemmas], id: (8,-1445828818), content:
UsedLemmas(Vector((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),0.040700000848968604), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n),0.04069253999579556), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)),0.001222485677132651), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),0.001214698356305945), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m),0.001214698356305945), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)),0.0012144582261775238), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)),0.0012144582261775238), (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m),0.0012067232145229533), (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m),0.0012067232145229533), (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n),0.0012067232145229533), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)),0.0011210033754202526), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m),0.0011156465515638147), (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n),0.0011156465515638147), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),0.001114032298292804), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)),0.001114032298292804), (((eqM) (((mul) (((mul) (m)) (m))) (m))) (m),0.0011087098648113207), (((eqM) (((mul) (((mul) (n)) (n))) (n))) (n),0.0011087098648113207), (((eqM) (((mul) (((mul) (n)) (m))) (m))) (n),0.0011087098648113207)))
2020.06.24 06:40:24 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentLemmas], id: (9,-962844701), content:
TangentLemmas(Vector((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),Some(((ass1) (m)) (n)),0.040700000848968604), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n),Some(((ass2) (m)) (n)),0.04069253999579556), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))),0.001222485677132651), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),Some(((ass2) (((mul) (m)) (n))) (n)),0.001214698356305945), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m),Some(((ass2) (((mul) (m)) (n))) (m)),0.001214698356305945), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (m)) (((mul) (m)) (n))),0.0012144582261775238), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (n)) (((mul) (m)) (n))),0.0012144582261775238), (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m),Some(((ass2) (n)) (m)),0.0012067232145229533), (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m),Some(((ass2) (m)) (m)),0.0012067232145229533), (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n),Some(((ass2) (n)) (n)),0.0012067232145229533), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))),0.0011210033754202526), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m),Some(((ass1) (m)) (((mul) (m)) (n))),0.0011156465515638147), (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n),Some(((ass1) (n)) (((mul) (m)) (n))),0.0011156465515638147), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (m)),0.001114032298292804), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (n)),0.001114032298292804), (((eqM) (((mul) (((mul) (m)) (m))) (m))) (m),Some(((ass1) (m)) (m)),0.0011087098648113207), (((eqM) (((mul) (((mul) (n)) (n))) (n))) (n),Some(((ass1) (n)) (n)),0.0011087098648113207), (((eqM) (((mul) (((mul) (n)) (m))) (m))) (n),Some(((ass1) (n)) (m)),0.0011087098648113207)))
2020.06.24 06:40:24 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas], id: (10,1833728595), content:
BaseMixinLemmas(Vector((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),Some(((ass1) (m)) (n)),0.1822931227077921), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n),Some(((ass2) (m)) (n)),0.18227880048839895), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))),0.040582079424125214), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),Some(((ass2) (((mul) (m)) (n))) (n)),0.0404710867924342), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m),Some(((ass2) (((mul) (m)) (n))) (m)),0.0404710867924342), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (m)) (((mul) (m)) (n))),0.04046765776608284), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (n)) (((mul) (m)) (n))),0.04046765776608284), (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m),Some(((ass2) (n)) (m)),0.040356994902527026), (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m),Some(((ass2) (m)) (m)),0.040356994902527026), (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n),Some(((ass2) (n)) (n)),0.040356994902527026), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))),0.03910247202200718), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m),Some(((ass1) (m)) (((mul) (m)) (n))),0.03902228170968758), (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n),Some(((ass1) (n)) (((mul) (m)) (n))),0.03902228170968758), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (m)),0.038998073617676515), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (n)),0.038998073617676515), (((eqM) (((mul) (((mul) (m)) (m))) (m))) (m),Some(((ass1) (m)) (m)),0.03891811362611114), (((eqM) (((mul) (((mul) (n)) (n))) (n))) (n),Some(((ass1) (n)) (n)),0.03891811362611114), (((eqM) (((mul) (((mul) (n)) (m))) (m))) (n),Some(((ass1) (n)) (m)),0.03891811362611114)))
2020.06.24 06:40:24 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] to posts of type TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas]
2020.06.24 06:48:45 [ERROR] provingground.learning.ExprCalc.stableVec:599:25 - Timeout for stable vector after 19119 steps
2020.06.24 06:48:45 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (11,-1520766294)
2020.06.24 06:48:45 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.post:384:20 - triggered (multiple) responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] to posts of type TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas]
2020.06.24 06:48:45 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.taskNest:389:32 - launching 1 branches
2020.06.24 06:48:45 [INFO] provingground.learning.HoTTBot.$anonfun:964:22 - previous special init states are 2
2020.06.24 06:48:45 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun:394:36 - launching 2 responses  of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] in branch
2020.06.24 06:48:48 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (12,412426767)
2020.06.24 06:48:48 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun.applyOrElse:399:44 - remaining 1 responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState]
2020.06.24 06:57:06 [ERROR] provingground.learning.ExprCalc.stableVec:599:25 - Timeout for stable vector after 14684 steps
2020.06.24 06:57:06 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (13,-1213868730)
2020.06.24 06:57:06 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun.applyOrElse:399:44 - remaining 0 responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState]
2020.06.24 06:57:06 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type], id: (14,-1666923435), content:
TangentBaseCompleted
2020.06.24 06:57:06 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes] to posts of type TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type]
2020.06.24 06:57:06 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type]
2020.06.24 06:57:09 [INFO] provingground.learning.HoTTBot.$anonfun:1160:26 - generating equations with 3 base states and 18 lemmas (before pruning)
2020.06.24 06:57:09 [INFO] provingground.learning.HoTTBot.$anonfun:1168:26 - Tangent lemmas (used with bases below): 3
(((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),0.040700000848968604)
(((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),0.001214698356305945)
(((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),0.001114032298292804)
2020.06.24 06:57:09 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 1.0E-6
2020.06.24 06:57:09 [INFO] provingground.learning.HoTTBot.$anonfun:1182:28 - Terms in base (used with tangents above): 3
Type: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best term: trans with weight 0.062128632414208296
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best term: (left-multiply) (((mul) (m)) (n)) with weight 0.0014989765280888352
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best term: (right-multiply) (m) with weight 0.0014989765280888352
2020.06.24 06:57:09 [INFO] provingground.learning.HoTTBot.$anonfun:1194:28 - Lemmas in base for mixin (used with tangents above): 3
Type: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best term: ((ass1) (m)) (n) with weight 6.340759408806593E-5
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best term: ((ass2) (((mul) (m)) (n))) (n) with weight 6.340759408806593E-5
Type: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best term: ((ass1) (((mul) (m)) (n))) (m) with weight 0.012460613043367846
2020.06.24 06:57:09 [INFO] provingground.learning.HoTTBot.$anonfun:1201:28 - Inference by unified applications, triples and weights (for this base state)
(0.062128632414208296, 0.0, 0.0) for ((`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))), (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))))
(0.0, 0.0, 0.0) for ((`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)))
(0.0014989765280888352, 0.040700000848968604, 6.1008345965799604E-5) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))), ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)))
(0.0014989765280888352, 0.0, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))

2020.06.24 06:57:10 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 1.0E-6
2020.06.24 06:57:24 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 6.103515625E-11
2020.06.24 06:57:26 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes], id: (15,456417714)
2020.06.24 06:57:26 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.ExpressionEval] to posts of type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes]
2020.06.24 06:57:26 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes]
2020.06.24 06:57:26 [INFO] provingground.learning.HoTTBot.scribeLog:1893:16 - Post; tag: TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes], id: (15,456417714)
2020.06.24 06:57:34 [INFO] provingground.learning.HoTTBot.$anonfun:1218:28 - Tracing back equations and values for stepsLemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c))))))
Traced back equations(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
Weights of terms and typesP₁(trans ∈ Terms) -> 0.062128632414208296

Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm)))
Traced back equations
Weights of terms and types

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c)))))
Traced back equations(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(n ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(m ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(n ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (n) ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (m) ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (m) ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (m) ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (n) ∈ Terms))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (m) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (n) ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(ass2 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass2 ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(mul ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(mul ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (((mul) (m)) (n)) ∈ Terms))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (m)) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (n) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (((mul) (m)) (n)) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(ass1 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass1 ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (m) ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(eqM ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(eqM ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (m) ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (m) ∈ Terms))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (n) ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (m) ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (m) ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (n) ∈ Terms))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (n) ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(refl ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(refl ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (m) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(sym ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(sym ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(left-multiply) ∈ Funcs))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((eqM) (n)) ∈ Funcs)) = (P₁((eqM) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (m)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((trans) (n)) ∈ Funcs)) = (P₁((trans) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (m)) ∈ Funcs)) = (P₁((left-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (m)) (m) ∈ Terms))
(P₁(Wrap((trans) (m)) ∈ Funcs)) = (P₁((trans) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (m)) ∈ Funcs)) = (P₁((sym) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((eqM) (m)) ∈ Funcs)) = (P₁((eqM) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((ass2) (m)) ∈ Funcs)) = (P₁((ass2) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((sym) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((sym) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((sym) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (m)) (m) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (n)) (n) ∈ Terms))
(P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (m)) ∈ Funcs)) = (P₁((ass1) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((mul) (n)) ∈ Funcs)) = (P₁((mul) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((left-multiply) (n)) ∈ Funcs)) = (P₁((left-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((sym) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((right-multiply) (n)) ∈ Funcs)) = (P₁((right-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (n)) (n) ∈ Terms))
(P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((mul) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (n)) ∈ Funcs)) = (P₁((ass1) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass2) (n)) ∈ Funcs)) = (P₁((ass2) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (n)) ∈ Funcs)) = (P₁((sym) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((trans) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (m)) ∈ Funcs)) = (P₁((right-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(((mul) (m)) (n) ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (m) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (n) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (m) ∈ Terms))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
Weights of terms and typesP₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁(((mul) (m)) (n) ∈ Terms) -> 0.062128632414208296
P₁((mul) (m) ∈ Terms) -> 0.0014989765280888352
P₁(m ∈ Terms) -> 0.062128632414208296
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms) -> 1.2639022840458096E-7
P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(mul ∈ Terms) -> 0.062128632414208296
P₁((right-multiply) (n) ∈ Terms) -> 0.0014989765280888352
P₁(((right-multiply) (m)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁((mul) (n) ∈ Terms) -> 0.0014989765280888352
P₁((((left-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 7.982540741341965E-8
P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁((sym) (n) ∈ Terms) -> 0.0014989765280888352
P₁(((left-multiply) (m)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁((eqM) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁((left-multiply) (n) ∈ Terms) -> 0.0014989765280888352
P₁((right-multiply) (m) ∈ Terms) -> 0.0014989765280888352
P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((ass1) (n) ∈ Terms) -> 0.0014989765280888352
P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((ass2) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁(eqM ∈ Terms) -> 0.062128632414208296
P₁((mul) (((mul) (m)) (m)) ∈ Terms) -> 4.0149044279429835E-6
P₁((trans) (m) ∈ Terms) -> 0.0014989765280888352
P₁((ass1) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁((sym) (m) ∈ Terms) -> 0.0014989765280888352
P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms) -> 1.2639022840458096E-7
P₁(((left-multiply) (n)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms) -> 7.982540741341965E-8
P₁((left-multiply) (m) ∈ Terms) -> 0.0014989765280888352
P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 4.0149044279429835E-6
P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁(((sym) (n)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁((sym) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁((eqM) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((sym) (m)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁(((right-multiply) (m)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms) -> 7.982540741341965E-8
P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms) -> 1.2639022840458096E-7
P₁((((left-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms) -> 1.2639022840458096E-7
P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 4.0149044279429835E-6
P₁(((left-multiply) (m)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 6.340759408806593E-5
P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 6.340759408806593E-5
P₁((mul) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 7.982540741341965E-8
P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms) -> 1.2639022840458096E-7
P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms) -> 1.2639022840458096E-7
P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁(ass1 ∈ Terms) -> 0.062128632414208296
P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 4.718816827610525E-5
P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 7.982540741341965E-8
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms) -> 1.2639022840458096E-7
P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms) -> 7.982540741341965E-8
P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((mul) (((mul) (n)) (n)) ∈ Terms) -> 4.0149044279429835E-6
P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (m) ∈ Terms) -> 0.012647552600612318
P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms) -> 7.982540741341965E-8
P₁((eqM) (n) ∈ Terms) -> 0.012647552600612318
P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (n)) ∈ Terms) -> 0.012647552600612318
P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁(right-multiply ∈ Terms) -> 0.062128632414208296
P₁((((left-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁(trans ∈ Terms) -> 0.062128632414208296
P₁((trans) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁((ass1) (m) ∈ Terms) -> 0.0014989765280888352
P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 4.718816827610525E-5
P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((trans) (n) ∈ Terms) -> 0.0014989765280888352
P₁(ass2 ∈ Terms) -> 0.062128632414208296
P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms) -> 7.982540741341965E-8
P₁((ass2) (n) ∈ Terms) -> 0.0014989765280888352
P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 4.0149044279429835E-6
P₁(((right-multiply) (n)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁(refl ∈ Terms) -> 0.062128632414208296
P₁((((right-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁(left-multiply ∈ Terms) -> 0.062128632414208296
P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 4.0149044279429835E-6
P₁(sym ∈ Terms) -> 0.062128632414208296
P₁((ass2) (m) ∈ Terms) -> 0.0014989765280888352
P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (m)) ∈ Terms) -> 4.0149044279429835E-6
P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms) -> 1.2639022840458096E-7
P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 4.0149044279429835E-6
P₁(n ∈ Terms) -> 0.062128632414208296
P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms) -> 1.0726284185410135E-7
P₁(((mul) (n)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms) -> 6.340759408806593E-5
P₁(((mul) (n)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 1.6983283293566034E-7
P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms) -> 1.0726284185410135E-7
P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms) -> 1.0726284185410135E-7
P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 1.0726284185410135E-7
P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 1.0726284185410135E-7
P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 1.6983283293566034E-7
P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms) -> 1.6983283293566034E-7
P₁(((mul) (m)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 1.6983283293566034E-7
P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms) -> 6.340759408806593E-5
P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms) -> 1.6983283293566034E-7
P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 1.6983283293566034E-7
P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms) -> 1.0726284185410135E-7
P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms) -> 1.6983283293566034E-7
P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms) -> 1.0726284185410135E-7
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 1.6983283293566034E-7
P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 1.0726284185410135E-7

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m)))))
Traced back equations(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁((sym) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (n) ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (m) ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (m) ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (m) ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (n) ∈ Terms))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (m) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (n) ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(ass2 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass2 ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(mul ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(mul ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (((mul) (m)) (n)) ∈ Terms))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (m)) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (n) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (((mul) (m)) (n)) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(ass1 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass1 ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (m) ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(eqM ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(eqM ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (m) ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (m) ∈ Terms))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (n) ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (m) ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (m) ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (n) ∈ Terms))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (n) ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(refl ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(refl ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (m) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(sym ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(sym ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(right-multiply) ∈ Funcs))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((eqM) (n)) ∈ Funcs)) = (P₁((eqM) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (m)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((trans) (n)) ∈ Funcs)) = (P₁((trans) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (m)) ∈ Funcs)) = (P₁((left-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (m)) (m) ∈ Terms))
(P₁(Wrap((trans) (m)) ∈ Funcs)) = (P₁((trans) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (m)) ∈ Funcs)) = (P₁((sym) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((eqM) (m)) ∈ Funcs)) = (P₁((eqM) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((ass2) (m)) ∈ Funcs)) = (P₁((ass2) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((sym) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((sym) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((sym) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (m)) (m) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (n)) (n) ∈ Terms))
(P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (m)) ∈ Funcs)) = (P₁((ass1) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((mul) (n)) ∈ Funcs)) = (P₁((mul) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((left-multiply) (n)) ∈ Funcs)) = (P₁((left-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((sym) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((right-multiply) (n)) ∈ Funcs)) = (P₁((right-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (n)) (n) ∈ Terms))
(P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((mul) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (n)) ∈ Funcs)) = (P₁((ass1) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass2) (n)) ∈ Funcs)) = (P₁((ass2) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (n)) ∈ Funcs)) = (P₁((sym) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((trans) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (m)) ∈ Funcs)) = (P₁((right-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(m ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(m ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(n ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (m) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (n) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (m) ∈ Terms))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
Weights of terms and typesP₁((right-multiply) (m) ∈ Terms) -> 0.0014989765280888352
P₁(m ∈ Terms) -> 0.062128632414208296
P₁(right-multiply ∈ Terms) -> 0.062128632414208296
P₁((sym) (n) ∈ Terms) -> 0.0014989765280888352
P₁(n ∈ Terms) -> 0.062128632414208296
P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 6.340759408806593E-5
P₁(((right-multiply) (n)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((trans) (m) ∈ Terms) -> 0.0014989765280888352
P₁((sym) (m) ∈ Terms) -> 0.0014989765280888352
P₁((mul) (n) ∈ Terms) -> 0.0014989765280888352
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms) -> 1.2639022840458096E-7
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 1.6983283293566034E-7
P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 7.982540741341965E-8
P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 1.0726284185410135E-7
P₁((left-multiply) (m) ∈ Terms) -> 0.0014989765280888352
P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 4.0149044279429835E-6
P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((ass1) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁(((mul) (m)) (n) ∈ Terms) -> 0.062128632414208296
P₁((right-multiply) (n) ∈ Terms) -> 0.0014989765280888352
P₁(ass2 ∈ Terms) -> 0.062128632414208296
P₁(((right-multiply) (n)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms) -> 7.982540741341965E-8
P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms) -> 1.0726284185410135E-7
P₁((mul) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁(mul ∈ Terms) -> 0.062128632414208296
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms) -> 1.2639022840458096E-7
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 1.6983283293566034E-7
P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms) -> 7.982540741341965E-8
P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms) -> 1.0726284185410135E-7
P₁((trans) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 4.718816827610525E-5
P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((mul) (((mul) (n)) (n)) ∈ Terms) -> 4.0149044279429835E-6
P₁(((mul) (n)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁(((right-multiply) (m)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms) -> 1.2639022840458096E-7
P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms) -> 1.6983283293566034E-7
P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 4.0149044279429835E-6
P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((mul) (((mul) (n)) (m)) ∈ Terms) -> 4.0149044279429835E-6
P₁(((mul) (n)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (n) ∈ Terms) -> 0.012647552600612318
P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 6.340759408806593E-5
P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((sym) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁((mul) (m) ∈ Terms) -> 0.0014989765280888352
P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 4.0149044279429835E-6
P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms) -> 6.340759408806593E-5
P₁(ass1 ∈ Terms) -> 0.062128632414208296
P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 7.982540741341965E-8
P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 1.0726284185410135E-7
P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms) -> 1.2639022840458096E-7
P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 1.6983283293566034E-7
P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms) -> 1.2639022840458096E-7
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 1.6983283293566034E-7
P₁(((left-multiply) (m)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((mul) (((mul) (m)) (m)) ∈ Terms) -> 4.0149044279429835E-6
P₁(((mul) (m)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms) -> 7.982540741341965E-8
P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms) -> 1.0726284185410135E-7
P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁(((left-multiply) (n)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁(eqM ∈ Terms) -> 0.062128632414208296
P₁((ass1) (m) ∈ Terms) -> 0.0014989765280888352
P₁(((right-multiply) (m)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((ass2) (n) ∈ Terms) -> 0.0014989765280888352
P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 6.340759408806593E-5
P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁((ass2) (m) ∈ Terms) -> 0.0014989765280888352
P₁((eqM) (m) ∈ Terms) -> 0.012647552600612318
P₁(trans ∈ Terms) -> 0.062128632414208296
P₁(left-multiply ∈ Terms) -> 0.062128632414208296
P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms) -> 1.2639022840458096E-7
P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms) -> 1.6983283293566034E-7
P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 4.718816827610525E-5
P₁(((left-multiply) (m)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁((trans) (n) ∈ Terms) -> 0.0014989765280888352
P₁((ass2) (((mul) (m)) (n)) ∈ Terms) -> 0.0014989765280888352
P₁((left-multiply) (n) ∈ Terms) -> 0.0014989765280888352
P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 4.0149044279429835E-6
P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((ass1) (n) ∈ Terms) -> 0.0014989765280888352
P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms) -> 1.2639022840458096E-7
P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 1.6983283293566034E-7
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms) -> 7.982540741341965E-8
P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms) -> 1.0726284185410135E-7
P₁(refl ∈ Terms) -> 0.062128632414208296
P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁(((left-multiply) (n)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms) -> 7.982540741341965E-8
P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms) -> 1.0726284185410135E-7
P₁((eqM) (((mul) (m)) (n)) ∈ Terms) -> 0.012647552600612318
P₁(sym ∈ Terms) -> 0.062128632414208296
P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 4.0149044279429835E-6
P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms) -> 1.2639022840458096E-7
P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms) -> 1.6983283293566034E-7
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 7.982540741341965E-8
P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 1.0726284185410135E-7
P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁(((sym) (n)) (n) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((sym) (m)) (m) ∈ Terms) -> 6.340759408806593E-5
P₁((eqM) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 6.340759408806593E-5
P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0


2020.06.24 06:57:34 [INFO] provingground.learning.HoTTBot.$anonfun:1182:28 - Terms in base (used with tangents above): 2
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best term: (left-multiply) (((mul) (m)) (n)) with weight 0.016250101727454017
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best term: (right-multiply) (m) with weight 0.016250101727454017
2020.06.24 06:57:34 [INFO] provingground.learning.HoTTBot.$anonfun:1194:28 - Lemmas in base for mixin (used with tangents above): 3
Type: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best term: ((ass1) (m)) (n) with weight 0.080557115339217
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best term: ((ass2) (((mul) (m)) (n))) (n) with weight 0.01788456941333764
Type: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best term: ((ass1) (((mul) (m)) (n))) (m) with weight 0.017233630472512373
2020.06.24 06:57:34 [INFO] provingground.learning.HoTTBot.$anonfun:1201:28 - Inference by unified applications, triples and weights (for this base state)
(0.0, 0.0, 0.0) for ((`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))), (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))))
(0.0, 0.0, 0.0) for ((`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)))
(0.016250101727454017, 0.040700000848968604, 6.613791541032046E-4) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))), ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)))
(0.016250101727454017, 0.0, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))

2020.06.24 06:57:52 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (16,1032545892), content:
provingground.learning.ExpressionEval$$anon$2@3d8b6664
2020.06.24 06:57:52 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.FinalState] to posts of type TypeTag[provingground.learning.ExpressionEval]
2020.06.24 06:57:52 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.ExpressionEval]
2020.06.24 06:57:52 [INFO] provingground.learning.HoTTBot.scribeLog:1893:16 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (16,1032545892)
2020.06.24 06:57:55 [INFO] provingground.learning.HoTTBot.$anonfun:1218:28 - Tracing back equations and values for stepsLemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c))))))
Traced back equations(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
Weights of terms and typesP₁(trans ∈ Terms) -> 0.0

Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm)))
Traced back equations
Weights of terms and types

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c)))))
Traced back equations(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(n ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(m ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(n ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (n) ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (m) ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (m) ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (m) ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (n) ∈ Terms))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (m) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (n) ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(ass2 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass2 ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(mul ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(mul ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (((mul) (m)) (n)) ∈ Terms))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (m)) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (n) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (((mul) (m)) (n)) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(ass1 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass1 ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (m) ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(eqM ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(eqM ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (m) ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (m) ∈ Terms))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (n) ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (m) ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (m) ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (n) ∈ Terms))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (n) ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(refl ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(refl ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (m) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(sym ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(sym ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(left-multiply) ∈ Funcs))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((eqM) (n)) ∈ Funcs)) = (P₁((eqM) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (m)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((trans) (n)) ∈ Funcs)) = (P₁((trans) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (m)) ∈ Funcs)) = (P₁((left-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (m)) (m) ∈ Terms))
(P₁(Wrap((trans) (m)) ∈ Funcs)) = (P₁((trans) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (m)) ∈ Funcs)) = (P₁((sym) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((eqM) (m)) ∈ Funcs)) = (P₁((eqM) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((ass2) (m)) ∈ Funcs)) = (P₁((ass2) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((sym) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((sym) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((sym) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (m)) (m) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (n)) (n) ∈ Terms))
(P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (m)) ∈ Funcs)) = (P₁((ass1) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((mul) (n)) ∈ Funcs)) = (P₁((mul) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((left-multiply) (n)) ∈ Funcs)) = (P₁((left-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((sym) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((right-multiply) (n)) ∈ Funcs)) = (P₁((right-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (n)) (n) ∈ Terms))
(P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((mul) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (n)) ∈ Funcs)) = (P₁((ass1) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass2) (n)) ∈ Funcs)) = (P₁((ass2) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (n)) ∈ Funcs)) = (P₁((sym) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((trans) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (m)) ∈ Funcs)) = (P₁((right-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(((mul) (m)) (n) ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (m) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (n) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (m) ∈ Terms))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
Weights of terms and typesP₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.016250101727454017
P₁(((mul) (m)) (n) ∈ Terms) -> 0.08838195774214316
P₁((mul) (m) ∈ Terms) -> 0.0
P₁(m ∈ Terms) -> 0.08838195774214316
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(mul ∈ Terms) -> 0.0
P₁((right-multiply) (n) ∈ Terms) -> 0.016250101727454017
P₁(((right-multiply) (m)) (n) ∈ Terms) -> 0.001037767345213545
P₁((mul) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (n) ∈ Terms) -> 0.001037767345213545
P₁((sym) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (n) ∈ Terms) -> 0.001037767345213545
P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.016250101727454017
P₁((eqM) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁((left-multiply) (n) ∈ Terms) -> 0.016250101727454017
P₁((right-multiply) (m) ∈ Terms) -> 0.016250101727454017
P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (m) ∈ Terms) -> 0.001037767345213545
P₁((ass1) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁((ass2) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(eqM ∈ Terms) -> 0.0
P₁((mul) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁((trans) (m) ∈ Terms) -> 0.0
P₁((ass1) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((sym) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (m) ∈ Terms) -> 0.001037767345213545
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms) -> 0.0
P₁((left-multiply) (m) ∈ Terms) -> 0.016250101727454017
P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁(((sym) (n)) (n) ∈ Terms) -> 0.0
P₁((sym) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((sym) (m)) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁(((right-multiply) (m)) (m) ∈ Terms) -> 0.001037767345213545
P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁((eqM) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms) -> 0.0
P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (m) ∈ Terms) -> 0.001037767345213545
P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.001037767345213545
P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.001037767345213545
P₁((mul) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁(ass1 ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms) -> 0.0
P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.001037767345213545
P₁((eqM) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms) -> 0.0
P₁((eqM) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.001037767345213545
P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁(right-multiply ∈ Terms) -> 0.08838195774214316
P₁((((left-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁(trans ∈ Terms) -> 0.0
P₁((trans) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((ass1) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((trans) (n) ∈ Terms) -> 0.0
P₁(ass2 ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms) -> 0.0
P₁((ass2) (n) ∈ Terms) -> 0.0
P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (n) ∈ Terms) -> 0.001037767345213545
P₁(refl ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁(left-multiply ∈ Terms) -> 0.08838195774214316
P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁(sym ∈ Terms) -> 0.0
P₁((ass2) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(n ∈ Terms) -> 0.08838195774214316
P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms) -> 0.0
P₁(((mul) (n)) (m) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.0
P₁(((mul) (n)) (n) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (m) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m)))))
Traced back equations(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁((sym) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (n) ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (m) ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (m) ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (m) ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (n) ∈ Terms))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (m) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (n) ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(ass2 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass2 ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(mul ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(mul ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (((mul) (m)) (n)) ∈ Terms))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (m)) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (n) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (((mul) (m)) (n)) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(ass1 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass1 ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (m) ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(eqM ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(eqM ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (m) ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (m) ∈ Terms))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (n) ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (m) ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (m) ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (n) ∈ Terms))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (n) ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(refl ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(refl ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (m) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(sym ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(sym ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(right-multiply) ∈ Funcs))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((eqM) (n)) ∈ Funcs)) = (P₁((eqM) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (m)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((trans) (n)) ∈ Funcs)) = (P₁((trans) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (m)) ∈ Funcs)) = (P₁((left-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (m)) (m) ∈ Terms))
(P₁(Wrap((trans) (m)) ∈ Funcs)) = (P₁((trans) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (m)) ∈ Funcs)) = (P₁((sym) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((eqM) (m)) ∈ Funcs)) = (P₁((eqM) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((ass2) (m)) ∈ Funcs)) = (P₁((ass2) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((sym) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((sym) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((sym) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (m)) (m) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (n)) (n) ∈ Terms))
(P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (m)) ∈ Funcs)) = (P₁((ass1) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((mul) (n)) ∈ Funcs)) = (P₁((mul) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((left-multiply) (n)) ∈ Funcs)) = (P₁((left-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((sym) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((right-multiply) (n)) ∈ Funcs)) = (P₁((right-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (n)) (n) ∈ Terms))
(P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((mul) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (n)) ∈ Funcs)) = (P₁((ass1) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass2) (n)) ∈ Funcs)) = (P₁((ass2) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (n)) ∈ Funcs)) = (P₁((sym) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((trans) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (m)) ∈ Funcs)) = (P₁((right-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(m ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(m ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(n ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (m) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (n) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (m) ∈ Terms))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
Weights of terms and typesP₁((right-multiply) (m) ∈ Terms) -> 0.016250101727454017
P₁(m ∈ Terms) -> 0.08838195774214316
P₁(right-multiply ∈ Terms) -> 0.08838195774214316
P₁((sym) (n) ∈ Terms) -> 0.0
P₁(n ∈ Terms) -> 0.08838195774214316
P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.001037767345213545
P₁(((right-multiply) (n)) (m) ∈ Terms) -> 0.001037767345213545
P₁((trans) (m) ∈ Terms) -> 0.0
P₁((sym) (m) ∈ Terms) -> 0.0
P₁((mul) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((left-multiply) (m) ∈ Terms) -> 0.016250101727454017
P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((ass1) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (n) ∈ Terms) -> 0.08838195774214316
P₁((right-multiply) (n) ∈ Terms) -> 0.016250101727454017
P₁(ass2 ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (n) ∈ Terms) -> 0.001037767345213545
P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms) -> 0.0
P₁((mul) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(mul ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.016250101727454017
P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms) -> 0.0
P₁((trans) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁((mul) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (n)) (n) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (n) ∈ Terms) -> 0.001037767345213545
P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.001037767345213545
P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁(((mul) (n)) (m) ∈ Terms) -> 0.0
P₁((eqM) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.001037767345213545
P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁((sym) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((mul) (m) ∈ Terms) -> 0.0
P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.0
P₁(ass1 ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (m) ∈ Terms) -> 0.001037767345213545
P₁((mul) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁(((left-multiply) (n)) (n) ∈ Terms) -> 0.001037767345213545
P₁(eqM ∈ Terms) -> 0.0
P₁((ass1) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (m) ∈ Terms) -> 0.001037767345213545
P₁((ass2) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.001037767345213545
P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.016250101727454017
P₁((ass2) (m) ∈ Terms) -> 0.0
P₁((eqM) (m) ∈ Terms) -> 0.0
P₁(trans ∈ Terms) -> 0.0
P₁(left-multiply ∈ Terms) -> 0.08838195774214316
P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (n) ∈ Terms) -> 0.001037767345213545
P₁((trans) (n) ∈ Terms) -> 0.0
P₁((ass2) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((left-multiply) (n) ∈ Terms) -> 0.016250101727454017
P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.0
P₁((ass1) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms) -> 0.0
P₁(refl ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.001037767345213545
P₁(((left-multiply) (n)) (m) ∈ Terms) -> 0.001037767345213545
P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(sym ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁(((sym) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((sym) (m)) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0


2020.06.24 06:57:55 [INFO] provingground.learning.HoTTBot.$anonfun:1182:28 - Terms in base (used with tangents above): 1
Type: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best term: trans with weight 0.45000000000000007
2020.06.24 06:57:55 [INFO] provingground.learning.HoTTBot.$anonfun:1194:28 - Lemmas in base for mixin (used with tangents above): 3
Type: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best term: ((ass1) (m)) (n) with weight 0.09114656135389602
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best term: ((ass2) (((mul) (m)) (n))) (n) with weight 0.0202355433962171
Type: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best term: ((ass1) (((mul) (m)) (n))) (m) with weight 0.019499036808838258
2020.06.24 06:57:55 [INFO] provingground.learning.HoTTBot.$anonfun:1201:28 - Inference by unified applications, triples and weights (for this base state)
(0.45000000000000007, 0.0, 0.0) for ((`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))), (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))))
(0.0, 0.0, 0.0) for ((`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)))
(0.0, 0.040700000848968604, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))), ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)))
(0.0, 0.0, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))

2020.06.24 06:58:02 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.FinalState], id: (17,1252424545)
2020.06.24 06:58:02 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.Lemmas] to posts of type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 06:58:02 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 06:58:02 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 06:58:02 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 06:58:02 [INFO] provingground.learning.HoTTBot.scribeLog:1893:16 - Post; tag: TypeTag[provingground.learning.HoTTMessages.FinalState], id: (17,1252424545)
2020.06.24 06:58:03 [INFO] provingground.learning.HoTTBot.$anonfun:339:18 - Results: 5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best proof: ((ass1) (m)) (n) with weight 2.5661868462998754E-4; statement weight 1.8221561600094513E-5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best proof: ((ass2) (((mul) (m)) (n))) (n) with weight 2.5759682850135586E-4; statement weight 5.858415043815367E-8
Lemma: ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))); best proof: (((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)) with weight 2.1247068576355113E-10; statement weight 0.0
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)); best proof: ((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)) with weight 2.861324212407373E-9; statement weight 0.0
Lemma: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best proof: ((ass1) (((mul) (m)) (n))) (m) with weight 2.5759682850135586E-4; statement weight 5.0725840253526665E-8
2020.06.24 06:58:03 [INFO] provingground.learning.HoTTBot.$anonfun:339:18 - Steps (in final state): 3
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best proof: trans with weight 0.056496419694785416; statement weight 4.006635591716756E-11
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best proof: (left-multiply) (((mul) (m)) (n)) with weight 0.005972213793669846; statement weight 2.2666684296652213E-13
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best proof: (right-multiply) (m) with weight 0.005949536153942124; statement weight 2.2610769624302098E-13
2020.06.24 06:58:13 [INFO] provingground.learning.HoTTBot.$anonfun:1218:28 - Tracing back equations and values for stepsLemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c))))))
Traced back equations(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
Weights of terms and typesP₁(trans ∈ Terms) -> 0.45000000000000007

Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm)))
Traced back equations
Weights of terms and types

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c)))))
Traced back equations(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(n ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(m ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(n ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (n) ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (m) ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (m) ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (m) ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (n) ∈ Terms))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (m) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (n) ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(ass2 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass2 ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(mul ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(mul ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (((mul) (m)) (n)) ∈ Terms))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (m)) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (n) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (((mul) (m)) (n)) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(ass1 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass1 ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (m) ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(eqM ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(eqM ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (m) ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (m) ∈ Terms))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (n) ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (m) ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (m) ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (n) ∈ Terms))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (n) ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(refl ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(refl ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (m) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(sym ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(sym ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(left-multiply) ∈ Funcs))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((eqM) (n)) ∈ Funcs)) = (P₁((eqM) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (m)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((trans) (n)) ∈ Funcs)) = (P₁((trans) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (m)) ∈ Funcs)) = (P₁((left-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (m)) (m) ∈ Terms))
(P₁(Wrap((trans) (m)) ∈ Funcs)) = (P₁((trans) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (m)) ∈ Funcs)) = (P₁((sym) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((eqM) (m)) ∈ Funcs)) = (P₁((eqM) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((ass2) (m)) ∈ Funcs)) = (P₁((ass2) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((sym) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((sym) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((sym) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (m)) (m) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (n)) (n) ∈ Terms))
(P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (m)) ∈ Funcs)) = (P₁((ass1) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((mul) (n)) ∈ Funcs)) = (P₁((mul) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((left-multiply) (n)) ∈ Funcs)) = (P₁((left-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((sym) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((right-multiply) (n)) ∈ Funcs)) = (P₁((right-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (n)) (n) ∈ Terms))
(P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((mul) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (n)) ∈ Funcs)) = (P₁((ass1) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass2) (n)) ∈ Funcs)) = (P₁((ass2) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (n)) ∈ Funcs)) = (P₁((sym) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((trans) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (m)) ∈ Funcs)) = (P₁((right-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(((mul) (m)) (n) ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (m) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (n) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (m) ∈ Terms))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
Weights of terms and typesP₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (n) ∈ Terms) -> 0.0
P₁((mul) (m) ∈ Terms) -> 0.0
P₁(m ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(mul ∈ Terms) -> 0.0
P₁((right-multiply) (n) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (n) ∈ Terms) -> 0.0
P₁((mul) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (n) ∈ Terms) -> 0.0
P₁((sym) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (n) ∈ Terms) -> 0.0
P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁((left-multiply) (n) ∈ Terms) -> 0.0
P₁((right-multiply) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (m) ∈ Terms) -> 0.0
P₁((ass1) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((ass2) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(eqM ∈ Terms) -> 0.0
P₁((mul) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁((trans) (m) ∈ Terms) -> 0.0
P₁((ass1) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((sym) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms) -> 0.0
P₁((left-multiply) (m) ∈ Terms) -> 0.0
P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁(((sym) (n)) (n) ∈ Terms) -> 0.0
P₁((sym) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((sym) (m)) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (m) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms) -> 0.0
P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.0
P₁((mul) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁(ass1 ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms) -> 0.0
P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.0
P₁((eqM) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms) -> 0.0
P₁((eqM) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(right-multiply ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁(trans ∈ Terms) -> 0.45000000000000007
P₁((trans) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((ass1) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((trans) (n) ∈ Terms) -> 0.0
P₁(ass2 ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms) -> 0.0
P₁((ass2) (n) ∈ Terms) -> 0.0
P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (n) ∈ Terms) -> 0.0
P₁(refl ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁(left-multiply ∈ Terms) -> 0.0
P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁(sym ∈ Terms) -> 0.049999999999999996
P₁((ass2) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(n ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms) -> 0.0
P₁(((mul) (n)) (m) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.0
P₁(((mul) (n)) (n) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (m) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m)))))
Traced back equations(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncWithDom(M))})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁((sym) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (n) ∈ Terms))
(P₁((sym) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (m) ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (m) ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((trans) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((sym) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (m) ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((sym) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (n) ∈ Terms))
(P₁((mul) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((left-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (m) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (n) ∈ Terms))
(P₁((right-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(ass2 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass2 ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(mul ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(mul ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (((mul) (m)) (n)) ∈ Terms))
(P₁((trans) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (n)) ∈ Terms))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (m)) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (n) ∈ Terms))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((sym) (((mul) (m)) (n)) ∈ Terms))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(sym) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((sym) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(sym) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(ass1 ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(ass1 ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (m) ∈ Terms))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(eqM ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(eqM ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (m) ∈ Terms))
(P₁((ass1) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((right-multiply) (m)) (m) ∈ Terms))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((right-multiply) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((right-multiply) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (n) ∈ Terms))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (m) ∈ Terms))
(P₁((ass2) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (m) ∈ Terms))
(P₁((eqM) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(trans) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((trans) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(trans) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((trans) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((trans) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass2) (((mul) (m)) (n)) ∈ Terms))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(ass2) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass2) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (n) ∈ Terms))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(ass1) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((ass1) (n) ∈ Terms))
(P₁((ass1) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(ass1) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms))
(P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(refl ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(refl ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((left-multiply) (n)) (m) ∈ Terms))
(P₁(((left-multiply) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((left-multiply) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,TypFamilies,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,TypFamilies,Terms,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(sym ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(sym ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (n)) (m)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(right-multiply) ∈ Funcs))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(mul ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((right-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(eqM ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((eqM) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((sym) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass1 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((left-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(right-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(trans ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass1) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((trans) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(ass2 ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(((right-multiply) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(refl ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(left-multiply ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass1) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(sym ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((ass2) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((sym) (n)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((ass2) (m) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁(Wrap((right-multiply) (m)) ∈ Funcs)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms)
(P₁({Terms ∈ Restrict(FuncOpt)})) = P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁(Wrap((eqM) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((eqM) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((eqM) (n)) ∈ Funcs)) = (P₁((eqM) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((ass2) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass2) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (m)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((right-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((trans) (n)) ∈ Funcs)) = (P₁((trans) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((left-multiply) (m)) ∈ Funcs)) = (P₁((left-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (m)) (m) ∈ Terms))
(P₁(Wrap((trans) (m)) ∈ Funcs)) = (P₁((trans) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (m)) ∈ Funcs)) = (P₁((sym) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((eqM) (m)) ∈ Funcs)) = (P₁((eqM) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((ass2) (m)) ∈ Funcs)) = (P₁((ass2) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((sym) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((sym) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (n)) (n) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (m)) (m)) ∈ Terms))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((sym) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (m)) (m) ∈ Terms))
(P₁(((sym) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (n)) (n)) ∈ Terms))
(P₁((eqM) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (n)) (n) ∈ Terms))
(P₁(Wrap((ass1) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((ass1) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (m)) ∈ Funcs)) = (P₁((ass1) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms))
(P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (((mul) (m)) (n))) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(eqM) ∈ TypFamilies))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap(eqM) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((mul) (n)) ∈ Funcs)) = (P₁((mul) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((left-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap((left-multiply) (n)) ∈ Funcs)) = (P₁((left-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((left-multiply) (n)) (m)) (m) ∈ Terms))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((left-multiply) (n)) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((left-multiply) (n)) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(Wrap((sym) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((sym) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (n)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(Wrap((right-multiply) (n)) ∈ Funcs)) = (P₁((right-multiply) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (n)) (n) ∈ Terms))
(P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((mul) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass1) (n)) ∈ Funcs)) = (P₁((ass1) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((ass2) (n)) ∈ Funcs)) = (P₁((ass2) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((sym) (n)) ∈ Funcs)) = (P₁((sym) (n) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((trans) (((mul) (m)) (n))) ∈ Funcs)) = (P₁((trans) (((mul) (m)) (n)) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((right-multiply) (m)) ∈ Funcs)) = (P₁((right-multiply) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(((right-multiply) (m)) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(m ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(m ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (n) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(n ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)
(P₁({Terms ∈ Filter(WithTyp(typ))})) = P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (m) ∈ Terms))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (m) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (n) ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (n)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (m)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (m) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (m) ∈ Terms))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (n)) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (n) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (n)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (n)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (n)) ∈ Funcs))) * (P₁(((mul) (n)) (m) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (n)) (m) ∈ Terms))) * (P₁(Wrap((mul) (n)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (n)) (((mul) (n)) (m)) ∈ Terms))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (m))) (m) ∈ Terms))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (m))) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ Funcs))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms))
(P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (m)) (n))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms))
Weights of terms and typesP₁((right-multiply) (m) ∈ Terms) -> 0.0
P₁(m ∈ Terms) -> 0.0
P₁(right-multiply ∈ Terms) -> 0.0
P₁((sym) (n) ∈ Terms) -> 0.0
P₁(n ∈ Terms) -> 0.0
P₁(((right-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (m) ∈ Terms) -> 0.0
P₁((trans) (m) ∈ Terms) -> 0.0
P₁((sym) (m) ∈ Terms) -> 0.0
P₁((mul) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((left-multiply) (m) ∈ Terms) -> 0.0
P₁((mul) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((ass1) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (n) ∈ Terms) -> 0.0
P₁((right-multiply) (n) ∈ Terms) -> 0.0
P₁(ass2 ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (m))) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (m))) (m) ∈ Terms) -> 0.0
P₁((mul) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(mul ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (m))) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (m))) (m) ∈ Terms) -> 0.0
P₁((trans) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (n)) (n) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (n) ∈ Terms) -> 0.0
P₁(((right-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((mul) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁(((mul) (n)) (m) ∈ Terms) -> 0.0
P₁((eqM) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.0
P₁(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((right-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((sym) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((mul) (m) ∈ Terms) -> 0.0
P₁((mul) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.0
P₁(ass1 ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (m) ∈ Terms) -> 0.0
P₁((mul) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (m))) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (n) ∈ Terms) -> 0.0
P₁(eqM ∈ Terms) -> 0.0
P₁((ass1) (m) ∈ Terms) -> 0.0
P₁(((right-multiply) (m)) (m) ∈ Terms) -> 0.0
P₁((ass2) (n) ∈ Terms) -> 0.0
P₁(((left-multiply) (((mul) (m)) (n))) (n) ∈ Terms) -> 0.0
P₁((right-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((ass2) (m) ∈ Terms) -> 0.0
P₁((eqM) (m) ∈ Terms) -> 0.0
P₁(trans ∈ Terms) -> 0.45000000000000007
P₁(left-multiply ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (m))) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (n)) ∈ Terms) -> 0.0
P₁(((left-multiply) (m)) (n) ∈ Terms) -> 0.0
P₁((trans) (n) ∈ Terms) -> 0.0
P₁((ass2) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((left-multiply) (n) ∈ Terms) -> 0.0
P₁((mul) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (m)) (n))) (m) ∈ Terms) -> 0.0
P₁((ass1) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))) ∈ Terms) -> 0.0
P₁(((mul) (m)) (((mul) (m)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (n))) (n) ∈ Terms) -> 0.0
P₁(refl ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((left-multiply) (n)) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (n)) (n))) (n)) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (n)) (n))) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(sym ∈ Terms) -> 0.049999999999999996
P₁((mul) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (n)) (m))) ∈ Terms) -> 0.0
P₁(((mul) (n)) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (m)) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (m)) (m) ∈ Terms) -> 0.0
P₁(((sym) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (m)) (m)) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))) ∈ Terms) -> 0.0
P₁(((sym) (m)) (m) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (n)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (n)) (n) ∈ Terms) -> 0.0
P₁((((left-multiply) (((mul) (m)) (n))) (n)) (n) ∈ Terms) -> 0.0
P₁((eqM) (((mul) (((mul) (m)) (n))) (m)) ∈ Terms) -> 0.0
P₁(((sym) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((left-multiply) (n)) (m)) (m) ∈ Terms) -> 0.0
P₁((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (n)) (n) ∈ Terms) -> 0.0
P₁((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n)) ∈ Terms) -> 0.0


2020.06.24 06:58:29 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.Lemmas], id: (18,-751676604), content:
Lemmas(Vector(((`$fqdoc : M ) ~> (((eqM) (((mul) (n)) (`$fqdoc))) (((mul) (n)) (`$fqdoc))),Some((`$fqdoc :  M) ↦ (((((right-multiply) (`$fqdoc)) (n)) (n)) ((refl) (n)))),0.020918148054304524), ((`$bscxj : M ) ~> (((eqM) (((mul) (m)) (`$bscxj))) (((mul) (m)) (`$bscxj))),Some((`$bscxj :  M) ↦ (((((right-multiply) (`$bscxj)) (m)) (m)) ((refl) (m)))),0.02091814805430452), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n),Some(((ass2) (m)) (n)),0.007170511118904732), (((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),Some(((ass1) (m)) (n)),0.007170511059455534), ((`$brtwo : M ) ~> (((eqM) (((mul) (((mul) (m)) (n))) (`$brtwo))) (((mul) (((mul) (m)) (n))) (`$brtwo))),Some((`$brtwo :  M) ↦ (((((right-multiply) (`$brtwo)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n))))),0.004769161057829442), ((`$fopnn : M ) ~> (((eqM) (((mul) (`$fopnn)) (n))) (((mul) (`$fopnn)) (n))),Some((`$fopnn :  M) ↦ (((((left-multiply) (`$fopnn)) (n)) (n)) ((refl) (n)))),0.00450826804922283), ((`$fombm : M ) ~> (((eqM) (((mul) (`$fombm)) (m))) (((mul) (`$fombm)) (m))),Some((`$fombm :  M) ↦ (((((left-multiply) (`$fombm)) (m)) (m)) ((refl) (m)))),0.004508268049222829), ((`$foeff : M ) ~> (((eqM) (((mul) (`$foeff)) (((mul) (m)) (n)))) (((mul) (`$foeff)) (((mul) (m)) (n)))),Some((`$foeff :  M) ↦ (((((left-multiply) (`$foeff)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n))))),0.002374318692753421), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),5.314297939934625E-4), (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),5.29407402800838E-4), (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),5.29407402800838E-4), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),5.294073973122456E-4), (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),5.294073973122456E-4), (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (n)) (n)) ((refl) (n))),5.273928388553668E-4), (((eqM) (((mul) (m)) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (m)) (m)) ((refl) (m))),5.273928388553668E-4), (((eqM) (((mul) (n)) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (n)) (n)) ((refl) (n))),5.273928388553668E-4), ((`b : M ) ~> (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (`b)))) (`b)),Some((ass2) (((mul) (m)) (n))),5.5193615562308156E-5), ((`b : M ) ~> (((eqM) (((mul) (n)) (((mul) (n)) (`b)))) (`b)),Some((ass2) (n)),5.3762917030506095E-5), ((`b : M ) ~> (((eqM) (((mul) (m)) (((mul) (m)) (`b)))) (`b)),Some((ass2) (m)),5.3762917030506095E-5), ((`b : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (`b))) (`b))) (((mul) (m)) (n))),Some((ass1) (((mul) (m)) (n))),5.1684359768804715E-5), ((`b : M ) ~> (((eqM) (((mul) (((mul) (m)) (`b))) (`b))) (m)),Some((ass1) (m)),5.0379791593279946E-5), ((`b : M ) ~> (((eqM) (((mul) (((mul) (n)) (`b))) (`b))) (n)),Some((ass1) (n)),5.0379791593279946E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))),2.3073634838315483E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),Some(((ass2) (((mul) (m)) (n))) (n)),2.2977485693514087E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m),Some(((ass2) (((mul) (m)) (n))) (m)),2.2977485693514087E-5), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (n)) (((mul) (m)) (n))),2.297489545375913E-5), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (m)) (((mul) (m)) (n))),2.2974673559772956E-5), (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m),Some(((ass2) (n)) (m)),2.2879163118153278E-5), (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m),Some(((ass2) (m)) (m)),2.2879163118153278E-5), (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n),Some(((ass2) (n)) (n)),2.2879163118153278E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))),1.997860549107001E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (m)),1.9895351558393672E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m),Some(((ass1) (m)) (((mul) (m)) (n))),1.9895332760618707E-5), (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n),Some(((ass1) (n)) (((mul) (m)) (n))),1.9895332760618707E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (n)),1.9895159406954435E-5), (((eqM) (((mul) (((mul) (m)) (m))) (m))) (m),Some(((ass1) (m)) (m)),1.9812430476845447E-5), (((eqM) (((mul) (((mul) (n)) (n))) (n))) (n),Some(((ass1) (n)) (n)),1.9812430476845447E-5), (((eqM) (((mul) (((mul) (n)) (m))) (m))) (n),Some(((ass1) (n)) (m)),1.9812430476845447E-5), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (n)),7.828730688089157E-6), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (m)),6.175785469557594E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))),4.4712663695008963E-7), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (m)),4.3571079833540616E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (n))),4.274795805415299E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (n))),4.274795805415299E-7), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (m)),4.165458900823234E-7), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (m))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (m)),4.165458900823234E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))),2.2607706852732793E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (n)),2.2180950122658564E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (n))),2.189457953251705E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (n))),2.189457953251705E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (n)),2.1480032394298764E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (n)),2.1480032394298764E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (n)),1.4558077787105263E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (n))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (n)),1.4081330468898848E-7), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (m)),9.366276855929399E-8), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (m)),9.119119171562984E-8), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (m)) (`b))) (((mul) (m)) (`c))))),Some((left-multiply) (m)),6.3922481693730955E-12), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (n)) (`b))) (((mul) (n)) (`c))))),Some((left-multiply) (n)),6.3922481693730955E-12), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (n))) (((mul) (`c)) (n))))),Some((right-multiply) (n)),6.392212451708716E-12), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))),Some((right-multiply) (m)),6.392212451708716E-12), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))),Some((left-multiply) (((mul) (m)) (n))),6.3888337931120934E-12), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n)))))),Some((right-multiply) (((mul) (m)) (n))),6.388779806380783E-12), ((`$aowygc : M ) ~> (((eqM) (((mul) (`$aowygc)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (`$aowygc)) (((mul) (m)) (n)))),Some((`$aowygc :  M) ↦ (((((left-multiply) (`$aowygc)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))))),9.931918389505926E-8), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),4.11230979359635E-8), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4122568634086163E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.507413680813849E-8), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)),1.3777405772098702E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),4.412754301431161E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))),0.003674574799506637), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0229539424879786E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)),4.379305361148661E-7), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)),3.792301430124742E-7), ((`$aoftyg : M ) ~> ((((eqM) (m)) (`$aoftyg)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`$aoftyg))),Some((`$aoftyg :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (`$aoftyg)) (((ass2) (((mul) (m)) (n))) (m)))),9.715481729741924E-8), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)),3.792301430124742E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.533780171228513E-8), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)),3.806756475105795E-7), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)),Some((((sym) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),8.192841372452283E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.1814066854728746E-5), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)),3.806756475105795E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.1814066854728746E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),3.835403900892765E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)),1.372509021467439E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0268530978865012E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.520782795314283E-8), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)),Some((((sym) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),8.192841372452283E-7), ((`$tlnbi : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$tlnbi))) (((mul) (n)) (`$tlnbi))),Some((`$tlnbi :  M) ↦ (((((right-multiply) (`$tlnbi)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))),9.741965086736993E-8), ((`$amypqq : M ) ~> (((eqM) (((mul) (`$amypqq)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$amypqq)) (m))),Some((`$amypqq :  M) ↦ (((((left-multiply) (`$amypqq)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n))))),5.4355718676804574E-8), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.533780171228513E-8), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.533808425084433E-8), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (n))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (n)) (n)),0.08537935626544958), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),4.0506551130714044E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.1859098092834233E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),4.0506551130714044E-8), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.2695243362016099E-5), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)),3.806756475105795E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.181406673224727E-5), ((`$tdsgy : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$tdsgy))) (((mul) (((mul) (m)) (n))) (`$tdsgy))),Some((`$tdsgy :  M) ↦ (((((right-multiply) (`$tdsgy)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))))),5.5220391226889815E-8), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.507413680813849E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.1859098092834233E-5), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),3.8208364737942374E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),3.8642632676437197E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.1904301196943902E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)),4.39599787811908E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))),1.1769206267141309E-5), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.520782795314283E-8), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),3.8208364737942374E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.547278147722509E-8), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.520782795314283E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))),1.0153143465898486E-5), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)),3.792301430124742E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.507413680813849E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.0191844745115444E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.445957485805155E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0268530978865012E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4122568634086163E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.0191844745115444E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),4.0660948862844994E-8), ((`$aovkzf : M ) ~> (((eqM) (((mul) (`$aovkzf)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (`$aovkzf)) (n))),Some((`$aovkzf :  M) ↦ (((((left-multiply) (`$aovkzf)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))),9.741965086736993E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0268531906653823E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0268531906653823E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),3.8208364737942374E-7), ((`$ankubg : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (`$ankubg))) (((mul) (m)) (`$ankubg))),Some((`$ankubg :  M) ↦ (((((right-multiply) (`$ankubg)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m)))),5.3511045533482857E-8), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),4.0966899721667184E-8), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.547278147722509E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.0191844745115444E-5), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.533780171228513E-8), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),3.820840075686066E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),3.8495898574275154E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))),0.003674574799506637), (((eqM) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))),Some((((sym) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),9.46184609294451E-7), ((`$aottht : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$aottht))) (((mul) (m)) (`$aottht))),Some((`$aottht :  M) ↦ (((((right-multiply) (`$aottht)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n))))),5.4355718676804574E-8), ((`$anotja : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (`$anotja))) (((mul) (n)) (`$anotja))),Some((`$anotja :  M) ↦ (((((right-multiply) (`$anotja)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n)))),9.636895003378526E-8), ((`$speki : M ) ~> (((eqM) (((mul) (`$speki)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$speki)) (n))),Some((`$speki :  M) ↦ (((((left-multiply) (`$speki)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n))))),5.4355718676804574E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))),1.0191843824255527E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))),1.0153143465898486E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),3.8208364737942374E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),4.429574315106481E-7), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),3.8208364737942374E-7), ((`$aopsdc : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`$aopsdc))) (((mul) (((mul) (m)) (n))) (`$aopsdc))),Some((`$aopsdc :  M) ↦ (((((right-multiply) (`$aopsdc)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n))))),9.824740403631531E-8), ((`$aoxelo : M ) ~> (((eqM) (((mul) (`$aoxelo)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (`$aoxelo)) (m))),Some((`$aoxelo :  M) ↦ (((((left-multiply) (`$aoxelo)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m)))),9.636895003378526E-8), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))),1.1724516365297217E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))),1.0191843824255527E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),4.429574315106481E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4629040594421425E-7), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),4.0506551130714044E-8), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.547249786172124E-8), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)),4.379305361148661E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.533808425084433E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0268531906653823E-5), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.0430108905069887), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (m)) (m)),0.04285239758659354), ((`$tmaxy : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$tmaxy)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`$tmaxy))),Some((`$tmaxy :  M) ↦ (((((trans) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (`$tmaxy)) (((ass2) (m)) (((mul) (m)) (n))))),9.800035705502621E-8), (((eqM) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))),Some((((sym) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),8.192906877194655E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))) (n)),1.372509021467439E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.1814066854728746E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),3.820840075686066E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),4.429574315106481E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4122568634086163E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.0230692619695377E-5), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),4.081134023310736E-8), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),4.0660948862844994E-8), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.181406673224727E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))),1.1724516365297217E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),3.835400285271672E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.533808425084433E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))),1.0153143465898486E-5), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),4.081134023310736E-8), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.2743633479875654E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),4.11230979359635E-8), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),3.820840075686066E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.560373334287169E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.1859098314103857E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),4.097155772648502E-8), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))) (m)),1.3725090100882552E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))),0.003688581039251824), ((`$aoynxm : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`$aoynxm))) (((mul) (m)) (`$aoynxm))),Some((`$aoynxm :  M) ↦ (((((right-multiply) (`$aoynxm)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m)))),9.741965086736993E-8), ((`$aoawns : M ) ~> (((eqM) (((mul) (`$aoawns)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$aoawns)) (((mul) (m)) (n)))),Some((`$aoawns :  M) ↦ (((((left-multiply) (`$aoawns)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))))),5.5220391226889815E-8), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.181406673224727E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),3.8495898574275154E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0229539424879786E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)),4.379305361148661E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.547278147722509E-8), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)),1.377740588632428E-4), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.533808425084433E-8), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.533780171228513E-8), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4290749810086586E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),4.0660948862844994E-8), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.547249786172124E-8), ((`$anufrw : M ) ~> ((((eqM) (n)) (`$anufrw)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`$anufrw))),Some((`$anufrw :  M) ↦ (((((trans) (((mul) (m)) (((mul) (m)) (n)))) (n)) (`$anufrw)) (((ass2) (m)) (n)))),1.1714260201675061E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.445957485805155E-7), ((`$anacqh : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (`$anacqh))) (((mul) (m)) (`$anacqh))),Some((`$anacqh :  M) ↦ (((((right-multiply) (`$anacqh)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m)))),9.636895003378526E-8), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)),1.3725090100882552E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0229539424879786E-5), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)),3.792301430124742E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0229539424879786E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.445957485805155E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.507413680813849E-8), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),4.412754301431161E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)),4.379305361148661E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))),0.003674574868067651), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.1814066854728746E-5), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (n)) (n)),0.04285239758659354), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.0430108905069887), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)),4.379305361148661E-7), ((`$aohxyi : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aohxyi)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`$aohxyi))),Some((`$aohxyi :  M) ↦ (((((trans) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (`$aohxyi)) (((ass2) (n)) (((mul) (m)) (n))))),9.800035705502621E-8), ((`$anzowp : M ) ~> (((eqM) (((mul) (`$anzowp)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (`$anzowp)) (m))),Some((`$anzowp :  M) ↦ (((((left-multiply) (`$anzowp)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m)))),9.636895003378526E-8), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.533808425084433E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))),1.0153143465898486E-5), ((`$anewoy : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (`$anewoy))) (((mul) (m)) (`$anewoy))),Some((`$anewoy :  M) ↦ (((((right-multiply) (`$anewoy)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m)))),9.636895003378526E-8), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)),1.377740588632428E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.1814066854728746E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),4.097155772648502E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.0191844745115444E-5), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),3.835400285271672E-7), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)),3.792301430124742E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4290749810086586E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))),1.0153143465898486E-5), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.547278147722509E-8), ((`$anxvdf : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$anxvdf)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`$anxvdf))),Some((`$anxvdf :  M) ↦ (((((trans) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (`$anxvdf)) (((ass1) (((mul) (m)) (n))) (n)))),5.338367640166718E-8), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))),1.1724516365297217E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))),1.1769206267141309E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.0191844745115444E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)),1.372509021467439E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),3.835403900892765E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.0191844745115444E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),4.081134023310736E-8), ((`$aodwjv : M ) ~> ((((eqM) (m)) (`$aodwjv)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (`$aodwjv))),Some((`$aodwjv :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (n))) (m)) (`$aodwjv)) (((ass1) (m)) (n)))),1.16759338006788E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)),1.3725090100882552E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),4.412754301431161E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),4.0660948862844994E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.0230692619695377E-5), ((`$tnagh : M ) ~> ((((eqM) (n)) (`$tnagh)) → (((eqM) (((mul) (((mul) (n)) (n))) (n))) (`$tnagh))),Some((`$tnagh :  M) ↦ (((((trans) (((mul) (((mul) (n)) (n))) (n))) (n)) (`$tnagh)) (((ass1) (n)) (n)))),5.257632178097014E-8), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.1769206486733711E-5), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)),3.792301430124742E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),3.835403900892765E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.507413680813849E-8), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.507413680813849E-8), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)),3.806756475105795E-7), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),4.081134023310736E-8), (((eqM) (n)) (((mul) (((mul) (n)) (n))) (n)),Some((((sym) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),8.131712365256422E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))) (n)),1.372509021467439E-4), ((`$aouwhz : M ) ~> ((((eqM) (n)) (`$aouwhz)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$aouwhz))),Some((`$aouwhz :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (`$aouwhz)) (((ass2) (((mul) (m)) (n))) (n)))),9.715481729741924E-8), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.520782795314283E-8), ((`$annbsc : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (`$annbsc))) (((mul) (n)) (`$annbsc))),Some((`$annbsc :  M) ↦ (((((right-multiply) (`$annbsc)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m)))),5.3511045533482857E-8), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)),4.39599787811908E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.2743633479875654E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),4.0966899721667184E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0229539424879786E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4629040594421425E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))),1.0191843824255527E-5), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.533780171228513E-8), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),4.412754301431161E-7), (((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),9.462921920624562E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),4.097155772648502E-8), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),4.0506551130714044E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0229539424879786E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),4.412754301431161E-7), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),3.835400285271672E-7), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.0430108905069887), ((((eqM) (m)) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (m)) (m)),0.04285239758659354), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),4.0506551130714044E-8), ((`$aorrkq : M ) ~> ((((eqM) (n)) (`$aorrkq)) → (((eqM) (((mul) (((mul) (n)) (m))) (m))) (`$aorrkq))),Some((`$aorrkq :  M) ↦ (((((trans) (((mul) (((mul) (n)) (m))) (m))) (n)) (`$aorrkq)) (((ass1) (n)) (m)))),5.257632178097014E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.1814066854728746E-5), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),4.0506551130714044E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.0191844745115444E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.2695243362016099E-5), ((((eqM) (m)) (m)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (m)) (m)),0.04268967813272479), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (n)) (n)),0.04268967813272479), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)),4.39599787811908E-7), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),4.081134023310736E-8), ((`$aokfix : M ) ~> (((eqM) (((mul) (`$aokfix)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (`$aokfix)) (m))),Some((`$aokfix :  M) ↦ (((((left-multiply) (`$aokfix)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m)))),5.3511045533482857E-8), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))),0.003688581039251824), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.1859098092834233E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.2695244377447745E-5), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.573944313675985E-8), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)),4.379305361148661E-7), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)),3.806756475105795E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))),0.003674574868067651), ((`$ansowg : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`$ansowg))) (((mul) (((mul) (m)) (n))) (`$ansowg))),Some((`$ansowg :  M) ↦ (((((right-multiply) (`$ansowg)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))))),9.931918389505926E-8), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.560373334287169E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))),1.0191843824255527E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))),1.1724516365297217E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.533808425084433E-8), ((`$tjgek : M ) ~> (((eqM) (((mul) (`$tjgek)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (`$tjgek)) (n))),Some((`$tjgek :  M) ↦ (((((left-multiply) (`$tjgek)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m)))),5.3511045533482857E-8), (((eqM) (m)) (((mul) (((mul) (m)) (m))) (m)),Some((((sym) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),8.131712365256422E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.1859098092834233E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))),1.1724516365297217E-5), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)),3.792301430124742E-7), (((eqM) (m)) (((mul) (((mul) (m)) (n))) (n)),Some((((sym) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),2.943310574824529E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))),1.1724516365297217E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)),1.3777405772098702E-4), ((((eqM) (n)) (n)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (n)) (n)),0.04268967813272479), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (m)) (m)),0.04268967813272479), (((eqM) (n)) (((mul) (m)) (((mul) (m)) (n))),Some((((sym) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),2.9433103394032483E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),4.08159805505519E-8), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)),4.39599787811908E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),4.429574315106481E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.547249786172124E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0307672086827868E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4290749810086586E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.533780171228513E-8), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n))),0.08634966864020623), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))),1.1769206267141309E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),4.08159805505519E-8), ((`$swksc : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$swksc))) (((mul) (n)) (`$swksc))),Some((`$swksc :  M) ↦ (((((right-multiply) (`$swksc)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n))))),5.4355718676804574E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))),1.0153143465898486E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),3.8208364737942374E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4290749810086586E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.0230692619695377E-5), (((eqM) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))),Some((((sym) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),8.192906877194655E-7), ((`$anxqrd : M ) ~> (((eqM) (((mul) (`$anxqrd)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (`$anxqrd)) (m))),Some((`$anxqrd :  M) ↦ (((((left-multiply) (`$anxqrd)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m)))),9.741965086736993E-8), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))),1.1769206267141309E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4122568634086163E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0268530978865012E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))),1.1724516365297217E-5), (((eqM) (n)) (((mul) (n)) (((mul) (n)) (n))),Some((((sym) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),9.391182704749465E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)),4.379305361148661E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.1769206486733711E-5), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),4.0506551130714044E-8), ((`$apadox : M ) ~> (((eqM) (((mul) (`$apadox)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (`$apadox)) (((mul) (m)) (n)))),Some((`$apadox :  M) ↦ (((((left-multiply) (`$apadox)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n))))),9.824740403631531E-8), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)),4.379305361148661E-7), (((eqM) (n)) (((mul) (((mul) (n)) (m))) (m)),Some((((sym) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),8.131712365256422E-7), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),4.0966899721667184E-8), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),4.127984574297929E-8), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),4.08159805505519E-8), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),4.0966899721667184E-8), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),4.412754301431161E-7), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),3.8208364737942374E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),3.820840075686066E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))),1.0153143465898486E-5), ((`$aoarga : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aoarga)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`$aoarga))),Some((`$aoarga :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (`$aoarga)) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))))),9.904208208626399E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))),0.003674574868067651), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)),3.792301430124742E-7), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),4.081134023310736E-8), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4122568634086163E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.445957485805155E-7), (((eqM) (m)) (((mul) (n)) (((mul) (n)) (m))),Some((((sym) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),9.391182704749465E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.533808425084433E-8), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.274363449917779E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))),1.0153143465898486E-5), ((`$anckrc : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`$anckrc))) (((mul) (((mul) (m)) (n))) (`$anckrc))),Some((`$anckrc :  M) ↦ (((((right-multiply) (`$anckrc)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n))))),9.824740403631531E-8), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),3.8208364737942374E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.1769206486733711E-5), ((`$tbozs : M ) ~> (((eqM) (((mul) (`$tbozs)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (`$tbozs)) (((mul) (m)) (n)))),Some((`$tbozs :  M) ↦ (((((left-multiply) (`$tbozs)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n))))),9.824740403631531E-8), ((`$anrize : M ) ~> (((eqM) (((mul) (`$anrize)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (`$anrize)) (n))),Some((`$anrize :  M) ↦ (((((left-multiply) (`$anrize)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n)))),9.636895003378526E-8), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),3.8495898574275154E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),4.08159805505519E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))),1.0153143465898486E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0307672086827868E-5), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (m)) (m)),0.08537935626544958), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))),1.0153143465898486E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))),1.1724516365297217E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),3.820840075686066E-7), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)),3.792301430124742E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0268530978865012E-5), ((`$anvmxu : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`$anvmxu))) (((mul) (((mul) (m)) (n))) (`$anvmxu))),Some((`$anvmxu :  M) ↦ (((((right-multiply) (`$anvmxu)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m)))),5.436202098020506E-8), (((eqM) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))),Some((((sym) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),9.46184609294451E-7), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)),3.792301430124742E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.1904301196943902E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))) (m)),1.3725090100882552E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)),4.379305361148661E-7), ((`$anrsoh : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`$anrsoh))) (((mul) (((mul) (m)) (n))) (`$anrsoh))),Some((`$anrsoh :  M) ↦ (((((right-multiply) (`$anrsoh)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n)))),5.436202098020506E-8), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.547249786172124E-8), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)),4.379305361148661E-7), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))),Some((((sym) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),8.254495905551207E-7), ((`$aolgtx : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aolgtx)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`$aolgtx))),Some((`$aolgtx :  M) ↦ (((((trans) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (`$aolgtx)) (((ass1) (((mul) (m)) (n))) (m)))),5.338367640166718E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.1859098314103857E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),3.8495898574275154E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)),4.379305361148661E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),4.08159805505519E-8), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),4.081134023310736E-8), ((`$aniczl : M ) ~> ((((eqM) (m)) (`$aniczl)) → (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`$aniczl))),Some((`$aniczl :  M) ↦ (((((trans) (((mul) (m)) (((mul) (m)) (m)))) (m)) (`$aniczl)) (((ass2) (m)) (m)))),9.613349842799962E-8), ((`$aomumi : M ) ~> ((((eqM) (n)) (`$aomumi)) → (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$aomumi))),Some((`$aomumi :  M) ↦ (((((trans) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (`$aomumi)) (((ass1) (n)) (((mul) (m)) (n))))),5.339159950454646E-8), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))),1.1724516365297217E-5), ((`$anbigm : M ) ~> ((((eqM) (m)) (`$anbigm)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$anbigm))),Some((`$anbigm :  M) ↦ (((((trans) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (`$anbigm)) (((ass1) (m)) (((mul) (m)) (n))))),5.339159950454646E-8), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.533780171228513E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0268531906653823E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),3.820840075686066E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.533780171228513E-8), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),4.0506551130714044E-8), ((`$anbgrc : M ) ~> (((eqM) (((mul) (`$anbgrc)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (`$anbgrc)) (((mul) (m)) (n)))),Some((`$anbgrc :  M) ↦ (((((left-multiply) (`$anbgrc)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n)))),5.436202098020506E-8), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)),4.39599787811908E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0229539424879786E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.1814066854728746E-5), ((`$anutxq : M ) ~> (((eqM) (((mul) (`$anutxq)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (`$anutxq)) (m))),Some((`$anutxq :  M) ↦ (((((left-multiply) (`$anutxq)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)))),1.1678629848324206E-5), ((`$anwsyi : M ) ~> ((((eqM) (m)) (`$anwsyi)) → (((eqM) (((mul) (((mul) (m)) (m))) (m))) (`$anwsyi))),Some((`$anwsyi :  M) ↦ (((((trans) (((mul) (((mul) (m)) (m))) (m))) (m)) (`$anwsyi)) (((ass1) (m)) (m)))),5.257632178097014E-8), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.2695244377447745E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.1859098314103857E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))),1.1724516365297217E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))),0.003674574799506637), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.2695244377447745E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))),1.0153143465898486E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.274363449917779E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),4.097155772648502E-8), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),4.08159805505519E-8), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.533808425084433E-8), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)),3.806756475105795E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.1769206486733711E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))),1.0191843824255527E-5), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),4.0506551130714044E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),0.00368858110807417), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),3.8642632676437197E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),3.820840075686066E-7), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),4.0660948862844994E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.1859098314103857E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.181406673224727E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)),4.39599787811908E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))),1.1724516365297217E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))),1.1769206267141309E-5), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.507413680813849E-8), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)),3.792301430124742E-7), ((`$anfate : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (`$anfate))) (((mul) (n)) (`$anfate))),Some((`$anfate :  M) ↦ (((((right-multiply) (`$anfate)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n)))),5.3511045533482857E-8), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.560373334287169E-8), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.0430108905069887), ((((eqM) (n)) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (n)) (n)),0.04285239758659354), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),4.127984574297929E-8), ((`$amzrvx : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (`$amzrvx))) (((mul) (m)) (`$amzrvx))),Some((`$amzrvx :  M) ↦ (((((right-multiply) (`$amzrvx)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)))),1.1678629848324206E-5), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),4.0506551130714044E-8), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)),4.379305361148661E-7), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),4.081134023310736E-8), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4122568634086163E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),3.820840075686066E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.0229539424879786E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.1769206486733711E-5), ((`$andeig : M ) ~> ((((eqM) (m)) (`$andeig)) → (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`$andeig))),Some((`$andeig :  M) ↦ (((((trans) (((mul) (n)) (((mul) (n)) (m)))) (m)) (`$andeig)) (((ass2) (n)) (m)))),9.613349842799962E-8), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))),1.1769206267141309E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),3.835403900892765E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.1769206486733711E-5), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.507413680813849E-8), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),4.08159805505519E-8), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))),0.003674574799506637), ((`$anpqch : M ) ~> (((eqM) (((mul) (`$anpqch)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (`$anpqch)) (n))),Some((`$anpqch :  M) ↦ (((((left-multiply) (`$anpqch)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n)))),5.3511045533482857E-8), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),4.0506551130714044E-8), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.507413680813849E-8), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.1769206486733711E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),4.0660948862844994E-8), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.520782795314283E-8), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),9.534125106225284E-7), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)),3.792301430124742E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.0191844745115444E-5), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),4.0506551130714044E-8), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))),1.1724516365297217E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))),1.0191843824255527E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.560373334287169E-8), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),4.412754301431161E-7), ((`$sljmh : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (`$sljmh))) (((mul) (n)) (`$sljmh))),Some((`$sljmh :  M) ↦ (((((right-multiply) (`$sljmh)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n)))),1.1716472363914186E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),4.11230979359635E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))),1.0153143465898486E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.1814066854728746E-5), ((`$aowbrq : M ) ~> (((eqM) (((mul) (`$aowbrq)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (`$aowbrq)) (n))),Some((`$aowbrq :  M) ↦ (((((left-multiply) (`$aowbrq)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n)))),1.1716472363914186E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),0.00368858110807417), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),3.835400285271672E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),4.08159805505519E-8), (((eqM) (m)) (((mul) (m)) (((mul) (m)) (m))),Some((((sym) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),9.391182704749465E-7), (((eqM) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))),Some((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),9.462921920624562E-7), ((`$aotugt : M ) ~> (((eqM) (((mul) (`$aotugt)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (`$aotugt)) (((mul) (m)) (n)))),Some((`$aotugt :  M) ↦ (((((left-multiply) (`$aotugt)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m)))),5.436202098020506E-8), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.507413680813849E-8), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),4.412754301431161E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.520782795314283E-8), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),4.11230979359635E-8), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.2695243362016099E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.507413680813849E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))),0.003674574868067651), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.573944313675985E-8), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.507413680813849E-8), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.1769206486733711E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4122568634086163E-7), ((`$anjgvw : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$anjgvw)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$anjgvw))),Some((`$anjgvw :  M) ↦ (((((trans) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (`$anjgvw)) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))))),5.4211698109283204E-8), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),4.4122568634086163E-7), ((`$twtbd : M ) ~> ((((eqM) (n)) (`$twtbd)) → (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`$twtbd))),Some((`$twtbd :  M) ↦ (((((trans) (((mul) (n)) (((mul) (n)) (n)))) (n)) (`$twtbd)) (((ass2) (n)) (n)))),9.613349842799962E-8), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.0230692619695377E-5)))
2020.06.24 06:58:29 [INFO] provingground.learning.HoTTBot.scribeLog:1893:16 - Post; tag: TypeTag[provingground.learning.HoTTMessages.Lemmas], id: (18,-751676604)
2020.06.24 06:58:29 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[(provingground.learning.HoTTMessages.UsedLemmas :: provingground.learning.HoTTMessages.TangentLemmas :: shapeless.HNil) :: provingground.learning.HoTTMessages.BaseMixinLemmas :: shapeless.HNil] to posts of type TypeTag[provingground.learning.HoTTMessages.Lemmas]
2020.06.24 06:58:29 [INFO] provingground.learning.HoTTBot.$anonfun:857:24 - excluded lemmas:

2020.06.24 06:58:29 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.UsedLemmas], id: (19,1011448966), content:
UsedLemmas(Vector(((`$fqdoc : M ) ~> (((eqM) (((mul) (n)) (`$fqdoc))) (((mul) (n)) (`$fqdoc))),0.002660677791416006), ((`$bscxj : M ) ~> (((eqM) (((mul) (m)) (`$bscxj))) (((mul) (m)) (`$bscxj))),0.002660677791416006), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n),0.0012575089981038978), (((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),0.0012575089908058784), ((`$brtwo : M ) ~> (((eqM) (((mul) (((mul) (m)) (n))) (`$brtwo))) (((mul) (((mul) (m)) (n))) (`$brtwo))),9.452254669633188E-4), ((`$fopnn : M ) ~> (((eqM) (((mul) (`$fopnn)) (n))) (((mul) (`$fopnn)) (n))),9.087257465179378E-4), ((`$fombm : M ) ~> (((eqM) (((mul) (`$fombm)) (m))) (((mul) (`$fombm)) (m))),9.087257465179377E-4), ((`$foeff : M ) ~> (((eqM) (((mul) (`$foeff)) (((mul) (m)) (n)))) (((mul) (`$foeff)) (((mul) (m)) (n)))),5.801006204929594E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.0344084503634913E-4), (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m)),2.0289858985977978E-4), (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n)),2.0289858985977978E-4), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),2.028985883873044E-4), (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),2.028985883873044E-4), (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m)),2.023578151796587E-4), (((eqM) (((mul) (m)) (m))) (((mul) (m)) (m)),2.023578151796587E-4), (((eqM) (((mul) (n)) (n))) (((mul) (n)) (n)),2.023578151796587E-4), ((`b : M ) ~> (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (`b)))) (`b)),4.168196771035336E-5), ((`b : M ) ~> (((eqM) (((mul) (n)) (((mul) (n)) (`b)))) (`b)),4.092267351914133E-5), ((`b : M ) ~> (((eqM) (((mul) (m)) (((mul) (m)) (`b)))) (`b)),4.092267351914133E-5), ((`b : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (`b))) (`b))) (((mul) (m)) (n))),3.9808647297241465E-5), ((`b : M ) ~> (((eqM) (((mul) (((mul) (m)) (`b))) (`b))) (m)),3.910258587374045E-5), ((`b : M ) ~> (((eqM) (((mul) (((mul) (n)) (`b))) (`b))) (n)),3.910258587374045E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)),2.26363933749912E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),2.2570323033921284E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m),2.2570323033921284E-5), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)),2.256854196543623E-5), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)),2.256838938664854E-5), (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m),2.2502673354675572E-5), (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m),2.2502673354675572E-5), (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n),2.2502673354675572E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)),2.0465466170671026E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),2.0405730858162146E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m),2.0405717362161686E-5), (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n),2.0405717362161686E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)),2.0405592901446206E-5), (((eqM) (((mul) (((mul) (m)) (m))) (m))) (m),2.0346159781026912E-5), (((eqM) (((mul) (((mul) (n)) (n))) (n))) (n),2.0346159781026912E-5), (((eqM) (((mul) (((mul) (n)) (m))) (m))) (n),2.0346159781026912E-5), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (`c)))),1.0622089813328828E-5), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (n))) (((mul) (`c)) (n)))),8.997266049489966E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),1.4319485104203117E-6), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (`c)))),1.406257488520603E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (`c)))),1.3876079648776408E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (`c)))),1.3876079648776408E-6), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (`c)))),1.3626678811748625E-6), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (m))) (((mul) (m)) (`c)))),1.3626678811748625E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),8.883939269447522E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),8.766215112165727E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (`c)) (m)))),8.686836517691665E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (`c)) (n)))),8.686836517691665E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (m))) (((mul) (`c)) (m)))),8.571374569814914E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (n))) (((mul) (`c)) (n)))),8.571374569814914E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (`c)))),6.528281105810839E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (n))) (((mul) (n)) (`c)))),6.377883843644906E-7), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),4.794274711354235E-7), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (m))) (((mul) (`c)) (m)))),4.705362052589885E-7), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (m)) (`b))) (((mul) (m)) (`c))))),5.815453146025387E-10), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (n)) (`b))) (((mul) (n)) (`c))))),5.815453146025387E-10), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (n))) (((mul) (`c)) (n))))),5.815430399692549E-10), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))),5.815430399692549E-10), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))),5.813278572207162E-10), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n)))))),5.813244185929261E-10), ((`$aowygc : M ) ~> (((eqM) (((mul) (`$aowygc)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (`$aowygc)) (((mul) (m)) (n)))),4.995157903994928E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),2.694549081025132E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),1.4186934804809774E-6), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (n)),2.4105542841771827E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m))),7.907573483767095E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (m)) (n))),1.4188054390811585E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),7.875370353623358E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),1.280929649002908E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (n)) (n))),1.4112686103853623E-6), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (m)) (n))),1.2760215726469301E-6), ((`$aoftyg : M ) ~> ((((eqM) (m)) (`$aoftyg)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`$aoftyg))),4.918708204543473E-7), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (n)) (m))),1.2760215726469301E-6), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (((mul) (m)) (n))),2.4232247298672476E-7), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (n))),1.2794242806612045E-6), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)),2.187913783138382E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (`c)) (n)))),1.4167904433124141E-5), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),1.2794242806612045E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (`c)) (n)))),1.4167904433124141E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.286156437358378E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (n))),7.8865428487281E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),1.2843454283839403E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (m)),2.416982384370106E-7), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)),2.187913783138382E-6), ((`$tlnbi : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$tlnbi))) (((mul) (n)) (`$tlnbi))),4.928089879716895E-7), ((`$amypqq : M ) ~> (((eqM) (((mul) (`$amypqq)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$amypqq)) (m))),3.2756515067735954E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (((mul) (m)) (n))) (m)),2.4232247298672476E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n)),2.4232382920442556E-7), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (n))) (((mul) (n)) (n))),0.007121525522103196), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (n)),2.666206046626669E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.4205685146430896E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (m)) (n)),2.666206046626669E-7), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (n)),1.4899604591961057E-5), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (m))),1.2794242806612045E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),1.4167904330304841E-5), ((`$tdsgy : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$tdsgy))) (((mul) (((mul) (m)) (n))) (`$tdsgy))),3.3120406413361736E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (n)) (n)),2.4105542841771827E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),1.4205685146430896E-5), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m))),1.2827349782955974E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.2929231645648165E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.4243566793364347E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),1.4150319754519487E-6), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.4130223912372054E-5), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),2.416982384370106E-7), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.2827349782955974E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n)),2.4297002160236635E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (n)),2.416982384370106E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (`c)) (n)))),1.2742257812310272E-5), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (n))),1.2760215726469301E-6), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (n)) (m)),2.4105542841771827E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (`c)) (n)))),1.2776237646097912E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),1.4262699614255286E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),1.2843454283839403E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),1.4186934804809774E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (`c)))),1.2776237646097912E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),2.6733158800986173E-7), ((`$aovkzf : M ) ~> (((eqM) (((mul) (`$aovkzf)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (`$aovkzf)) (n))),4.928089879716895E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),1.2843455096147328E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),1.2843455096147328E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (m))),1.2827349782955974E-6), ((`$ankubg : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (`$ankubg))) (((mul) (m)) (`$ankubg))),3.2399359699521766E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.687380682292919E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),2.4297002160236635E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (`c)))),1.2776237646097912E-5), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (((mul) (m)) (n))) (n)),2.4232247298672476E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (((mul) (m)) (n)))),1.2827358247569444E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (((mul) (m)) (n)))),1.2894845554338158E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),7.875370353623358E-4), (((eqM) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))),2.419965293464607E-6), ((`$aottht : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$aottht))) (((mul) (m)) (`$aottht))),3.2756515067735954E-7), ((`$anotja : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (`$anotja))) (((mul) (n)) (`$anotja))),4.890823732177555E-7), ((`$speki : M ) ~> (((eqM) (((mul) (`$speki)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$speki)) (n))),3.2756515067735954E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),1.2776236838041282E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (`c)))),1.2742257812310272E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (m))),1.2827349782955974E-6), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),1.4225889022620355E-6), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (n))),1.2827349782955974E-6), ((`$aopsdc : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`$aopsdc))) (((mul) (((mul) (m)) (n))) (`$aopsdc))),4.957363679983474E-7), ((`$aoxelo : M ) ~> (((eqM) (((mul) (`$aoxelo)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (`$aoxelo)) (m))),4.890823732177555E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (`c)) (m)))),1.4092643891902033E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.2776236838041282E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (m))),1.4225889022620355E-6), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.4300733299046765E-6), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (m)) (m)),2.666206046626669E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.429686617681101E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (m))),1.4112686103853623E-6), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (m)),2.4232382920442556E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),1.2843455096147328E-5), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),0.0044068769672491875), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),0.004395503293411272), ((`$tmaxy : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$tmaxy)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`$tmaxy))),4.948634544310519E-7), (((eqM) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))),2.187926028339431E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),7.8865428487281E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (`c)) (m)))),1.4167904433124141E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (((mul) (m)) (n)))),1.2827358247569444E-6), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),1.4225889022620355E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),1.4186934804809774E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.2810307283843186E-5), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),2.6802334426909426E-7), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),2.6733158800986173E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.4167904330304841E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (`c)) (m)))),1.4092643891902033E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (m))),1.2861555886398113E-6), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (n)),2.4232382920442556E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (`c)) (m)))),1.2742257812310272E-5), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),2.6802334426909426E-7), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),1.4939336595249337E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),2.694549081025132E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),1.2827358247569444E-6), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (((mul) (m)) (n))) (m)),2.435975407891416E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),1.4205685331967824E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),2.6875945704107995E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (m))),7.886542802958131E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),7.896371138243215E-4), ((`$aoynxm : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`$aoynxm))) (((mul) (m)) (`$aoynxm))),4.928089879716895E-7), ((`$aoawns : M ) ~> (((eqM) (((mul) (`$aoawns)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$aoawns)) (((mul) (m)) (n)))),3.3120406413361736E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.4167904330304841E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (((mul) (m)) (n))) (n))),1.2894845554338158E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),1.280929649002908E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (n))),1.4112686103853623E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (m)),2.4297002160236635E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),7.907573529659116E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (m)),2.4232382920442556E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (((mul) (m)) (n))),2.4232247298672476E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.422476645107007E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (m)),2.6733158800986173E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.429686617681101E-7), ((`$anufrw : M ) ~> ((((eqM) (n)) (`$anufrw)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`$anufrw))),1.4084013360740031E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),1.4262699614255286E-6), ((`$anacqh : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (`$anacqh))) (((mul) (m)) (`$anacqh))),4.890823732177555E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (m)) (m))),7.886542802958131E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),1.280929649002908E-5), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (m)) (m))),1.2760215726469301E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),1.280929649002908E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),1.4262699614255286E-6), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (m)) (n)),2.4105542841771827E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (m))),1.4188054390811585E-6), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (m))),1.4112686103853623E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (`c)))),7.875370456481617E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (`c)))),1.4167904433124141E-5), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),0.004395503293411272), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),0.0044068769672491875), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (m)) (n))),1.4112686103853623E-6), ((`$aohxyi : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aohxyi)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`$aohxyi))),4.948634544310519E-7), ((`$anzowp : M ) ~> (((eqM) (((mul) (`$anzowp)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (`$anzowp)) (m))),4.890823732177555E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m)),2.4232382920442556E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (`c)) (n)))),1.2742257812310272E-5), ((`$anewoy : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (`$anewoy))) (((mul) (m)) (`$anewoy))),4.890823732177555E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n))),7.907573529659116E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (`c)))),1.4167904433124141E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (n)),2.6875945704107995E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (`c)))),1.2776237646097912E-5), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),1.2861555886398113E-6), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (n)) (n))),1.2760215726469301E-6), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.422476645107007E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (`c)))),1.2742257812310272E-5), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),2.4297002160236635E-7), ((`$anxvdf : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$anxvdf)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`$anxvdf))),3.234535762913122E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (`c)))),1.4092643891902033E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.4130223912372054E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (`c)) (n)))),1.2776237646097912E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n))),7.8865428487281E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.286156437358378E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (`c)))),1.2776237646097912E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),2.6802334426909426E-7), ((`$aodwjv : M ) ~> ((((eqM) (m)) (`$aodwjv)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (`$aodwjv))),1.4051741721326358E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (m))),7.886542802958131E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (m)) (m))),1.4188054390811585E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (m)),2.6733158800986173E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.2810307283843186E-5), ((`$tnagh : M ) ~> ((((eqM) (n)) (`$tnagh)) → (((eqM) (((mul) (((mul) (n)) (n))) (n))) (`$tnagh))),3.200215038027102E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),1.4130224096923401E-5), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (n)) (m))),1.2760215726469301E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.286156437358378E-6), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (m)),2.4105542841771827E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (n)),2.4105542841771827E-7), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (n))),1.2794242806612045E-6), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),2.6802334426909426E-7), (((eqM) (n)) (((mul) (((mul) (n)) (n))) (n)),2.1764737204722516E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m))),7.8865428487281E-5), ((`$aouwhz : M ) ~> ((((eqM) (n)) (`$aouwhz)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$aouwhz))),4.918708204543473E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (n)),2.416982384370106E-7), ((`$annbsc : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (`$annbsc))) (((mul) (n)) (`$annbsc))),3.2399359699521766E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (n))),1.4150319754519487E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n)),1.4939336595249337E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.687380682292919E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),1.280929649002908E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.4300733299046765E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.2776236838041282E-5), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (((mul) (m)) (n))),2.4232247298672476E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (n))),1.4188054390811585E-6), (((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),2.420157898042501E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (m)),2.6875945704107995E-7), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (m)),2.666206046626669E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),1.280929649002908E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (m))),1.4188054390811585E-6), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n))),1.2861555886398113E-6), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),0.0044068769672491875), ((((eqM) (m)) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),0.004395503293411272), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (n)) (m)),2.666206046626669E-7), ((`$aorrkq : M ) ~> ((((eqM) (n)) (`$aorrkq)) → (((eqM) (((mul) (((mul) (n)) (m))) (m))) (`$aorrkq))),3.200215038027102E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (`c)) (m)))),1.4167904433124141E-5), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (m)),2.666206046626669E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (`c)) (m)))),1.2776237646097912E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n)),1.4899604591961057E-5), ((((eqM) (m)) (m)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m))),0.004383813180515294), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m))),0.004383813180515294), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),1.4150319754519487E-6), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),2.6802334426909426E-7), ((`$aokfix : M ) ~> (((eqM) (((mul) (`$aokfix)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (`$aokfix)) (m))),3.2399359699521766E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),7.896371138243215E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.4205685146430896E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (m)),1.4899605426184598E-5), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.442471297277607E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (m))),1.4112686103853623E-6), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),1.2794242806612045E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (`c)) (n)))),7.875370456481617E-4), ((`$ansowg : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`$ansowg))) (((mul) (((mul) (m)) (n))) (`$ansowg))),4.995157903994928E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (((mul) (m)) (n))) (n)),2.435975407891416E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.2776236838041282E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (`c)))),1.4092643891902033E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (m)) (n)),2.4232382920442556E-7), ((`$tjgek : M ) ~> (((eqM) (((mul) (`$tjgek)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (`$tjgek)) (n))),3.2399359699521766E-7), (((eqM) (m)) (((mul) (((mul) (m)) (m))) (m)),2.1764737204722516E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),1.4205685146430896E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (`c)))),1.4092643891902033E-5), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (n))),1.2760215726469301E-6), (((eqM) (m)) (((mul) (((mul) (m)) (n))) (n)),1.345275662410402E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (`c)) (m)))),1.4092643891902033E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),7.907573483767095E-5), ((((eqM) (n)) (n)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))),0.004383813180515294), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))),0.004383813180515294), (((eqM) (n)) (((mul) (m)) (((mul) (m)) (n))),1.3452755870889025E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (m)) (n)),2.6804467619613803E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (m))),1.4150319754519487E-6), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (n))),1.4225889022620355E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.429686617681101E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),1.2877703978693518E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.422476645107007E-6), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (((mul) (m)) (n))) (n)),2.4232247298672476E-7), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),0.007178083310761197), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),1.4130223912372054E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (n)) (m)),2.6804467619613803E-7), ((`$swksc : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$swksc))) (((mul) (n)) (`$swksc))),3.2756515067735954E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (`c)) (m)))),1.2742257812310272E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (m)) (n))),1.2827349782955974E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.422476645107007E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),1.2810307283843186E-5), (((eqM) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))),2.187926028339431E-6), ((`$anxqrd : M ) ~> (((eqM) (((mul) (`$anxqrd)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (`$anxqrd)) (m))),4.928089879716895E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),1.4130223912372054E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),1.4186934804809774E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.2843454283839403E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (`c)) (n)))),1.4092643891902033E-5), (((eqM) (n)) (((mul) (n)) (((mul) (n)) (n))),2.407300049052485E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (m)) (n))),1.4112686103853623E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),1.4130224096923401E-5), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (n)),2.666206046626669E-7), ((`$apadox : M ) ~> (((eqM) (((mul) (`$apadox)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (`$apadox)) (((mul) (m)) (n)))),4.957363679983474E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (n))),1.4112686103853623E-6), (((eqM) (n)) (((mul) (((mul) (n)) (m))) (m)),2.1764737204722516E-6), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.687380682292919E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.701734495397859E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (n)),2.6804467619613803E-7), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.687380682292919E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (n)) (m))),1.4188054390811585E-6), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (m)) (m))),1.2827349782955974E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (((mul) (m)) (n)))),1.2827358247569444E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (`c)))),1.2742257812310272E-5), ((`$aoarga : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aoarga)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`$aoarga))),4.985398227666577E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (`c)) (m)))),7.875370456481617E-4), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (n))),1.2760215726469301E-6), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),2.6802334426909426E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),1.4186934804809774E-6), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),1.4262699614255286E-6), (((eqM) (m)) (((mul) (n)) (((mul) (n)) (m))),2.407300049052485E-6), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (m)) (m)),2.4232382920442556E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)),1.4939337431697457E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (`c)))),1.2742257812310272E-5), ((`$anckrc : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`$anckrc))) (((mul) (((mul) (m)) (n))) (`$anckrc))),4.957363679983474E-7), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n))),1.2827349782955974E-6), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),1.4130224096923401E-5), ((`$tbozs : M ) ~> (((eqM) (((mul) (`$tbozs)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (`$tbozs)) (((mul) (m)) (n)))),4.957363679983474E-7), ((`$anrize : M ) ~> (((eqM) (((mul) (`$anrize)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (`$anrize)) (n))),4.890823732177555E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (((mul) (m)) (n))) (m))),1.2894845554338158E-6), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (m)),2.6804467619613803E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (`c)))),1.2742257812310272E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.2877703978693518E-5), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (m))) (((mul) (m)) (m))),0.007121525522103196), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (`c)) (n)))),1.2742257812310272E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (`c)) (n)))),1.4092643891902033E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),1.2827358247569444E-6), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (m))),1.2760215726469301E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.2843454283839403E-5), ((`$anvmxu : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`$anvmxu))) (((mul) (((mul) (m)) (n))) (`$anvmxu))),3.275917360188427E-7), (((eqM) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))),2.419965293464607E-6), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (n))),1.2760215726469301E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),1.4243566793364347E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),7.886542802958131E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (m)) (m))),1.4112686103853623E-6), ((`$anrsoh : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`$anrsoh))) (((mul) (((mul) (m)) (n))) (`$anrsoh))),3.275917360188427E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.429686617681101E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (m))),1.4112686103853623E-6), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))),2.199426287054998E-6), ((`$aolgtx : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aolgtx)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`$aolgtx))),3.234535762913122E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),1.4205685331967824E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (((mul) (m)) (n)))),1.2894845554338158E-6), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (m)) (m))),1.4112686103853623E-6), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (n)) (n)),2.6804467619613803E-7), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),2.6802334426909426E-7), ((`$aniczl : M ) ~> ((((eqM) (m)) (`$aniczl)) → (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`$aniczl))),4.882456074936869E-7), ((`$aomumi : M ) ~> ((((eqM) (n)) (`$aomumi)) → (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$aomumi))),3.2348717999489523E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (`c)))),1.4092643891902033E-5), ((`$anbigm : M ) ~> ((((eqM) (m)) (`$anbigm)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$anbigm))),3.2348717999489523E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (((mul) (m)) (n))),2.4232247298672476E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),1.2843455096147328E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (((mul) (m)) (n))) (m))),1.2827358247569444E-6), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (((mul) (m)) (n))) (m)),2.4232247298672476E-7), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (m)) (n)),2.666206046626669E-7), ((`$anbgrc : M ) ~> (((eqM) (((mul) (`$anbgrc)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (`$anbgrc)) (((mul) (m)) (n)))),3.275917360188427E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (m))),1.4150319754519487E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),1.280929649002908E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (`c)))),1.4167904433124141E-5), ((`$anutxq : M ) ~> (((eqM) (((mul) (`$anutxq)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (`$anutxq)) (m))),1.4054012888469278E-5), ((`$anwsyi : M ) ~> ((((eqM) (m)) (`$anwsyi)) → (((eqM) (((mul) (((mul) (m)) (m))) (m))) (`$anwsyi))),3.200215038027102E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (m)) (m)),1.4899605426184598E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),1.4205685331967824E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (`c)) (n)))),1.4092643891902033E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),7.875370353623358E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (m)),1.4899605426184598E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (`c)) (m)))),1.2742257812310272E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),1.4939337431697457E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),2.6875945704107995E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (n)),2.6804467619613803E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (n)),2.4232382920442556E-7), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),1.2794242806612045E-6), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),1.4130224096923401E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),1.2776236838041282E-5), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (m)),2.666206046626669E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),7.896371241375759E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.2929231645648165E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (((mul) (m)) (n))) (n))),1.2827358247569444E-6), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),2.6733158800986173E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),1.4205685331967824E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),1.4167904330304841E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),1.4150319754519487E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (`c)))),1.4092643891902033E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),1.4130223912372054E-5), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (n)),2.4105542841771827E-7), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (m))),1.2760215726469301E-6), ((`$anfate : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (`$anfate))) (((mul) (n)) (`$anfate))),3.2399359699521766E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (((mul) (m)) (n))),2.435975407891416E-7), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),0.0044068769672491875), ((((eqM) (n)) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),0.004395503293411272), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.701734495397859E-7), ((`$amzrvx : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (`$amzrvx))) (((mul) (m)) (`$amzrvx))),1.4054012888469278E-5), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (m)),2.666206046626669E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (n)) (m))),1.4112686103853623E-6), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),2.6802334426909426E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),1.4186934804809774E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (((mul) (m)) (n)))),1.2827358247569444E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),1.280929649002908E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),1.4130224096923401E-5), ((`$andeig : M ) ~> ((((eqM) (m)) (`$andeig)) → (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`$andeig))),4.882456074936869E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),1.4130223912372054E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),1.286156437358378E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),1.4130224096923401E-5), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (n)) (m)),2.4105542841771827E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (m)),2.6804467619613803E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),7.875370353623358E-4), ((`$anpqch : M ) ~> (((eqM) (((mul) (`$anpqch)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (`$anpqch)) (n))),3.2399359699521766E-7), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (n)) (n)),2.666206046626669E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (n)) (n)),2.4105542841771827E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),1.4130224096923401E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (n)),2.6733158800986173E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),2.416982384370106E-7), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.4328907899421636E-6), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (n)) (n))),1.2760215726469301E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (`c)) (m)))),1.2776237646097912E-5), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (m)) (m)),2.666206046626669E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (`c)))),1.4092643891902033E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),1.2776236838041282E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (((mul) (m)) (n))),2.435975407891416E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (n))),1.4188054390811585E-6), ((`$sljmh : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (`$sljmh))) (((mul) (n)) (`$sljmh))),1.4085875080359203E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),2.694549081025132E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (`c)))),1.2742257812310272E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (`c)))),1.4167904433124141E-5), ((`$aowbrq : M ) ~> (((eqM) (((mul) (`$aowbrq)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (`$aowbrq)) (n))),1.4085875080359203E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),7.896371241375759E-4), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),1.2861555886398113E-6), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (m)) (m)),2.6804467619613803E-7), (((eqM) (m)) (((mul) (m)) (((mul) (m)) (m))),2.407300049052485E-6), (((eqM) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))),2.420157898042501E-6), ((`$aotugt : M ) ~> (((eqM) (((mul) (`$aotugt)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (`$aotugt)) (((mul) (m)) (n)))),3.275917360188427E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (m)),2.4105542841771827E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (n)) (n))),1.4188054390811585E-6), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),2.416982384370106E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),2.694549081025132E-7), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m)),1.4899604591961057E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (n)),2.4105542841771827E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (`c)))),7.875370456481617E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),2.442471297277607E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (m)) (m)),2.4105542841771827E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),1.4130224096923401E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),1.4186934804809774E-6), ((`$anjgvw : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$anjgvw)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$anjgvw))),3.269573687572727E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),1.4186934804809774E-6), ((`$twtbd : M ) ~> ((((eqM) (n)) (`$twtbd)) → (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`$twtbd))),4.882456074936869E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),1.2810307283843186E-5)))
2020.06.24 06:58:29 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentLemmas], id: (20,-1001366089), content:
TangentLemmas(Vector(((`$fqdoc : M ) ~> (((eqM) (((mul) (n)) (`$fqdoc))) (((mul) (n)) (`$fqdoc))),Some((`$fqdoc :  M) ↦ (((((right-multiply) (`$fqdoc)) (n)) (n)) ((refl) (n)))),0.002660677791416006), ((`$bscxj : M ) ~> (((eqM) (((mul) (m)) (`$bscxj))) (((mul) (m)) (`$bscxj))),Some((`$bscxj :  M) ↦ (((((right-multiply) (`$bscxj)) (m)) (m)) ((refl) (m)))),0.002660677791416006), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n),Some(((ass2) (m)) (n)),0.0012575089981038978), (((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),Some(((ass1) (m)) (n)),0.0012575089908058784), ((`$brtwo : M ) ~> (((eqM) (((mul) (((mul) (m)) (n))) (`$brtwo))) (((mul) (((mul) (m)) (n))) (`$brtwo))),Some((`$brtwo :  M) ↦ (((((right-multiply) (`$brtwo)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n))))),9.452254669633188E-4), ((`$fopnn : M ) ~> (((eqM) (((mul) (`$fopnn)) (n))) (((mul) (`$fopnn)) (n))),Some((`$fopnn :  M) ↦ (((((left-multiply) (`$fopnn)) (n)) (n)) ((refl) (n)))),9.087257465179378E-4), ((`$fombm : M ) ~> (((eqM) (((mul) (`$fombm)) (m))) (((mul) (`$fombm)) (m))),Some((`$fombm :  M) ↦ (((((left-multiply) (`$fombm)) (m)) (m)) ((refl) (m)))),9.087257465179377E-4), ((`$foeff : M ) ~> (((eqM) (((mul) (`$foeff)) (((mul) (m)) (n)))) (((mul) (`$foeff)) (((mul) (m)) (n)))),Some((`$foeff :  M) ↦ (((((left-multiply) (`$foeff)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n))))),5.801006204929594E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),2.0344084503634913E-4), (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),2.0289858985977978E-4), (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),2.0289858985977978E-4), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),2.028985883873044E-4), (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),2.028985883873044E-4), (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (n)) (n)) ((refl) (n))),2.023578151796587E-4), (((eqM) (((mul) (m)) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (m)) (m)) ((refl) (m))),2.023578151796587E-4), (((eqM) (((mul) (n)) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (n)) (n)) ((refl) (n))),2.023578151796587E-4), ((`b : M ) ~> (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (`b)))) (`b)),Some((ass2) (((mul) (m)) (n))),4.168196771035336E-5), ((`b : M ) ~> (((eqM) (((mul) (n)) (((mul) (n)) (`b)))) (`b)),Some((ass2) (n)),4.092267351914133E-5), ((`b : M ) ~> (((eqM) (((mul) (m)) (((mul) (m)) (`b)))) (`b)),Some((ass2) (m)),4.092267351914133E-5), ((`b : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (`b))) (`b))) (((mul) (m)) (n))),Some((ass1) (((mul) (m)) (n))),3.9808647297241465E-5), ((`b : M ) ~> (((eqM) (((mul) (((mul) (m)) (`b))) (`b))) (m)),Some((ass1) (m)),3.910258587374045E-5), ((`b : M ) ~> (((eqM) (((mul) (((mul) (n)) (`b))) (`b))) (n)),Some((ass1) (n)),3.910258587374045E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))),2.26363933749912E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),Some(((ass2) (((mul) (m)) (n))) (n)),2.2570323033921284E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m),Some(((ass2) (((mul) (m)) (n))) (m)),2.2570323033921284E-5), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (n)) (((mul) (m)) (n))),2.256854196543623E-5), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (m)) (((mul) (m)) (n))),2.256838938664854E-5), (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m),Some(((ass2) (n)) (m)),2.2502673354675572E-5), (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m),Some(((ass2) (m)) (m)),2.2502673354675572E-5), (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n),Some(((ass2) (n)) (n)),2.2502673354675572E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))),2.0465466170671026E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (m)),2.0405730858162146E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m),Some(((ass1) (m)) (((mul) (m)) (n))),2.0405717362161686E-5), (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n),Some(((ass1) (n)) (((mul) (m)) (n))),2.0405717362161686E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (n)),2.0405592901446206E-5), (((eqM) (((mul) (((mul) (m)) (m))) (m))) (m),Some(((ass1) (m)) (m)),2.0346159781026912E-5), (((eqM) (((mul) (((mul) (n)) (n))) (n))) (n),Some(((ass1) (n)) (n)),2.0346159781026912E-5), (((eqM) (((mul) (((mul) (n)) (m))) (m))) (n),Some(((ass1) (n)) (m)),2.0346159781026912E-5), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (n)),1.0622089813328828E-5), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (m)),8.997266049489966E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))),1.4319485104203117E-6), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (m)),1.406257488520603E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (n))),1.3876079648776408E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (n))),1.3876079648776408E-6), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (m)),1.3626678811748625E-6), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (m))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (m)),1.3626678811748625E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))),8.883939269447522E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (n)),8.766215112165727E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (n))),8.686836517691665E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (n))),8.686836517691665E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (n)),8.571374569814914E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (n)),8.571374569814914E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (n)),6.528281105810839E-7), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (n))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (n)),6.377883843644906E-7), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (m)),4.794274711354235E-7), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (m)),4.705362052589885E-7), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (m)) (`b))) (((mul) (m)) (`c))))),Some((left-multiply) (m)),5.815453146025387E-10), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (n)) (`b))) (((mul) (n)) (`c))))),Some((left-multiply) (n)),5.815453146025387E-10), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (n))) (((mul) (`c)) (n))))),Some((right-multiply) (n)),5.815430399692549E-10), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))),Some((right-multiply) (m)),5.815430399692549E-10), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))),Some((left-multiply) (((mul) (m)) (n))),5.813278572207162E-10), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n)))))),Some((right-multiply) (((mul) (m)) (n))),5.813244185929261E-10), ((`$aowygc : M ) ~> (((eqM) (((mul) (`$aowygc)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (`$aowygc)) (((mul) (m)) (n)))),Some((`$aowygc :  M) ↦ (((((left-multiply) (`$aowygc)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))))),4.995157903994928E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.694549081025132E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4186934804809774E-6), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),2.4105542841771827E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)),7.907573483767095E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),1.4188054390811585E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))),7.875370353623358E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.280929649002908E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)),1.4112686103853623E-6), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)),1.2760215726469301E-6), ((`$aoftyg : M ) ~> ((((eqM) (m)) (`$aoftyg)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`$aoftyg))),Some((`$aoftyg :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (`$aoftyg)) (((ass2) (((mul) (m)) (n))) (m)))),4.918708204543473E-7), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)),1.2760215726469301E-6), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),2.4232247298672476E-7), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)),1.2794242806612045E-6), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)),Some((((sym) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),2.187913783138382E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.4167904433124141E-5), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)),1.2794242806612045E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.4167904433124141E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),1.286156437358378E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)),7.8865428487281E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.2843454283839403E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),2.416982384370106E-7), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)),Some((((sym) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),2.187913783138382E-6), ((`$tlnbi : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$tlnbi))) (((mul) (n)) (`$tlnbi))),Some((`$tlnbi :  M) ↦ (((((right-multiply) (`$tlnbi)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))),4.928089879716895E-7), ((`$amypqq : M ) ~> (((eqM) (((mul) (`$amypqq)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$amypqq)) (m))),Some((`$amypqq :  M) ↦ (((((left-multiply) (`$amypqq)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n))))),3.2756515067735954E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),2.4232247298672476E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),2.4232382920442556E-7), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (n))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (n)) (n)),0.007121525522103196), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),2.666206046626669E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.4205685146430896E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),2.666206046626669E-7), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.4899604591961057E-5), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)),1.2794242806612045E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.4167904330304841E-5), ((`$tdsgy : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$tdsgy))) (((mul) (((mul) (m)) (n))) (`$tdsgy))),Some((`$tdsgy :  M) ↦ (((((right-multiply) (`$tdsgy)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))))),3.3120406413361736E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),2.4105542841771827E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.4205685146430896E-5), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),1.2827349782955974E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),1.2929231645648165E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.4243566793364347E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)),1.4150319754519487E-6), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))),1.4130223912372054E-5), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),2.416982384370106E-7), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),1.2827349782955974E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),2.4297002160236635E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),2.416982384370106E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))),1.2742257812310272E-5), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)),1.2760215726469301E-6), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),2.4105542841771827E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.2776237646097912E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4262699614255286E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.2843454283839403E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4186934804809774E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.2776237646097912E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),2.6733158800986173E-7), ((`$aovkzf : M ) ~> (((eqM) (((mul) (`$aovkzf)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (`$aovkzf)) (n))),Some((`$aovkzf :  M) ↦ (((((left-multiply) (`$aovkzf)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))),4.928089879716895E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.2843455096147328E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.2843455096147328E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),1.2827349782955974E-6), ((`$ankubg : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (`$ankubg))) (((mul) (m)) (`$ankubg))),Some((`$ankubg :  M) ↦ (((((right-multiply) (`$ankubg)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m)))),3.2399359699521766E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),2.687380682292919E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),2.4297002160236635E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.2776237646097912E-5), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),2.4232247298672476E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),1.2827358247569444E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),1.2894845554338158E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))),7.875370353623358E-4), (((eqM) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))),Some((((sym) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),2.419965293464607E-6), ((`$aottht : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$aottht))) (((mul) (m)) (`$aottht))),Some((`$aottht :  M) ↦ (((((right-multiply) (`$aottht)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n))))),3.2756515067735954E-7), ((`$anotja : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (`$anotja))) (((mul) (n)) (`$anotja))),Some((`$anotja :  M) ↦ (((((right-multiply) (`$anotja)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n)))),4.890823732177555E-7), ((`$speki : M ) ~> (((eqM) (((mul) (`$speki)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$speki)) (n))),Some((`$speki :  M) ↦ (((((left-multiply) (`$speki)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n))))),3.2756515067735954E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))),1.2776236838041282E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))),1.2742257812310272E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),1.2827349782955974E-6), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),1.4225889022620355E-6), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),1.2827349782955974E-6), ((`$aopsdc : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`$aopsdc))) (((mul) (((mul) (m)) (n))) (`$aopsdc))),Some((`$aopsdc :  M) ↦ (((((right-multiply) (`$aopsdc)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n))))),4.957363679983474E-7), ((`$aoxelo : M ) ~> (((eqM) (((mul) (`$aoxelo)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (`$aoxelo)) (m))),Some((`$aoxelo :  M) ↦ (((((left-multiply) (`$aoxelo)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m)))),4.890823732177555E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))),1.4092643891902033E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))),1.2776236838041282E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),1.4225889022620355E-6), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4300733299046765E-6), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),2.666206046626669E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),2.429686617681101E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)),1.4112686103853623E-6), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),2.4232382920442556E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.2843455096147328E-5), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.0044068769672491875), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (m)) (m)),0.004395503293411272), ((`$tmaxy : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$tmaxy)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`$tmaxy))),Some((`$tmaxy :  M) ↦ (((((trans) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (`$tmaxy)) (((ass2) (m)) (((mul) (m)) (n))))),4.948634544310519E-7), (((eqM) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))),Some((((sym) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),2.187926028339431E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))) (n)),7.8865428487281E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.4167904433124141E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),1.2827358247569444E-6), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),1.4225889022620355E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4186934804809774E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.2810307283843186E-5), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),2.6802334426909426E-7), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),2.6733158800986173E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.4167904330304841E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))),1.4092643891902033E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),1.2861555886398113E-6), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),2.4232382920442556E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))),1.2742257812310272E-5), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),2.6802334426909426E-7), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.4939336595249337E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.694549081025132E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),1.2827358247569444E-6), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.435975407891416E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.4205685331967824E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),2.6875945704107995E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))) (m)),7.886542802958131E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))),7.896371138243215E-4), ((`$aoynxm : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`$aoynxm))) (((mul) (m)) (`$aoynxm))),Some((`$aoynxm :  M) ↦ (((((right-multiply) (`$aoynxm)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m)))),4.928089879716895E-7), ((`$aoawns : M ) ~> (((eqM) (((mul) (`$aoawns)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$aoawns)) (((mul) (m)) (n)))),Some((`$aoawns :  M) ↦ (((((left-multiply) (`$aoawns)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))))),3.3120406413361736E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.4167904330304841E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),1.2894845554338158E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.280929649002908E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)),1.4112686103853623E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),2.4297002160236635E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)),7.907573529659116E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),2.4232382920442556E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),2.4232247298672476E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.422476645107007E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),2.6733158800986173E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),2.429686617681101E-7), ((`$anufrw : M ) ~> ((((eqM) (n)) (`$anufrw)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`$anufrw))),Some((`$anufrw :  M) ↦ (((((trans) (((mul) (m)) (((mul) (m)) (n)))) (n)) (`$anufrw)) (((ass2) (m)) (n)))),1.4084013360740031E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4262699614255286E-6), ((`$anacqh : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (`$anacqh))) (((mul) (m)) (`$anacqh))),Some((`$anacqh :  M) ↦ (((((right-multiply) (`$anacqh)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m)))),4.890823732177555E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)),7.886542802958131E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.280929649002908E-5), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)),1.2760215726469301E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.280929649002908E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4262699614255286E-6), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),2.4105542841771827E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),1.4188054390811585E-6), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)),1.4112686103853623E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))),7.875370456481617E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.4167904433124141E-5), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (n)) (n)),0.004395503293411272), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.0044068769672491875), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)),1.4112686103853623E-6), ((`$aohxyi : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aohxyi)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`$aohxyi))),Some((`$aohxyi :  M) ↦ (((((trans) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (`$aohxyi)) (((ass2) (n)) (((mul) (m)) (n))))),4.948634544310519E-7), ((`$anzowp : M ) ~> (((eqM) (((mul) (`$anzowp)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (`$anzowp)) (m))),Some((`$anzowp :  M) ↦ (((((left-multiply) (`$anzowp)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m)))),4.890823732177555E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),2.4232382920442556E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))),1.2742257812310272E-5), ((`$anewoy : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (`$anewoy))) (((mul) (m)) (`$anewoy))),Some((`$anewoy :  M) ↦ (((((right-multiply) (`$anewoy)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m)))),4.890823732177555E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)),7.907573529659116E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.4167904433124141E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),2.6875945704107995E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.2776237646097912E-5), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),1.2861555886398113E-6), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)),1.2760215726469301E-6), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.422476645107007E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))),1.2742257812310272E-5), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),2.4297002160236635E-7), ((`$anxvdf : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$anxvdf)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`$anxvdf))),Some((`$anxvdf :  M) ↦ (((((trans) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (`$anxvdf)) (((ass1) (((mul) (m)) (n))) (n)))),3.234535762913122E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))),1.4092643891902033E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))),1.4130223912372054E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.2776237646097912E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)),7.8865428487281E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),1.286156437358378E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.2776237646097912E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),2.6802334426909426E-7), ((`$aodwjv : M ) ~> ((((eqM) (m)) (`$aodwjv)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (`$aodwjv))),Some((`$aodwjv :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (n))) (m)) (`$aodwjv)) (((ass1) (m)) (n)))),1.4051741721326358E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)),7.886542802958131E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),1.4188054390811585E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),2.6733158800986173E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.2810307283843186E-5), ((`$tnagh : M ) ~> ((((eqM) (n)) (`$tnagh)) → (((eqM) (((mul) (((mul) (n)) (n))) (n))) (`$tnagh))),Some((`$tnagh :  M) ↦ (((((trans) (((mul) (((mul) (n)) (n))) (n))) (n)) (`$tnagh)) (((ass1) (n)) (n)))),3.200215038027102E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.4130224096923401E-5), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)),1.2760215726469301E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),1.286156437358378E-6), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),2.4105542841771827E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),2.4105542841771827E-7), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)),1.2794242806612045E-6), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),2.6802334426909426E-7), (((eqM) (n)) (((mul) (((mul) (n)) (n))) (n)),Some((((sym) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),2.1764737204722516E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))) (n)),7.8865428487281E-5), ((`$aouwhz : M ) ~> ((((eqM) (n)) (`$aouwhz)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$aouwhz))),Some((`$aouwhz :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (`$aouwhz)) (((ass2) (((mul) (m)) (n))) (n)))),4.918708204543473E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),2.416982384370106E-7), ((`$annbsc : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (`$annbsc))) (((mul) (n)) (`$annbsc))),Some((`$annbsc :  M) ↦ (((((right-multiply) (`$annbsc)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m)))),3.2399359699521766E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)),1.4150319754519487E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.4939336595249337E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),2.687380682292919E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.280929649002908E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4300733299046765E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))),1.2776236838041282E-5), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),2.4232247298672476E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),1.4188054390811585E-6), (((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),2.420157898042501E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),2.6875945704107995E-7), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),2.666206046626669E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.280929649002908E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),1.4188054390811585E-6), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),1.2861555886398113E-6), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.0044068769672491875), ((((eqM) (m)) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (m)) (m)),0.004395503293411272), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),2.666206046626669E-7), ((`$aorrkq : M ) ~> ((((eqM) (n)) (`$aorrkq)) → (((eqM) (((mul) (((mul) (n)) (m))) (m))) (`$aorrkq))),Some((`$aorrkq :  M) ↦ (((((trans) (((mul) (((mul) (n)) (m))) (m))) (n)) (`$aorrkq)) (((ass1) (n)) (m)))),3.200215038027102E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.4167904433124141E-5), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),2.666206046626669E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.2776237646097912E-5), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.4899604591961057E-5), ((((eqM) (m)) (m)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (m)) (m)),0.004383813180515294), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (n)) (n)),0.004383813180515294), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)),1.4150319754519487E-6), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),2.6802334426909426E-7), ((`$aokfix : M ) ~> (((eqM) (((mul) (`$aokfix)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (`$aokfix)) (m))),Some((`$aokfix :  M) ↦ (((((left-multiply) (`$aokfix)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m)))),3.2399359699521766E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))),7.896371138243215E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.4205685146430896E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.4899605426184598E-5), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.442471297277607E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)),1.4112686103853623E-6), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)),1.2794242806612045E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))),7.875370456481617E-4), ((`$ansowg : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`$ansowg))) (((mul) (((mul) (m)) (n))) (`$ansowg))),Some((`$ansowg :  M) ↦ (((((right-multiply) (`$ansowg)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))))),4.995157903994928E-7), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.435975407891416E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))),1.2776236838041282E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))),1.4092643891902033E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),2.4232382920442556E-7), ((`$tjgek : M ) ~> (((eqM) (((mul) (`$tjgek)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (`$tjgek)) (n))),Some((`$tjgek :  M) ↦ (((((left-multiply) (`$tjgek)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m)))),3.2399359699521766E-7), (((eqM) (m)) (((mul) (((mul) (m)) (m))) (m)),Some((((sym) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),2.1764737204722516E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),1.4205685146430896E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))),1.4092643891902033E-5), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)),1.2760215726469301E-6), (((eqM) (m)) (((mul) (((mul) (m)) (n))) (n)),Some((((sym) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.345275662410402E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))),1.4092643891902033E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)),7.907573483767095E-5), ((((eqM) (n)) (n)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (n)) (n)),0.004383813180515294), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (m)) (m)),0.004383813180515294), (((eqM) (n)) (((mul) (m)) (((mul) (m)) (n))),Some((((sym) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.3452755870889025E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),2.6804467619613803E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)),1.4150319754519487E-6), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),1.4225889022620355E-6), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),2.429686617681101E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.2877703978693518E-5), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.422476645107007E-6), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),2.4232247298672476E-7), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n))),0.007178083310761197), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))),1.4130223912372054E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),2.6804467619613803E-7), ((`$swksc : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$swksc))) (((mul) (n)) (`$swksc))),Some((`$swksc :  M) ↦ (((((right-multiply) (`$swksc)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n))))),3.2756515067735954E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))),1.2742257812310272E-5), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),1.2827349782955974E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.422476645107007E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.2810307283843186E-5), (((eqM) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))),Some((((sym) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),2.187926028339431E-6), ((`$anxqrd : M ) ~> (((eqM) (((mul) (`$anxqrd)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (`$anxqrd)) (m))),Some((`$anxqrd :  M) ↦ (((((left-multiply) (`$anxqrd)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m)))),4.928089879716895E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))),1.4130223912372054E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4186934804809774E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.2843454283839403E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))),1.4092643891902033E-5), (((eqM) (n)) (((mul) (n)) (((mul) (n)) (n))),Some((((sym) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),2.407300049052485E-6), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)),1.4112686103853623E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.4130224096923401E-5), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),2.666206046626669E-7), ((`$apadox : M ) ~> (((eqM) (((mul) (`$apadox)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (`$apadox)) (((mul) (m)) (n)))),Some((`$apadox :  M) ↦ (((((left-multiply) (`$apadox)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n))))),4.957363679983474E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)),1.4112686103853623E-6), (((eqM) (n)) (((mul) (((mul) (n)) (m))) (m)),Some((((sym) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),2.1764737204722516E-6), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),2.687380682292919E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.701734495397859E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),2.6804467619613803E-7), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),2.687380682292919E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),1.4188054390811585E-6), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),1.2827349782955974E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),1.2827358247569444E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))),1.2742257812310272E-5), ((`$aoarga : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aoarga)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`$aoarga))),Some((`$aoarga :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (`$aoarga)) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))))),4.985398227666577E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))),7.875370456481617E-4), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)),1.2760215726469301E-6), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),2.6802334426909426E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4186934804809774E-6), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4262699614255286E-6), (((eqM) (m)) (((mul) (n)) (((mul) (n)) (m))),Some((((sym) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),2.407300049052485E-6), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),2.4232382920442556E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.4939337431697457E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))),1.2742257812310272E-5), ((`$anckrc : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`$anckrc))) (((mul) (((mul) (m)) (n))) (`$anckrc))),Some((`$anckrc :  M) ↦ (((((right-multiply) (`$anckrc)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n))))),4.957363679983474E-7), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),1.2827349782955974E-6), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.4130224096923401E-5), ((`$tbozs : M ) ~> (((eqM) (((mul) (`$tbozs)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (`$tbozs)) (((mul) (m)) (n)))),Some((`$tbozs :  M) ↦ (((((left-multiply) (`$tbozs)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n))))),4.957363679983474E-7), ((`$anrize : M ) ~> (((eqM) (((mul) (`$anrize)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (`$anrize)) (n))),Some((`$anrize :  M) ↦ (((((left-multiply) (`$anrize)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n)))),4.890823732177555E-7), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),1.2894845554338158E-6), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),2.6804467619613803E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))),1.2742257812310272E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.2877703978693518E-5), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (m)) (m)),0.007121525522103196), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))),1.2742257812310272E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))),1.4092643891902033E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),1.2827358247569444E-6), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)),1.2760215726469301E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.2843454283839403E-5), ((`$anvmxu : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`$anvmxu))) (((mul) (((mul) (m)) (n))) (`$anvmxu))),Some((`$anvmxu :  M) ↦ (((((right-multiply) (`$anvmxu)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m)))),3.275917360188427E-7), (((eqM) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))),Some((((sym) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),2.419965293464607E-6), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)),1.2760215726469301E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.4243566793364347E-5), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))) (m)),7.886542802958131E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)),1.4112686103853623E-6), ((`$anrsoh : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`$anrsoh))) (((mul) (((mul) (m)) (n))) (`$anrsoh))),Some((`$anrsoh :  M) ↦ (((((right-multiply) (`$anrsoh)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n)))),3.275917360188427E-7), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),2.429686617681101E-7), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)),1.4112686103853623E-6), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))),Some((((sym) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.199426287054998E-6), ((`$aolgtx : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aolgtx)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`$aolgtx))),Some((`$aolgtx :  M) ↦ (((((trans) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (`$aolgtx)) (((ass1) (((mul) (m)) (n))) (m)))),3.234535762913122E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.4205685331967824E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),1.2894845554338158E-6), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)),1.4112686103853623E-6), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),2.6804467619613803E-7), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),2.6802334426909426E-7), ((`$aniczl : M ) ~> ((((eqM) (m)) (`$aniczl)) → (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`$aniczl))),Some((`$aniczl :  M) ↦ (((((trans) (((mul) (m)) (((mul) (m)) (m)))) (m)) (`$aniczl)) (((ass2) (m)) (m)))),4.882456074936869E-7), ((`$aomumi : M ) ~> ((((eqM) (n)) (`$aomumi)) → (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$aomumi))),Some((`$aomumi :  M) ↦ (((((trans) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (`$aomumi)) (((ass1) (n)) (((mul) (m)) (n))))),3.2348717999489523E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))),1.4092643891902033E-5), ((`$anbigm : M ) ~> ((((eqM) (m)) (`$anbigm)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$anbigm))),Some((`$anbigm :  M) ↦ (((((trans) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (`$anbigm)) (((ass1) (m)) (((mul) (m)) (n))))),3.2348717999489523E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),2.4232247298672476E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.2843455096147328E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),1.2827358247569444E-6), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),2.4232247298672476E-7), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),2.666206046626669E-7), ((`$anbgrc : M ) ~> (((eqM) (((mul) (`$anbgrc)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (`$anbgrc)) (((mul) (m)) (n)))),Some((`$anbgrc :  M) ↦ (((((left-multiply) (`$anbgrc)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n)))),3.275917360188427E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)),1.4150319754519487E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.280929649002908E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.4167904433124141E-5), ((`$anutxq : M ) ~> (((eqM) (((mul) (`$anutxq)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (`$anutxq)) (m))),Some((`$anutxq :  M) ↦ (((((left-multiply) (`$anutxq)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)))),1.4054012888469278E-5), ((`$anwsyi : M ) ~> ((((eqM) (m)) (`$anwsyi)) → (((eqM) (((mul) (((mul) (m)) (m))) (m))) (`$anwsyi))),Some((`$anwsyi :  M) ↦ (((((trans) (((mul) (((mul) (m)) (m))) (m))) (m)) (`$anwsyi)) (((ass1) (m)) (m)))),3.200215038027102E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.4899605426184598E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.4205685331967824E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))),1.4092643891902033E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))),7.875370353623358E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.4899605426184598E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))),1.2742257812310272E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),1.4939337431697457E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),2.6875945704107995E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),2.6804467619613803E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),2.4232382920442556E-7), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)),1.2794242806612045E-6), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.4130224096923401E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))),1.2776236838041282E-5), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),2.666206046626669E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),7.896371241375759E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),1.2929231645648165E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),1.2827358247569444E-6), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),2.6733158800986173E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),1.4205685331967824E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.4167904330304841E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)),1.4150319754519487E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))),1.4092643891902033E-5), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))),1.4130223912372054E-5), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),2.4105542841771827E-7), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)),1.2760215726469301E-6), ((`$anfate : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (`$anfate))) (((mul) (n)) (`$anfate))),Some((`$anfate :  M) ↦ (((((right-multiply) (`$anfate)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n)))),3.2399359699521766E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.435975407891416E-7), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.0044068769672491875), ((((eqM) (n)) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (n)) (n)),0.004395503293411272), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.701734495397859E-7), ((`$amzrvx : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (`$amzrvx))) (((mul) (m)) (`$amzrvx))),Some((`$amzrvx :  M) ↦ (((((right-multiply) (`$amzrvx)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)))),1.4054012888469278E-5), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),2.666206046626669E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)),1.4112686103853623E-6), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),2.6802334426909426E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4186934804809774E-6), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),1.2827358247569444E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),1.280929649002908E-5), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.4130224096923401E-5), ((`$andeig : M ) ~> ((((eqM) (m)) (`$andeig)) → (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`$andeig))),Some((`$andeig :  M) ↦ (((((trans) (((mul) (n)) (((mul) (n)) (m)))) (m)) (`$andeig)) (((ass2) (n)) (m)))),4.882456074936869E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))),1.4130223912372054E-5), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),1.286156437358378E-6), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),1.4130224096923401E-5), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),2.4105542841771827E-7), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),2.6804467619613803E-7), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))),7.875370353623358E-4), ((`$anpqch : M ) ~> (((eqM) (((mul) (`$anpqch)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (`$anpqch)) (n))),Some((`$anpqch :  M) ↦ (((((left-multiply) (`$anpqch)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n)))),3.2399359699521766E-7), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),2.666206046626669E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),2.4105542841771827E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.4130224096923401E-5), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),2.6733158800986173E-7), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),2.416982384370106E-7), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.4328907899421636E-6), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)),1.2760215726469301E-6), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),1.2776237646097912E-5), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),2.666206046626669E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))),1.4092643891902033E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))),1.2776236838041282E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.435975407891416E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),1.4188054390811585E-6), ((`$sljmh : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (`$sljmh))) (((mul) (n)) (`$sljmh))),Some((`$sljmh :  M) ↦ (((((right-multiply) (`$sljmh)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n)))),1.4085875080359203E-5), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.694549081025132E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))),1.2742257812310272E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),1.4167904433124141E-5), ((`$aowbrq : M ) ~> (((eqM) (((mul) (`$aowbrq)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (`$aowbrq)) (n))),Some((`$aowbrq :  M) ↦ (((((left-multiply) (`$aowbrq)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n)))),1.4085875080359203E-5), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),7.896371241375759E-4), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),1.2861555886398113E-6), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),2.6804467619613803E-7), (((eqM) (m)) (((mul) (m)) (((mul) (m)) (m))),Some((((sym) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),2.407300049052485E-6), (((eqM) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))),Some((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),2.420157898042501E-6), ((`$aotugt : M ) ~> (((eqM) (((mul) (`$aotugt)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (`$aotugt)) (((mul) (m)) (n)))),Some((`$aotugt :  M) ↦ (((((left-multiply) (`$aotugt)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m)))),3.275917360188427E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),2.4105542841771827E-7), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),1.4188054390811585E-6), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),2.416982384370106E-7), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.694549081025132E-7), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),1.4899604591961057E-5), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),2.4105542841771827E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))),7.875370456481617E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),2.442471297277607E-7), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),2.4105542841771827E-7), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),1.4130224096923401E-5), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4186934804809774E-6), ((`$anjgvw : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$anjgvw)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$anjgvw))),Some((`$anjgvw :  M) ↦ (((((trans) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (`$anjgvw)) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))))),3.269573687572727E-7), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),1.4186934804809774E-6), ((`$twtbd : M ) ~> ((((eqM) (n)) (`$twtbd)) → (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`$twtbd))),Some((`$twtbd :  M) ↦ (((((trans) (((mul) (n)) (((mul) (n)) (n)))) (n)) (`$twtbd)) (((ass2) (n)) (n)))),4.882456074936869E-7), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),1.2810307283843186E-5)))
2020.06.24 06:58:29 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas], id: (21,-764482322), content:
BaseMixinLemmas(Vector(((`$fqdoc : M ) ~> (((eqM) (((mul) (n)) (`$fqdoc))) (((mul) (n)) (`$fqdoc))),Some((`$fqdoc :  M) ↦ (((((right-multiply) (`$fqdoc)) (n)) (n)) ((refl) (n)))),0.016346114231938155), ((`$bscxj : M ) ~> (((eqM) (((mul) (m)) (`$bscxj))) (((mul) (m)) (`$bscxj))),Some((`$bscxj :  M) ↦ (((((right-multiply) (`$bscxj)) (m)) (m)) ((refl) (m)))),0.01634611423193815), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n),Some(((ass2) (m)) (n)),0.011855574225406285), (((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),Some(((ass1) (m)) (n)),0.011855574195918662), ((`$brtwo : M ) ~> (((eqM) (((mul) (((mul) (m)) (n))) (`$brtwo))) (((mul) (((mul) (m)) (n))) (`$brtwo))),Some((`$brtwo :  M) ↦ (((((right-multiply) (`$brtwo)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n))))),0.010490354307412828), ((`$fopnn : M ) ~> (((eqM) (((mul) (`$fopnn)) (n))) (((mul) (`$fopnn)) (n))),Some((`$fopnn :  M) ↦ (((((left-multiply) (`$fopnn)) (n)) (n)) ((refl) (n)))),0.01031479209741959), ((`$fombm : M ) ~> (((eqM) (((mul) (`$fombm)) (m))) (((mul) (`$fombm)) (m))),Some((`$fombm :  M) ↦ (((((left-multiply) (`$fombm)) (m)) (m)) ((refl) (m)))),0.010314792097419588), ((`$foeff : M ) ~> (((eqM) (((mul) (`$foeff)) (((mul) (m)) (n)))) (((mul) (`$foeff)) (((mul) (m)) (n)))),Some((`$foeff :  M) ↦ (((((left-multiply) (`$foeff)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n))))),0.008509798237517546), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),0.005431144147552077), (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),0.005424935297487232), (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),0.005424935297487232), (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),0.005424935280614446), (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))) ((refl) (((mul) (m)) (n)))),0.005424935280614446), (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (n)) (n)) ((refl) (n))),0.005418733948835215), (((eqM) (((mul) (m)) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (m)) (m)) ((refl) (m))),0.005418733948835215), (((eqM) (((mul) (n)) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (n)) (n)) ((refl) (n))),0.005418733948835215), ((`b : M ) ~> (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (`b)))) (`b)),Some((ass2) (((mul) (m)) (n))),0.0027531141155624694), ((`b : M ) ~> (((eqM) (((mul) (n)) (((mul) (n)) (`b)))) (`b)),Some((ass2) (n)),0.0027315075617418594), ((`b : M ) ~> (((eqM) (((mul) (m)) (((mul) (m)) (`b)))) (`b)),Some((ass2) (m)),0.0027315075617418594), ((`b : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (`b))) (`b))) (((mul) (m)) (n))),Some((ass1) (((mul) (m)) (n))),0.0026993879327369703), ((`b : M ) ~> (((eqM) (((mul) (((mul) (m)) (`b))) (`b))) (m)),Some((ass1) (m)),0.002678764098735351), ((`b : M ) ~> (((eqM) (((mul) (((mul) (n)) (`b))) (`b))) (n)),Some((ass1) (n)),0.002678764098735351), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))),0.0021192996402127485), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),Some(((ass2) (((mul) (m)) (n))) (n)),0.0021166463944990027), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m),Some(((ass2) (((mul) (m)) (n))) (m)),0.0021166463944990027), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (n)) (((mul) (m)) (n))),0.0021165748091474495), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((ass2) (m)) (((mul) (m)) (n))),0.0021165686764952688), (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m),Some(((ass2) (n)) (m)),0.0021139251232479483), (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m),Some(((ass2) (m)) (m)),0.0021139251232479483), (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n),Some(((ass2) (n)) (n)),0.0021139251232479483), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))),0.002029677844898261), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (m)),0.0020271367410798487), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m),Some(((ass1) (m)) (((mul) (m)) (n))),0.0020271361664882495), (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n),Some(((ass1) (n)) (((mul) (m)) (n))),0.0020271361664882495), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)),Some(((ass1) (((mul) (m)) (n))) (n)),0.0020271308675687745), (((eqM) (((mul) (((mul) (m)) (m))) (m))) (m),Some(((ass1) (m)) (m)),0.0020245983869876913), (((eqM) (((mul) (((mul) (n)) (n))) (n))) (n),Some(((ass1) (n)) (n)),0.0020245983869876913), (((eqM) (((mul) (((mul) (n)) (m))) (m))) (n),Some(((ass1) (n)) (m)),0.0020245983869876913), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (n)),0.0015323746746582526), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (m)),0.0014271355357607068), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))),6.492122751497597E-4), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (m)),6.441945656169054E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (n))),6.405192289823022E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (n))),6.405192289823022E-4), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (m)),6.355597945312082E-4), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (m))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (m)),6.355597945312082E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))),5.290960432871608E-4), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (n)),5.260797721205903E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (n))),5.240328864566813E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (n))),5.240328864566813E-4), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (n)),5.210363699146842E-4), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (n)),5.210363699146842E-4), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (n)),4.6364840542839934E-4), ((`c : M ) ~> ((((eqM) (n)) (`c)) → (((eqM) (((mul) (n)) (n))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (n)),4.590401439521875E-4), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (m)),4.0618853140645176E-4), ((`c : M ) ~> ((((eqM) (m)) (`c)) → (((eqM) (((mul) (m)) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (m)),4.0294282526704805E-4), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (m)) (`b))) (((mul) (m)) (`c))))),Some((left-multiply) (m)),2.2853548760973948E-5), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (n)) (`b))) (((mul) (n)) (`c))))),Some((left-multiply) (n)),2.2853548760973948E-5), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (n))) (((mul) (`c)) (n))))),Some((right-multiply) (n)),2.285351045158924E-5), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))),Some((right-multiply) (m)),2.285351045158924E-5), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))),Some((left-multiply) (((mul) (m)) (n))),2.2849885955437344E-5), ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n)))))),Some((right-multiply) (((mul) (m)) (n))),2.2849828029640152E-5), ((`$aowygc : M ) ~> (((eqM) (((mul) (`$aowygc)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (`$aowygc)) (((mul) (m)) (n)))),Some((`$aowygc :  M) ↦ (((((left-multiply) (`$aowygc)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))))),4.13397173117219E-4), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.1730966972732876E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.466299202867372E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.0251969740189004E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)),0.0036224949996341853), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),6.466517897490542E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))),0.00970107109855087), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016604063437183582), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)),6.451773739265546E-4), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)),6.179145402291356E-4), ((`$aoftyg : M ) ~> ((((eqM) (m)) (`$aoftyg)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`$aoftyg))),Some((`$aoftyg :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (`$aoftyg)) (((ass2) (((mul) (m)) (n))) (m)))),4.106736722057768E-4), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)),6.179145402291356E-4), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.03200154790599E-4), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)),6.18620187624636E-4), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)),Some((((sym) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),7.785525360416644E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),0.0017337137240858748), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)),6.18620187624636E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),0.0017337137240858748), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),6.200131369640645E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)),0.0036183629026781718), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016623024888745292), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.028651687544582E-4), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)),Some((((sym) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),7.785525360416644E-4), ((`$tlnbi : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$tlnbi))) (((mul) (n)) (`$tlnbi))),Some((`$tlnbi :  M) ↦ (((((right-multiply) (`$tlnbi)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))),4.110091879539023E-4), ((`$amypqq : M ) ~> (((eqM) (((mul) (`$amypqq)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$amypqq)) (m))),Some((`$amypqq :  M) ↦ (((((left-multiply) (`$amypqq)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n))))),3.4500956256712485E-4), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.03200154790599E-4), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.032008820471714E-4), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (n))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (n)) (n)),0.02492662169936354), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),3.158749164464582E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),0.001735693584553494), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),3.158749164464582E-4), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),0.0017715355381422318), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)),6.18620187624636E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),0.0017337137186936296), ((`$tdsgy : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$tdsgy))) (((mul) (((mul) (m)) (n))) (`$tdsgy))),Some((`$tdsgy :  M) ↦ (((((right-multiply) (`$tdsgy)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))))),3.4664696613515884E-4), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.0251969740189004E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),0.001735693584553494), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),6.193057255144689E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),6.214090470725045E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),0.001737675715701976), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)),6.459141549923714E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))),0.001731736106914101), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.028651687544582E-4), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),6.193057255144689E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.0354713129877474E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.028651687544582E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))),0.0016566765186382594), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)),6.179145402291356E-4), (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.0251969740189004E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),0.0016585684493783497), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.481076555953547E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016623024888745292), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.466299202867372E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),0.0016585684493783497), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),3.1623563918662143E-4), ((`$aovkzf : M ) ~> (((eqM) (((mul) (`$aovkzf)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (`$aovkzf)) (n))),Some((`$aovkzf :  M) ↦ (((((left-multiply) (`$aovkzf)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))),4.110091879539023E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016623025339325497), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016623025339325497), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),6.193057255144689E-4), ((`$ankubg : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (`$ankubg))) (((mul) (m)) (`$ankubg))),Some((`$ankubg :  M) ↦ (((((right-multiply) (`$ankubg)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m)))),3.433923302038715E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),3.1694761600435184E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.0354713129877474E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),0.0016585684493783497), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.03200154790599E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),6.193059006597424E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),6.207002184820719E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))),0.00970107109855087), (((eqM) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))),Some((((sym) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),8.129247079956816E-4), ((`$aottht : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$aottht))) (((mul) (m)) (`$aottht))),Some((`$aottht :  M) ↦ (((((right-multiply) (`$aottht)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n))))),3.4500956256712485E-4), ((`$anotja : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (`$anotja))) (((mul) (n)) (`$anotja))),Some((`$anotja :  M) ↦ (((((right-multiply) (`$anotja)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n)))),4.096742789530242E-4), ((`$speki : M ) ~> (((eqM) (((mul) (`$speki)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$speki)) (n))),Some((`$speki :  M) ↦ (((((left-multiply) (`$speki)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n))))),3.4500956256712485E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))),0.0016585684044215447), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))),0.0016566765186382594), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),6.193057255144689E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),6.473902545714702E-4), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),6.193057255144689E-4), ((`$aopsdc : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`$aopsdc))) (((mul) (((mul) (m)) (n))) (`$aopsdc))),Some((`$aopsdc :  M) ↦ (((((right-multiply) (`$aopsdc)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n))))),4.120537633910574E-4), ((`$aoxelo : M ) ~> (((eqM) (((mul) (`$aoxelo)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (`$aoxelo)) (m))),Some((`$aoxelo :  M) ↦ (((((left-multiply) (`$aoxelo)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m)))),4.096742789530242E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))),0.0017297607606381565), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))),0.0016585684044215447), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),6.473902545714702E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.48847782990628E-4), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),3.158749164464582E-4), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.0354640321169013E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)),6.451773739265546E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.032008820471714E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016623025339325497), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.020292291396474444), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (m)) (m)),0.020269829588409106), ((`$tmaxy : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$tmaxy)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`$tmaxy))),Some((`$tmaxy :  M) ↦ (((((trans) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (`$tmaxy)) (((ass2) (m)) (((mul) (m)) (n))))),4.117426517927406E-4), (((eqM) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))),Some((((sym) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),7.785544034795261E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))) (n)),0.0036183629026781718), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),0.0017337137240858748), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),6.193059006597424E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),6.473902545714702E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.466299202867372E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),0.0016604624957022296), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),3.1658608112856317E-4), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),3.1623563918662143E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),0.0017337137186936296), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))),0.0017297607606381565), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),6.200129616187784E-4), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.032008820471714E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))),0.0016566765186382594), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),3.1658608112856317E-4), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),0.0017735585957518508), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.1730966972732876E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),6.193059006597424E-4), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.0388287162412775E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),0.0017356935942689782), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),3.169584268158915E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))) (m)),0.003618362893678446), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))),0.009712149494536753), ((`$aoynxm : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`$aoynxm))) (((mul) (m)) (`$aoynxm))),Some((`$aoynxm :  M) ↦ (((((right-multiply) (`$aoynxm)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m)))),4.110091879539023E-4), ((`$aoawns : M ) ~> (((eqM) (((mul) (`$aoawns)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (`$aoawns)) (((mul) (m)) (n)))),Some((`$aoawns :  M) ↦ (((((left-multiply) (`$aoawns)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))))),3.4664696613515884E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),0.0017337137186936296), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),6.207002184820719E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016604063437183582), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)),6.451773739265546E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.0354713129877474E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)),0.003622495008644188), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.032008820471714E-4), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.03200154790599E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.473683601346171E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),3.1623563918662143E-4), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.0354640321169013E-4), ((`$anufrw : M ) ~> ((((eqM) (n)) (`$anufrw)) → (((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`$anufrw))),Some((`$anufrw :  M) ↦ (((((trans) (((mul) (m)) (((mul) (m)) (n)))) (n)) (`$anufrw)) (((ass2) (m)) (n)))),0.001729306682794473), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.481076555953547E-4), ((`$anacqh : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (`$anacqh))) (((mul) (m)) (`$anacqh))),Some((`$anacqh :  M) ↦ (((((right-multiply) (`$anacqh)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m)))),4.096742789530242E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)),0.003618362893678446), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016604063437183582), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)),6.179145402291356E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016604063437183582), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.481076555953547E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.0251969740189004E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),6.466517897490542E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)),6.451773739265546E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))),0.009701071152852276), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),0.0017337137240858748), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (n)) (n)),0.020269829588409106), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.020292291396474444), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)),6.451773739265546E-4), ((`$aohxyi : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aohxyi)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`$aohxyi))),Some((`$aohxyi :  M) ↦ (((((trans) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (`$aohxyi)) (((ass2) (n)) (((mul) (m)) (n))))),4.117426517927406E-4), ((`$anzowp : M ) ~> (((eqM) (((mul) (`$anzowp)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (`$anzowp)) (m))),Some((`$anzowp :  M) ↦ (((((left-multiply) (`$anzowp)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m)))),4.096742789530242E-4), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.032008820471714E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))),0.0016566765186382594), ((`$anewoy : M ) ~> (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (`$anewoy))) (((mul) (m)) (`$anewoy))),Some((`$anewoy :  M) ↦ (((((right-multiply) (`$anewoy)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m)))),4.096742789530242E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)),0.003622495008644188), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),0.0017337137240858748), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),3.169584268158915E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),0.0016585684493783497), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),6.200129616187784E-4), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)),6.179145402291356E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.473683601346171E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))),0.0016566765186382594), (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.0354713129877474E-4), ((`$anxvdf : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$anxvdf)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`$anxvdf))),Some((`$anxvdf :  M) ↦ (((((trans) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (`$anxvdf)) (((ass1) (((mul) (m)) (n))) (n)))),3.431469188004492E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))),0.0017297607606381565), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))),0.001731736106914101), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),0.0016585684493783497), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)),0.0036183629026781718), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),6.200131369640645E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),0.0016585684493783497), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),3.1658608112856317E-4), ((`$aodwjv : M ) ~> ((((eqM) (m)) (`$aodwjv)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (`$aodwjv))),Some((`$aodwjv :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (n))) (m)) (`$aodwjv)) (((ass1) (m)) (n)))),0.001727607365782494), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)),0.003618362893678446), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),6.466517897490542E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),3.1623563918662143E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),0.0016604624957022296), ((`$tnagh : M ) ~> ((((eqM) (n)) (`$tnagh)) → (((eqM) (((mul) (((mul) (n)) (n))) (n))) (`$tnagh))),Some((`$tnagh :  M) ↦ (((((trans) (((mul) (((mul) (n)) (n))) (n))) (n)) (`$tnagh)) (((ass1) (n)) (n)))),3.415817189853164E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),0.0017317361166074333), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)),6.179145402291356E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),6.200131369640645E-4), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.0251969740189004E-4), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.0251969740189004E-4), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)),6.18620187624636E-4), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),3.1658608112856317E-4), (((eqM) (n)) (((mul) (((mul) (n)) (n))) (n)),Some((((sym) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),7.768052683794381E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))) (n)),0.0036183629026781718), ((`$aouwhz : M ) ~> ((((eqM) (n)) (`$aouwhz)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$aouwhz))),Some((`$aouwhz :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (`$aouwhz)) (((ass2) (((mul) (m)) (n))) (n)))),4.106736722057768E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.028651687544582E-4), ((`$annbsc : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (`$annbsc))) (((mul) (n)) (`$annbsc))),Some((`$annbsc :  M) ↦ (((((right-multiply) (`$annbsc)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m)))),3.433923302038715E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)),6.459141549923714E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),0.0017735585957518508), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),3.1694761600435184E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016604063437183582), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.48847782990628E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))),0.0016585684044215447), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.03200154790599E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),6.466517897490542E-4), (((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),8.129524361607483E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),3.169584268158915E-4), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),3.158749164464582E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016604063437183582), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)),6.466517897490542E-4), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),6.200129616187784E-4), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.020292291396474444), ((((eqM) (m)) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (m)) (m)),0.020269829588409106), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),3.158749164464582E-4), ((`$aorrkq : M ) ~> ((((eqM) (n)) (`$aorrkq)) → (((eqM) (((mul) (((mul) (n)) (m))) (m))) (`$aorrkq))),Some((`$aorrkq :  M) ↦ (((((trans) (((mul) (((mul) (n)) (m))) (m))) (n)) (`$aorrkq)) (((ass1) (n)) (m)))),3.415817189853164E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),0.0017337137240858748), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),3.158749164464582E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),0.0016585684493783497), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),0.0017715355381422318), ((((eqM) (m)) (m)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (m)) (m)),0.020246708208373373), ((((eqM) (n)) (n)) → (((eqM) (((mul) (n)) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (n)) (n)),0.020246708208373373), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)),6.459141549923714E-4), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),3.1658608112856317E-4), ((`$aokfix : M ) ~> (((eqM) (((mul) (`$aokfix)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (`$aokfix)) (m))),Some((`$aokfix :  M) ↦ (((((left-multiply) (`$aokfix)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m)))),3.433923302038715E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (n)))),0.009712149494536753), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),0.001735693584553494), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),0.0017715355806512208), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.0422989969398196E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)),6.451773739265546E-4), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)),6.18620187624636E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))),0.009701071152852276), ((`$ansowg : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`$ansowg))) (((mul) (((mul) (m)) (n))) (`$ansowg))),Some((`$ansowg :  M) ↦ (((((right-multiply) (`$ansowg)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))))),4.13397173117219E-4), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.0388287162412775E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))),0.0016585684044215447), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))),0.0017297607606381565), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.032008820471714E-4), ((`$tjgek : M ) ~> (((eqM) (((mul) (`$tjgek)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (`$tjgek)) (n))),Some((`$tjgek :  M) ↦ (((((left-multiply) (`$tjgek)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m)))),3.433923302038715E-4), (((eqM) (m)) (((mul) (((mul) (m)) (m))) (m)),Some((((sym) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),7.768052683794381E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))),0.001735693584553494), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))),0.0017297607606381565), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)),6.179145402291356E-4), (((eqM) (m)) (((mul) (((mul) (m)) (n))) (n)),Some((((sym) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),0.004548920920961328), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))),0.0017297607606381565), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)),0.0036224949996341853), ((((eqM) (n)) (n)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (n)) (n)),0.020246708208373373), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (m)) (m)),0.020246708208373373), (((eqM) (n)) (((mul) (m)) (((mul) (m)) (n))),Some((((sym) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),0.004548920811807421), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),3.16596879608458E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)),6.459141549923714E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),6.473902545714702E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.0354640321169013E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016642008444935346), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.473683601346171E-4), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.03200154790599E-4), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (n))) (((mul) (m)) (n))),0.025011271032051127), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))),0.001731736106914101), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),3.16596879608458E-4), ((`$swksc : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$swksc))) (((mul) (n)) (`$swksc))),Some((`$swksc :  M) ↦ (((((right-multiply) (`$swksc)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n))))),3.4500956256712485E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))),0.0016566765186382594), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),6.193057255144689E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.473683601346171E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),0.0016604624957022296), (((eqM) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))),Some((((sym) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),7.785544034795261E-4), ((`$anxqrd : M ) ~> (((eqM) (((mul) (`$anxqrd)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (`$anxqrd)) (m))),Some((`$anxqrd :  M) ↦ (((((left-multiply) (`$anxqrd)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m)))),4.110091879539023E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))),0.001731736106914101), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.466299202867372E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016623024888745292), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))),0.0017297607606381565), (((eqM) (n)) (((mul) (n)) (((mul) (n)) (n))),Some((((sym) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),8.110985906266676E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)),6.451773739265546E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),0.0017317361166074333), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),3.158749164464582E-4), ((`$apadox : M ) ~> (((eqM) (((mul) (`$apadox)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (`$apadox)) (((mul) (m)) (n)))),Some((`$apadox :  M) ↦ (((((left-multiply) (`$apadox)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n))))),4.120537633910574E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)),6.451773739265546E-4), (((eqM) (n)) (((mul) (((mul) (n)) (m))) (m)),Some((((sym) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),7.768052683794381E-4), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),3.1694761600435184E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.1767203092660347E-4), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),3.16596879608458E-4), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),3.1694761600435184E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),6.466517897490542E-4), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),6.193057255144689E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),6.193059006597424E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))),0.0016566765186382594), ((`$aoarga : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aoarga)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`$aoarga))),Some((`$aoarga :  M) ↦ (((((trans) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (`$aoarga)) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n))))),4.130508196573796E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))),0.009701071152852276), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (n)) (n))),Some((((left-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)),6.179145402291356E-4), (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n)))),3.1658608112856317E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.466299202867372E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.481076555953547E-4), (((eqM) (m)) (((mul) (n)) (((mul) (n)) (m))),Some((((sym) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),8.110985906266676E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (((ass1) (m)) (((mul) (m)) (n)))),3.032008820471714E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),0.001773558638309384), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))),0.0016566765186382594), ((`$anckrc : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`$anckrc))) (((mul) (((mul) (m)) (n))) (`$anckrc))),Some((`$anckrc :  M) ↦ (((((right-multiply) (`$anckrc)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n))))),4.120537633910574E-4), ((((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)),6.193057255144689E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),0.0017317361166074333), ((`$tbozs : M ) ~> (((eqM) (((mul) (`$tbozs)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (`$tbozs)) (((mul) (m)) (n)))),Some((`$tbozs :  M) ↦ (((((left-multiply) (`$tbozs)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (n)) (((mul) (m)) (n))))),4.120537633910574E-4), ((`$anrize : M ) ~> (((eqM) (((mul) (`$anrize)) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (`$anrize)) (n))),Some((`$anrize :  M) ↦ (((((left-multiply) (`$anrize)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n)))),4.096742789530242E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),6.207002184820719E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),3.16596879608458E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))),0.0016566765186382594), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016642008444935346), ((((eqM) (m)) (m)) → (((eqM) (((mul) (m)) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (m)) (m)),0.02492662169936354), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))),0.0016566765186382594), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))),0.0017297607606381565), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),6.193059006597424E-4), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (m))),Some((((left-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)),6.179145402291356E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016623024888745292), ((`$anvmxu : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`$anvmxu))) (((mul) (((mul) (m)) (n))) (`$anvmxu))),Some((`$anvmxu :  M) ↦ (((((right-multiply) (`$anvmxu)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m)))),3.450215627766376E-4), (((eqM) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))),Some((((sym) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),8.129247079956816E-4), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)),6.179145402291356E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),0.001737675715701976), ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))) (m)),0.003618362893678446), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)),6.451773739265546E-4), ((`$anrsoh : M ) ~> (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`$anrsoh))) (((mul) (((mul) (m)) (n))) (`$anrsoh))),Some((`$anrsoh :  M) ↦ (((((right-multiply) (`$anrsoh)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n)))),3.450215627766376E-4), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.0354640321169013E-4), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))) (m)),6.451773739265546E-4), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))),Some((((sym) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),7.803056054703697E-4), ((`$aolgtx : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$aolgtx)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`$aolgtx))),Some((`$aolgtx :  M) ↦ (((((trans) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (`$aolgtx)) (((ass1) (((mul) (m)) (n))) (m)))),3.431469188004492E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),0.0017356935942689782), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),6.207002184820719E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (m)) (m))),Some((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)),6.451773739265546E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),3.16596879608458E-4), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n)),Some(((((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),3.1658608112856317E-4), ((`$aniczl : M ) ~> ((((eqM) (m)) (`$aniczl)) → (((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`$aniczl))),Some((`$aniczl :  M) ↦ (((((trans) (((mul) (m)) (((mul) (m)) (m)))) (m)) (`$aniczl)) (((ass2) (m)) (m)))),4.0937374315038117E-4), ((`$aomumi : M ) ~> ((((eqM) (n)) (`$aomumi)) → (((eqM) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$aomumi))),Some((`$aomumi :  M) ↦ (((((trans) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (`$aomumi)) (((ass1) (n)) (((mul) (m)) (n))))),3.431621967691341E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (m)))),0.0017297607606381565), ((`$anbigm : M ) ~> ((((eqM) (m)) (`$anbigm)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$anbigm))),Some((`$anbigm :  M) ↦ (((((trans) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) (`$anbigm)) (((ass1) (m)) (((mul) (m)) (n))))),3.431621967691341E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m))),3.03200154790599E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016623025339325497), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (m))) (((mul) (((mul) (m)) (n))) (m))),Some((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),6.193059006597424E-4), (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n))),3.03200154790599E-4), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (n))) (((mul) (m)) (n)),Some(((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),3.158749164464582E-4), ((`$anbgrc : M ) ~> (((eqM) (((mul) (`$anbgrc)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (`$anbgrc)) (((mul) (m)) (n)))),Some((`$anbgrc :  M) ↦ (((((left-multiply) (`$anbgrc)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (n)))),3.450215627766376E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (m))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)),6.459141549923714E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016604063437183582), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),0.0017337137240858748), ((`$anutxq : M ) ~> (((eqM) (((mul) (`$anutxq)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (`$anutxq)) (m))),Some((`$anutxq :  M) ↦ (((((left-multiply) (`$anutxq)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)))),0.001727727030782555), ((`$anwsyi : M ) ~> ((((eqM) (m)) (`$anwsyi)) → (((eqM) (((mul) (((mul) (m)) (m))) (m))) (`$anwsyi))),Some((`$anwsyi :  M) ↦ (((((trans) (((mul) (((mul) (m)) (m))) (m))) (m)) (`$anwsyi)) (((ass1) (m)) (m)))),3.415817189853164E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),0.0017715355806512208), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),0.0017356935942689782), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))),0.0017297607606381565), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (n))) (((mul) (`c)) (n)))),Some(((right-multiply) (n)) (((mul) (m)) (((mul) (m)) (n)))),0.00970107109855087), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),0.0017715355806512208), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))),0.0016566765186382594), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))),0.001773558638309384), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),3.169584268158915E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n))),3.16596879608458E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (n)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (n)) (((ass1) (n)) (((mul) (m)) (n)))),3.032008820471714E-4), ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))) (n)),6.18620187624636E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),0.0017317361166074333), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (m))) (m))),0.0016585684044215447), (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),3.158749164464582E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),0.00971214954890017), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))),6.214090470725045E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))),6.193059006597424E-4), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),3.1623563918662143E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))),0.0017356935942689782), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),0.0017337137186936296), ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (m)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (m)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (m)) (((mul) (m)) (m)))) (m)),6.459141549923714E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (m)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (m))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (m)))),0.0017297607606381565), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))),0.001731736106914101), (((eqM) (((mul) (n)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (n)) (n)),Some(((((left-multiply) (n)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.0251969740189004E-4), ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (m)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (m)) (m))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)),6.179145402291356E-4), ((`$anfate : M ) ~> (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (`$anfate))) (((mul) (n)) (`$anfate))),Some((`$anfate :  M) ↦ (((((right-multiply) (`$anfate)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n)))),3.433923302038715E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.0388287162412775E-4), ((((eqM) (((mul) (m)) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (m)) (n))) (((mul) (m)) (n))),0.020292291396474444), ((((eqM) (n)) (n)) → (((eqM) (((mul) (((mul) (m)) (n))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((left-multiply) (((mul) (m)) (n))) (n)) (n)),0.020269829588409106), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.1767203092660347E-4), ((`$amzrvx : M ) ~> (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (`$amzrvx))) (((mul) (m)) (`$amzrvx))),Some((`$amzrvx :  M) ↦ (((((right-multiply) (`$amzrvx)) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)))),0.001727727030782555), (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),3.158749164464582E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (n)))) (n)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (m))) (((mul) (n)) (m))),Some((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (n)))) (n)),6.451773739265546E-4), (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (m)) (((mul) (m)) (n)))),3.1658608112856317E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (n))) (((mul) (((mul) (m)) (n))) (n))),Some((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.466299202867372E-4), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n)))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),6.193059006597424E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))),0.0016604063437183582), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),0.0017317361166074333), ((`$andeig : M ) ~> ((((eqM) (m)) (`$andeig)) → (((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`$andeig))),Some((`$andeig :  M) ↦ (((((trans) (((mul) (n)) (((mul) (n)) (m)))) (m)) (`$andeig)) (((ass2) (n)) (m)))),4.0937374315038117E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (m)))),0.001731736106914101), ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n)))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (((mul) (m)) (n))),6.200131369640645E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))),0.0017317361166074333), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.0251969740189004E-4), (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))))) (((mul) (m)) (m)),Some(((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),3.16596879608458E-4), ((`c : M ) ~> ((((eqM) (((mul) (m)) (((mul) (m)) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))),0.00970107109855087), ((`$anpqch : M ) ~> (((eqM) (((mul) (`$anpqch)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (`$anpqch)) (n))),Some((`$anpqch :  M) ↦ (((((left-multiply) (`$anpqch)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n)))),3.433923302038715E-4), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (n)))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),3.158749164464582E-4), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (n)) (n)),Some(((((right-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.0251969740189004E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),0.0017317361166074333), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n))))) (((mul) (((mul) (m)) (n))) (n)),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (n)) (((mul) (n)) (n)))) (n)) (((ass2) (n)) (n))),3.1623563918662143E-4), (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (n)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (n)) (n))) (n))) (n)) (((ass1) (n)) (n))),3.028651687544582E-4), (((eqM) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))),Some((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),8.147827273004587E-4), ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (n)) → (((eqM) (((mul) (((mul) (((mul) (n)) (n))) (n))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (n)) (n))) (n))) (n)),6.179145402291356E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (n))) (n))),0.0016585684493783497), (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (m)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))) (m)) (((ass2) (n)) (m))),3.158749164464582E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (m)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (n)) (((mul) (n)) (m))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (n)) (((mul) (n)) (m)))),0.0017297607606381565), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))),0.0016585684044215447), (((eqM) (((mul) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (m)) (((mul) (m)) (n))),Some(((((left-multiply) (m)) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.0388287162412775E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (n))),Some((((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),6.466517897490542E-4), ((`$sljmh : M ) ~> (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (`$sljmh))) (((mul) (n)) (`$sljmh))),Some((`$sljmh :  M) ↦ (((((right-multiply) (`$sljmh)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n)))),0.0017294046468329261), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (m))) (((mul) (((mul) (m)) (n))) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.1730966972732876E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (n)) (n))) (n))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (n))) (n)))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (n)) (n))) (n))),0.0016566765186382594), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`c)) → (((eqM) (((mul) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))))) (((mul) (m)) (`c)))),Some(((left-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))),0.0017337137240858748), ((`$aowbrq : M ) ~> (((eqM) (((mul) (`$aowbrq)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (`$aowbrq)) (n))),Some((`$aowbrq :  M) ↦ (((((left-multiply) (`$aowbrq)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n)))),0.0017294046468329261), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (n))) (((mul) (m)) (n)))) (((mul) (`c)) (((mul) (m)) (n))))),Some(((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),0.00971214954890017), ((((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)) → (((eqM) (((mul) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n)))),Some((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (m)),6.200129616187784E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),3.16596879608458E-4), (((eqM) (m)) (((mul) (m)) (((mul) (m)) (m))),Some((((sym) (((mul) (m)) (((mul) (m)) (m)))) (m)) (((ass2) (m)) (m))),8.110985906266676E-4), (((eqM) (m)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m))),Some((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (m)))) (m)) (((ass2) (((mul) (m)) (n))) (m))),8.129524361607483E-4), ((`$aotugt : M ) ~> (((eqM) (((mul) (`$aotugt)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (`$aotugt)) (((mul) (m)) (n)))),Some((`$aotugt :  M) ↦ (((((left-multiply) (`$aotugt)) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (m)))),3.450215627766376E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (m))) (m)))) (((mul) (n)) (m)),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.0251969740189004E-4), ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n))) (((mul) (n)) (n))),Some((((right-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)),6.466517897490542E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (((mul) (m)) (n)))) (((mul) (m)) (((mul) (m)) (n))),Some(((((right-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.028651687544582E-4), (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n))),Some(((((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))))) (((mul) (m)) (n))) (((ass2) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.1730966972732876E-4), (((eqM) (((mul) (((mul) (m)) (((mul) (m)) (n)))) (m))) (((mul) (n)) (m)),Some(((((right-multiply) (m)) (((mul) (m)) (((mul) (m)) (n)))) (n)) (((ass2) (m)) (n))),0.0017715355381422318), (((eqM) (((mul) (m)) (((mul) (((mul) (n)) (m))) (m)))) (((mul) (m)) (n)),Some(((((left-multiply) (m)) (((mul) (((mul) (n)) (m))) (m))) (n)) (((ass1) (n)) (m))),3.0251969740189004E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (n))) (`c)) → (((eqM) (((mul) (n)) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (n)) (`c)))),Some(((left-multiply) (n)) (((mul) (((mul) (m)) (n))) (n))),0.009701071152852276), (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n))))) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n))),Some(((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n)))),3.0422989969398196E-4), (((eqM) (((mul) (((mul) (((mul) (m)) (m))) (m))) (m))) (((mul) (m)) (m)),Some(((((right-multiply) (m)) (((mul) (((mul) (m)) (m))) (m))) (m)) (((ass1) (m)) (m))),3.0251969740189004E-4), ((`c : M ) ~> ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (`c)) → (((eqM) (((mul) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (m))) (((mul) (`c)) (m)))),Some(((right-multiply) (m)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))),0.0017317361166074333), ((((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n)))))) (((mul) (m)) (((mul) (m)) (n)))),Some((((left-multiply) (m)) (((mul) (m)) (((mul) (m)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.466299202867372E-4), ((`$anjgvw : M ) ~> ((((eqM) (((mul) (m)) (n))) (`$anjgvw)) → (((eqM) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (`$anjgvw))),Some((`$anjgvw :  M) ↦ (((((trans) (((mul) (((mul) (((mul) (m)) (n))) (((mul) (m)) (n)))) (((mul) (m)) (n)))) (((mul) (m)) (n))) (`$anjgvw)) (((ass1) (((mul) (m)) (n))) (((mul) (m)) (n))))),3.4473506732074076E-4), ((((eqM) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))) → (((eqM) (((mul) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n)))))) (((mul) (n)) (((mul) (m)) (n)))),Some((((left-multiply) (n)) (((mul) (n)) (((mul) (n)) (((mul) (m)) (n))))) (((mul) (m)) (n))),6.466299202867372E-4), ((`$twtbd : M ) ~> ((((eqM) (n)) (`$twtbd)) → (((eqM) (((mul) (n)) (((mul) (n)) (n)))) (`$twtbd))),Some((`$twtbd :  M) ↦ (((((trans) (((mul) (n)) (((mul) (n)) (n)))) (n)) (`$twtbd)) (((ass2) (n)) (n)))),4.0937374315038117E-4), ((`c : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))) (((mul) (((mul) (m)) (n))) (`c)))),Some(((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))),0.0016604624957022296)))
2020.06.24 06:58:29 [INFO] provingground.learning.HoTTBot.scribeLog:1893:16 - Post; tag: TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas], id: (21,-764482322)
2020.06.24 06:58:29 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.post:384:20 - triggered (multiple) responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] to posts of type TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas]
2020.06.24 06:58:33 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.taskNest:389:32 - launching 1 branches
2020.06.24 06:58:33 [INFO] provingground.learning.HoTTBot.$anonfun:964:22 - previous special init states are 2
2020.06.24 06:58:33 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun:394:36 - launching 2 responses  of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] in branch
2020.06.24 07:02:15 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (22,-605203666)
2020.06.24 07:02:15 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun.applyOrElse:399:44 - remaining 1 responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState]
2020.06.24 07:10:03 [ERROR] provingground.learning.ExprCalc.stableVec:599:25 - Timeout for stable vector after 1678 steps
2020.06.24 07:10:20 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (23,-394906572)
2020.06.24 07:10:20 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun.applyOrElse:399:44 - remaining 0 responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState]
2020.06.24 07:10:20 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type], id: (24,-1666923435), content:
TangentBaseCompleted
2020.06.24 07:10:20 [INFO] provingground.learning.HoTTBot.scribeLog:1893:16 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type], id: (24,-1666923435)
2020.06.24 07:10:20 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes] to posts of type TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type]
2020.06.24 07:10:20 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type]
2020.06.24 07:10:39 [INFO] provingground.learning.HoTTBot.$anonfun:1160:26 - generating equations with 2 base states and 471 lemmas (before pruning)
2020.06.24 07:10:39 [INFO] provingground.learning.HoTTBot.$anonfun:1168:26 - Tangent lemmas (used with bases below): 5
(((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),0.0012575089908058784)
(((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),2.2570323033921284E-5)
(((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))),2.420157898042501E-6)
(((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)),1.4939337431697457E-5)
(((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),2.0405730858162146E-5)
2020.06.24 07:10:39 [INFO] provingground.learning.HoTTBot.$anonfun:1182:28 - Terms in base (used with tangents above): 2
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best term: (left-multiply) (((mul) (m)) (n)) with weight 0.010900656328161852
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best term: (right-multiply) (m) with weight 0.010900658376211209
2020.06.24 07:10:39 [INFO] provingground.learning.HoTTBot.$anonfun:1194:28 - Lemmas in base for mixin (used with tangents above): 3
Type: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best term: ((ass1) (m)) (n) with weight 0.0067858647631189135
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best term: ((ass2) (((mul) (m)) (n))) (n) with weight 0.0012852175630809646
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)); best term: ((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)) with weight 0.001391048866384188
2020.06.24 07:10:39 [INFO] provingground.learning.HoTTBot.$anonfun:1201:28 - Inference by unified applications, triples and weights (for this base state)
(0.0, 2.420157898042501E-6, 0.0) for ((`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))), (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))))
(0.0, 1.4939337431697457E-5, 0.0) for ((`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)))
(0.010900656328161852, 0.0012575089908058784, 1.3707673338348522E-5) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))), ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)))
(0.010900658376211209, 0.0, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))

2020.06.24 07:12:07 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 9.5367431640625E-13
2020.06.24 07:13:11 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 9.5367431640625E-13
2020.06.24 07:13:12 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes], id: (25,984030883)
2020.06.24 07:13:12 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.ExpressionEval] to posts of type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes]
2020.06.24 07:13:12 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes]
2020.06.24 07:13:12 [INFO] provingground.learning.HoTTBot.scribeLog:1893:16 - Post; tag: TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes], id: (25,984030883)
2020.06.24 07:15:11 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (26,784720993), content:
provingground.learning.ExpressionEval$$anon$2@2ec5e461
2020.06.24 07:15:11 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.FinalState] to posts of type TypeTag[provingground.learning.ExpressionEval]
2020.06.24 07:15:11 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.ExpressionEval]
2020.06.24 07:15:11 [INFO] provingground.learning.HoTTBot.scribeLog:1893:16 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (26,784720993)
2020.06.24 07:16:15 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.FinalState], id: (27,-959512134)
2020.06.24 07:16:15 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.Lemmas] to posts of type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 07:16:15 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 07:16:15 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 07:16:15 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.24 07:16:15 [INFO] provingground.learning.HoTTBot.scribeLog:1893:16 - Post; tag: TypeTag[provingground.learning.HoTTMessages.FinalState], id: (27,-959512134)
2020.06.24 07:16:17 [INFO] provingground.learning.HoTTBot.$anonfun:339:18 - Results: 5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best proof: ((ass1) (m)) (n) with weight 2.5611277687107687E-4; statement weight 1.8182912823090813E-5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best proof: ((ass2) (((mul) (m)) (n))) (n) with weight 2.5708718552283876E-4; statement weight 5.835085888117063E-8
Lemma: ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))); best proof: (((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)) with weight 2.109889996085652E-10; statement weight 5.9593020011980245E-8
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)); best proof: ((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)) with weight 2.842896702298002E-9; statement weight 2.1623613810154945E-10
Lemma: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best proof: ((ass1) (((mul) (m)) (n))) (m) with weight 2.5708718552283876E-4; statement weight 5.052442609680381E-8
2020.06.24 07:16:21 [INFO] provingground.learning.HoTTBot.$anonfun:339:18 - Steps (in final state): 4
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best proof: trans with weight 0.056489563204501776; statement weight 4.006281155225506E-11
Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))); best proof: (`$aagnmuy :  M) ↦ (((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$aagnmuy)) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) with weight 1.026994155032952E-11; statement weight 0.0
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best proof: (left-multiply) (((mul) (m)) (n)) with weight 0.005968214675677784; statement weight 2.2672065485930693E-13
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best proof: (right-multiply) (m) with weight 0.005945594023289742; statement weight 2.2616343762990137E-13
