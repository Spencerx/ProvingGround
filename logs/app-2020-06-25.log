2020.06.25 06:22:12 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TautologyInitState], id: (1,-384837536), content:
TautologyInitState(TermState([m : 0.14285714285714285, sym : 0.14285714285714285, ((mul) (m)) (n) : 0.14285714285714285, refl : 0.14285714285714285, mul : 0.14285714285714285, n : 0.14285714285714285, trans : 0.14285714285714285],[M : 1.0],Vector(),[],[],Empty))
2020.06.25 06:22:12 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.SpecialInitState], id: (2,1588327529), content:
SpecialInitState(TermState([trans : 0.9, sym : 0.1],[M : 1.0],Vector(),[],[],Empty),0.001,0.5,0.05,Some(TermGenParams(0.0,0.4,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.7,0.5,0.0,0.0,0.0,<function1>)),Some(2))
2020.06.25 06:22:12 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.SpecialInitState], id: (3,246182078), content:
SpecialInitState(TermState([left-multiply : 0.2, right-multiply : 0.2, ((mul) (m)) (n) : 0.2, m : 0.2, n : 0.2],[M : 1.0],Vector(),[],[],Empty),0.001,0.5,0.5,Some(TermGenParams(0.4,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.7,0.5,0.0,0.0,0.0,<function1>)),Some(2))
2020.06.25 06:22:12 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.LocalProver], id: (4,582823858), content:
LocalProver(TermState([m : 0.08333333333333333, left-multiply : 0.08333333333333333, eqM : 0.08333333333333333, mul : 0.08333333333333333, n : 0.08333333333333333, trans : 0.08333333333333333, sym : 0.08333333333333333, ass1 : 0.08333333333333333, right-multiply : 0.08333333333333333, ass2 : 0.08333333333333333, refl : 0.08333333333333333, ((mul) (m)) (n) : 0.08333333333333333],[M : 1.0],Vector(),[],[((eqM) (((mul) (m)) (n))) (((mul) (n)) (m)) : 1.0],Empty),TermGenParams(0.1,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.7,0.5,0.0,0.0,0.0,<function1>),1.0E-4,None,12 minutes,1.01,1.0,10000,10,1.0,1.0,None,false,false,0.5,1.0,Some(500000))
2020.06.25 06:22:12 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.ExpressionEval] to posts of type TypeTag[provingground.learning.LocalProver]
2020.06.25 06:22:27 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (5,741125421), content:
provingground.learning.ExpressionEval$$anon$2@2c2cad2d
2020.06.25 06:22:27 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.ExpressionEval]
2020.06.25 06:22:28 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.FinalState] to posts of type TypeTag[provingground.learning.ExpressionEval]
2020.06.25 06:22:29 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.FinalState], id: (6,-1664112044)
2020.06.25 06:22:29 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.25 06:22:29 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.25 06:22:29 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.Lemmas] to posts of type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.25 06:22:31 [INFO] provingground.learning.HoTTBot.$anonfun:376:26 - Results: 3
()
()
()
2020.06.25 06:22:32 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.Lemmas], id: (7,1645406931)
2020.06.25 06:22:32 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[(provingground.learning.HoTTMessages.UsedLemmas :: provingground.learning.HoTTMessages.TangentLemmas :: shapeless.HNil) :: provingground.learning.HoTTMessages.BaseMixinLemmas :: shapeless.HNil] to posts of type TypeTag[provingground.learning.HoTTMessages.Lemmas]
2020.06.25 06:22:32 [INFO] provingground.learning.HoTTBot.$anonfun:898:24 - excluded lemmas:

2020.06.25 06:22:32 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.UsedLemmas], id: (8,-1445828818)
2020.06.25 06:22:32 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentLemmas], id: (9,-962844701)
2020.06.25 06:22:32 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas], id: (10,1833728595)
2020.06.25 06:22:32 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] to posts of type TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas]
2020.06.25 06:22:35 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (11,368099790)
2020.06.25 06:22:35 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.post:384:20 - triggered (multiple) responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] to posts of type TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas]
2020.06.25 06:22:35 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.taskNest:389:32 - launching 1 branches
2020.06.25 06:22:35 [INFO] provingground.learning.HoTTBot.$anonfun:1005:22 - previous special init states are 2
2020.06.25 06:22:35 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun:394:36 - launching 2 responses  of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] in branch
2020.06.25 06:22:38 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (12,412426767)
2020.06.25 06:22:38 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun.applyOrElse:399:44 - remaining 1 responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState]
2020.06.25 06:22:38 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (13,-2086306360)
2020.06.25 06:22:38 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun.applyOrElse:399:44 - remaining 0 responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState]
2020.06.25 06:22:38 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type], id: (14,-1666923435), content:
TangentBaseCompleted
2020.06.25 06:22:38 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes] to posts of type TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type]
2020.06.25 06:22:38 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type]
2020.06.25 06:22:42 [INFO] provingground.learning.HoTTBot.$anonfun:1201:26 - generating equations with 3 base states and 18 lemmas (before pruning)
2020.06.25 06:22:42 [INFO] provingground.learning.HoTTBot.$anonfun:1209:26 - Tangent lemmas (used with bases below): 3
(((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),0.040700000848968604)
(((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),0.001214698356305945)
(((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),0.001114032298292804)
2020.06.25 06:22:42 [INFO] provingground.learning.HoTTBot.$anonfun:1223:28 - Terms in base (used with tangents above): 3
Type: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best term: trans with weight 0.053326178457998585
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best term: (left-multiply) (((mul) (m)) (n)) with weight 0.002437424090839206
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best term: (right-multiply) (m) with weight 0.002437424090839206
2020.06.25 06:22:42 [INFO] provingground.learning.HoTTBot.$anonfun:1235:28 - Lemmas in base for mixin (used with tangents above): 3
Type: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best term: ((ass1) (m)) (n) with weight 0.050046293108537594
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best term: ((ass2) (((mul) (m)) (n))) (n) with weight 0.011126917673166644
Type: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best term: ((ass1) (((mul) (m)) (n))) (m) with weight 0.010695179485308265
2020.06.25 06:22:42 [INFO] provingground.learning.HoTTBot.$anonfun:1242:28 - Inference by unified applications, triples and weights (for this base state)
(0.053326178457998585, 0.0, 0.0) for ((`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))), (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))))
(0.0, 0.0, 0.0) for ((`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)))
(0.002437424090839206, 0.040700000848968604, 9.920316256645221E-5) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))), ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)))
(0.002437424090839206, 0.0, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))

2020.06.25 06:22:43 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 1.0E-6
2020.06.25 06:22:43 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 1.0E-6
2020.06.25 06:22:45 [INFO] provingground.learning.HoTTBot.$anonfun:1261:28 - Tracing back equations and values for steps
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c))))))
Traced back equations:
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
Weights of terms and types:
P₁(trans ∈ Terms) -> 0.053326178457998585

Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm)))
Traced back equations:

Weights of terms and types:


Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c)))))
Traced back equations:
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap((mul) (m)) ∈ Funcs))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(n ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (Coeff(Init(AtCoord(FuncsWithDomain,M :: HNil)))) * (P₀(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (Coeff(Init(AtCoord(FuncsWithDomain,M :: HNil)))) * (P₀(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(left-multiply) ∈ Funcs))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(((mul) (m)) (n) ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.002437424090839206
P₁(((mul) (m)) (n) ∈ Terms) -> 0.053326178457998585
P₁((mul) (m) ∈ Terms) -> 0.001286599861208855
P₁(m ∈ Terms) -> 0.053326178457998585
P₁(n ∈ Terms) -> 0.053326178457998585
P₁(left-multiply ∈ Terms) -> 0.053326178457998585

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m)))))
Traced back equations:
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (Coeff(Init(AtCoord(FuncsWithDomain,M :: HNil)))) * (P₀(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(right-multiply) ∈ Funcs))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(m ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((right-multiply) (m) ∈ Terms) -> 0.002437424090839206
P₁(m ∈ Terms) -> 0.053326178457998585
P₁(right-multiply ∈ Terms) -> 0.053326178457998585


2020.06.25 06:22:45 [INFO] provingground.learning.HoTTBot.$anonfun:1223:28 - Terms in base (used with tangents above): 2
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best term: (left-multiply) (((mul) (m)) (n)) with weight 0.016270597645731934
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best term: (right-multiply) (m) with weight 0.016270597645731934
2020.06.25 06:22:45 [INFO] provingground.learning.HoTTBot.$anonfun:1235:28 - Lemmas in base for mixin (used with tangents above): 3
Type: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best term: ((ass1) (m)) (n) with weight 0.08055093331491427
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best term: ((ass2) (((mul) (m)) (n))) (n) with weight 0.017883196935657784
Type: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best term: ((ass1) (((mul) (m)) (n))) (m) with weight 0.01723230794846274
2020.06.25 06:22:45 [INFO] provingground.learning.HoTTBot.$anonfun:1242:28 - Inference by unified applications, triples and weights (for this base state)
(0.0, 0.0, 0.0) for ((`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))), (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))))
(0.0, 0.0, 0.0) for ((`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)))
(0.016270597645731934, 0.040700000848968604, 6.622133379945163E-4) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))), ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)))
(0.016270597645731934, 0.0, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))

2020.06.25 06:22:48 [INFO] provingground.learning.HoTTBot.$anonfun:1261:28 - Tracing back equations and values for steps
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c))))))
Traced back equations:
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
Weights of terms and types:
P₁(trans ∈ Terms) -> 0.0

Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm)))
Traced back equations:

Weights of terms and types:


Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c)))))
Traced back equations:
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(n ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (Coeff(Init(AtCoord(FuncsWithDomain,M :: HNil)))) * (P₀(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(left-multiply) ∈ Funcs))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(((mul) (m)) (n) ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.016270597645731934
P₁(((mul) (m)) (n) ∈ Terms) -> 0.08837517523251155
P₁((mul) (m) ∈ Terms) -> 0.0
P₁(m ∈ Terms) -> 0.08837517523251155
P₁(n ∈ Terms) -> 0.08837517523251155
P₁(left-multiply ∈ Terms) -> 0.08837517523251155

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m)))))
Traced back equations:
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (Coeff(Init(AtCoord(FuncsWithDomain,M :: HNil)))) * (P₀(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(right-multiply) ∈ Funcs))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(m ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((right-multiply) (m) ∈ Terms) -> 0.016270597645731934
P₁(m ∈ Terms) -> 0.08837517523251155
P₁(right-multiply ∈ Terms) -> 0.08837517523251155


2020.06.25 06:22:48 [INFO] provingground.learning.HoTTBot.$anonfun:1223:28 - Terms in base (used with tangents above): 1
Type: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best term: trans with weight 0.45000000000000007
2020.06.25 06:22:48 [INFO] provingground.learning.HoTTBot.$anonfun:1235:28 - Lemmas in base for mixin (used with tangents above): 3
Type: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best term: ((ass1) (m)) (n) with weight 0.09114656135389602
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best term: ((ass2) (((mul) (m)) (n))) (n) with weight 0.0202355433962171
Type: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best term: ((ass1) (((mul) (m)) (n))) (m) with weight 0.019499036808838258
2020.06.25 06:22:48 [INFO] provingground.learning.HoTTBot.$anonfun:1242:28 - Inference by unified applications, triples and weights (for this base state)
(0.45000000000000007, 0.0, 0.0) for ((`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))), (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))))
(0.0, 0.0, 0.0) for ((`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)))
(0.0, 0.040700000848968604, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))), ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)))
(0.0, 0.0, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))

2020.06.25 06:22:48 [INFO] provingground.learning.HoTTBot.$anonfun:1261:28 - Tracing back equations and values for steps
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c))))))
Traced back equations:
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
Weights of terms and types:
P₁(trans ∈ Terms) -> 0.45000000000000007

Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm)))
Traced back equations:

Weights of terms and types:


Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c)))))
Traced back equations:
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(n ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(left-multiply) ∈ Funcs))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(((mul) (m)) (n) ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (n) ∈ Terms) -> 0.0
P₁((mul) (m) ∈ Terms) -> 0.0
P₁(m ∈ Terms) -> 0.0
P₁(n ∈ Terms) -> 0.0
P₁(left-multiply ∈ Terms) -> 0.0

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m)))))
Traced back equations:
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(right-multiply) ∈ Funcs))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(m ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((right-multiply) (m) ∈ Terms) -> 0.0
P₁(m ∈ Terms) -> 0.0
P₁(right-multiply ∈ Terms) -> 0.0


2020.06.25 06:22:58 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 1.52587890625E-11
2020.06.25 06:23:00 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes], id: (15,-406838919)
2020.06.25 06:23:00 [INFO] provingground.learning.HoTTBot.scribeLog:1936:16 - Post; tag: TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes], id: (15,-406838919)
2020.06.25 06:23:00 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.ExpressionEval] to posts of type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes]
2020.06.25 06:23:00 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes]
2020.06.25 06:23:35 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (16,1809209328), content:
provingground.learning.ExpressionEval$$anon$2@6bd657f0
2020.06.25 06:23:35 [INFO] provingground.learning.HoTTBot.scribeLog:1936:16 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (16,1809209328)
2020.06.25 06:23:35 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.FinalState] to posts of type TypeTag[provingground.learning.ExpressionEval]
2020.06.25 06:23:35 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.ExpressionEval]
2020.06.25 08:08:22 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TautologyInitState], id: (1,-384837536), content:
TautologyInitState(TermState([m : 0.14285714285714285, sym : 0.14285714285714285, ((mul) (m)) (n) : 0.14285714285714285, refl : 0.14285714285714285, mul : 0.14285714285714285, n : 0.14285714285714285, trans : 0.14285714285714285],[M : 1.0],Vector(),[],[],Empty))
2020.06.25 08:08:22 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.SpecialInitState], id: (2,1588327529), content:
SpecialInitState(TermState([trans : 0.9, sym : 0.1],[M : 1.0],Vector(),[],[],Empty),0.001,0.5,0.05,Some(TermGenParams(0.0,0.4,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.7,0.5,0.0,0.0,0.0,<function1>)),Some(2))
2020.06.25 08:08:22 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.SpecialInitState], id: (3,246182078), content:
SpecialInitState(TermState([left-multiply : 0.2, right-multiply : 0.2, ((mul) (m)) (n) : 0.2, m : 0.2, n : 0.2],[M : 1.0],Vector(),[],[],Empty),0.001,0.5,0.5,Some(TermGenParams(0.4,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.7,0.5,0.0,0.0,0.0,<function1>)),Some(2))
2020.06.25 08:08:22 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.LocalProver], id: (4,582823858), content:
LocalProver(TermState([m : 0.08333333333333333, left-multiply : 0.08333333333333333, eqM : 0.08333333333333333, mul : 0.08333333333333333, n : 0.08333333333333333, trans : 0.08333333333333333, sym : 0.08333333333333333, ass1 : 0.08333333333333333, right-multiply : 0.08333333333333333, ass2 : 0.08333333333333333, refl : 0.08333333333333333, ((mul) (m)) (n) : 0.08333333333333333],[M : 1.0],Vector(),[],[((eqM) (((mul) (m)) (n))) (((mul) (n)) (m)) : 1.0],Empty),TermGenParams(0.1,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.7,0.5,0.0,0.0,0.0,<function1>),1.0E-4,None,12 minutes,1.01,1.0,10000,10,1.0,1.0,None,false,false,0.5,1.0,Some(500000))
2020.06.25 08:08:22 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.ExpressionEval] to posts of type TypeTag[provingground.learning.LocalProver]
2020.06.25 08:08:38 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (5,420427892), content:
provingground.learning.ExpressionEval$$anon$2@190f3874
2020.06.25 08:08:38 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.ExpressionEval]
2020.06.25 08:08:38 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.FinalState] to posts of type TypeTag[provingground.learning.ExpressionEval]
2020.06.25 08:08:38 [INFO] provingground.learning.HoTTBot.expEvToFinalState:472:26 - computing final state
2020.06.25 08:08:39 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2 steps
2020.06.25 08:08:39 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.FinalState], id: (6,-1664112044)
2020.06.25 08:08:39 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.25 08:08:39 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.25 08:08:39 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.Lemmas] to posts of type TypeTag[provingground.learning.HoTTMessages.FinalState]
2020.06.25 08:08:42 [INFO] provingground.learning.HoTTBot.$anonfun:376:26 - Results: 3
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best proof: ((ass1) (m)) (n) with weight 2.666676177661691E-4; statement weight 4.922526522818089E-5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best proof: ((ass2) (((mul) (m)) (n))) (n) with weight 2.6875890673843706E-4; statement weight 3.283350224245018E-7
Lemma: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best proof: ((ass1) (((mul) (m)) (n))) (m) with weight 2.6875890673843706E-4; statement weight 2.901648730630753E-7
2020.06.25 08:08:42 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2 steps
2020.06.25 08:08:43 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.Lemmas], id: (7,1645406931)
2020.06.25 08:08:42 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[(provingground.learning.HoTTMessages.UsedLemmas :: provingground.learning.HoTTMessages.TangentLemmas :: shapeless.HNil) :: provingground.learning.HoTTMessages.BaseMixinLemmas :: shapeless.HNil] to posts of type TypeTag[provingground.learning.HoTTMessages.Lemmas]
2020.06.25 08:08:43 [INFO] provingground.learning.HoTTBot.$anonfun:901:24 - excluded lemmas:

2020.06.25 08:08:43 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.UsedLemmas], id: (8,-1445828818)
2020.06.25 08:08:43 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentLemmas], id: (9,-962844701)
2020.06.25 08:08:43 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas], id: (10,1833728595)
2020.06.25 08:08:43 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] to posts of type TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas]
2020.06.25 08:08:45 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2 steps
2020.06.25 08:08:46 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (11,368099790)
2020.06.25 08:08:46 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.post:384:20 - triggered (multiple) responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] to posts of type TypeTag[provingground.learning.HoTTMessages.BaseMixinLemmas]
2020.06.25 08:08:47 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.taskNest:389:32 - launching 1 branches
2020.06.25 08:08:47 [INFO] provingground.learning.HoTTBot.$anonfun:1008:22 - previous special init states are 2
2020.06.25 08:08:47 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun:394:36 - launching 2 responses  of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState] in branch
2020.06.25 08:08:48 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2 steps
2020.06.25 08:08:47 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2 steps
2020.06.25 08:08:49 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (12,412426767)
2020.06.25 08:08:49 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun.applyOrElse:399:44 - remaining 1 responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState]
2020.06.25 08:08:49 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseState], id: (13,-2086306360)
2020.06.25 08:08:49 [INFO] provingground.learning.TypedPostResponse.DualMiniBot.$anonfun.applyOrElse:399:44 - remaining 0 responses of type TypeTag[provingground.learning.HoTTMessages.TangentBaseState]
2020.06.25 08:08:49 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type], id: (14,-1666923435), content:
TangentBaseCompleted
2020.06.25 08:08:49 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes] to posts of type TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type]
2020.06.25 08:08:49 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.TangentBaseCompleted.type]
2020.06.25 08:08:52 [INFO] provingground.learning.HoTTBot.$anonfun:1204:26 - generating equations with 3 base states and 18 lemmas (before pruning)
2020.06.25 08:08:52 [INFO] provingground.learning.HoTTBot.$anonfun:1212:26 - Tangent lemmas (used with bases below): 3
(((eqM) (((mul) (((mul) (m)) (n))) (n))) (m),0.040700000848968604)
(((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n),0.001214698356305945)
(((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)),0.001114032298292804)
2020.06.25 08:08:53 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 1.0E-6
2020.06.25 08:08:52 [INFO] provingground.learning.HoTTBot.$anonfun:1226:28 - Terms in base (used with tangents above): 3
Type: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best term: trans with weight 0.053326178457998585
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best term: (left-multiply) (((mul) (m)) (n)) with weight 0.002437424090839206
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best term: (right-multiply) (m) with weight 0.002437424090839206
2020.06.25 08:08:52 [INFO] provingground.learning.HoTTBot.$anonfun:1238:28 - Lemmas in base for mixin (used with tangents above): 3
Type: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best term: ((ass1) (m)) (n) with weight 0.050046293108537594
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best term: ((ass2) (((mul) (m)) (n))) (n) with weight 0.011126917673166644
Type: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best term: ((ass1) (((mul) (m)) (n))) (m) with weight 0.010695179485308265
2020.06.25 08:08:52 [INFO] provingground.learning.HoTTBot.$anonfun:1245:28 - Inference by unified applications, triples and weights (for this base state)
(0.053326178457998585, 0.0, 0.0) for ((`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))), (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))))
(0.0, 0.0, 0.0) for ((`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)))
(0.002437424090839206, 0.040700000848968604, 9.920316256645221E-5) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))), ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)))
(0.002437424090839206, 0.0, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))

2020.06.25 08:08:53 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 1.0E-6
2020.06.25 08:08:57 [INFO] provingground.learning.HoTTBot.$anonfun:1264:28 - Tracing back equations and values for steps
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c))))))
Traced back equations:
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
Weights of terms and types:
P₁(trans ∈ Terms) -> 0.053326178457998585

Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm)))
Traced back equations:

Weights of terms and types:


Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c)))))
Traced back equations:
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap((mul) (m)) ∈ Funcs))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(n ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (Coeff(Init(AtCoord(FuncsWithDomain,M :: HNil)))) * (P₀(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (Coeff(Init(AtCoord(FuncsWithDomain,M :: HNil)))) * (P₀(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(left-multiply) ∈ Funcs))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(((mul) (m)) (n) ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.002437424090839206
P₁(((mul) (m)) (n) ∈ Terms) -> 0.053326178457998585
P₁((mul) (m) ∈ Terms) -> 0.001286599861208855
P₁(m ∈ Terms) -> 0.053326178457998585
P₁(n ∈ Terms) -> 0.053326178457998585
P₁(left-multiply ∈ Terms) -> 0.053326178457998585

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m)))))
Traced back equations:
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (Coeff(Init(AtCoord(FuncsWithDomain,M :: HNil)))) * (P₀(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(right-multiply) ∈ Funcs))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(m ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((right-multiply) (m) ∈ Terms) -> 0.002437424090839206
P₁(m ∈ Terms) -> 0.053326178457998585
P₁(right-multiply ∈ Terms) -> 0.053326178457998585


2020.06.25 08:08:57 [INFO] provingground.learning.HoTTBot.$anonfun:1226:28 - Terms in base (used with tangents above): 2
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best term: (left-multiply) (((mul) (m)) (n)) with weight 0.016270597645731934
Type: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best term: (right-multiply) (m) with weight 0.016270597645731934
2020.06.25 08:08:57 [INFO] provingground.learning.HoTTBot.$anonfun:1238:28 - Lemmas in base for mixin (used with tangents above): 3
Type: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best term: ((ass1) (m)) (n) with weight 0.08055093331491427
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best term: ((ass2) (((mul) (m)) (n))) (n) with weight 0.017883196935657784
Type: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best term: ((ass1) (((mul) (m)) (n))) (m) with weight 0.01723230794846274
2020.06.25 08:08:57 [INFO] provingground.learning.HoTTBot.$anonfun:1245:28 - Inference by unified applications, triples and weights (for this base state)
(0.0, 0.0, 0.0) for ((`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))), (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))))
(0.0, 0.0, 0.0) for ((`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)))
(0.016270597645731934, 0.040700000848968604, 6.622133379945163E-4) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))), ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)))
(0.016270597645731934, 0.0, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))

2020.06.25 08:08:58 [INFO] provingground.learning.HoTTBot.$anonfun:1264:28 - Tracing back equations and values for steps
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c))))))
Traced back equations:
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
Weights of terms and types:
P₁(trans ∈ Terms) -> 0.0

Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm)))
Traced back equations:

Weights of terms and types:


Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c)))))
Traced back equations:
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(n ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (Coeff(Init(AtCoord(FuncsWithDomain,M :: HNil)))) * (P₀(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(left-multiply) ∈ Funcs))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(((mul) (m)) (n) ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.016270597645731934
P₁(((mul) (m)) (n) ∈ Terms) -> 0.08837517523251155
P₁((mul) (m) ∈ Terms) -> 0.0
P₁(m ∈ Terms) -> 0.08837517523251155
P₁(n ∈ Terms) -> 0.08837517523251155
P₁(left-multiply ∈ Terms) -> 0.08837517523251155

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m)))))
Traced back equations:
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (Coeff(Init(AtCoord(FuncsWithDomain,M :: HNil)))) * (P₀(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(right-multiply) ∈ Funcs))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(m ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((right-multiply) (m) ∈ Terms) -> 0.016270597645731934
P₁(m ∈ Terms) -> 0.08837517523251155
P₁(right-multiply ∈ Terms) -> 0.08837517523251155


2020.06.25 08:08:58 [INFO] provingground.learning.HoTTBot.$anonfun:1226:28 - Terms in base (used with tangents above): 1
Type: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best term: trans with weight 0.45000000000000007
2020.06.25 08:08:58 [INFO] provingground.learning.HoTTBot.$anonfun:1238:28 - Lemmas in base for mixin (used with tangents above): 3
Type: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best term: ((ass1) (m)) (n) with weight 0.09114656135389602
Type: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best term: ((ass2) (((mul) (m)) (n))) (n) with weight 0.0202355433962171
Type: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best term: ((ass1) (((mul) (m)) (n))) (m) with weight 0.019499036808838258
2020.06.25 08:08:58 [INFO] provingground.learning.HoTTBot.$anonfun:1245:28 - Inference by unified applications, triples and weights (for this base state)
(0.45000000000000007, 0.0, 0.0) for ((`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))), (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))))
(0.0, 0.0, 0.0) for ((`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)))
(0.0, 0.040700000848968604, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))), ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m), ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)))
(0.0, 0.0, 0.0) for ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))), ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)), ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)))

2020.06.25 08:08:58 [INFO] provingground.learning.HoTTBot.$anonfun:1264:28 - Tracing back equations and values for steps
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c))))))
Traced back equations:
(P₁(trans ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(trans ∈ Terms))
Weights of terms and types:
P₁(trans ∈ Terms) -> 0.45000000000000007

Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm)))
Traced back equations:

Weights of terms and types:


Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c)))))
Traced back equations:
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(((mul) (m)) (n) ∈ Terms))) * (P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((left-multiply) (((mul) (m)) (n)) ∈ Terms))
(P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(left-multiply) ∈ Funcs))) * (P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap((mul) (m)) ∈ Funcs))) * (P₁(n ∈ Terms))
(P₁(((mul) (m)) (n) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(n ∈ Terms))) * (P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁(((mul) (m)) (n) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(((mul) (m)) (n) ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ Funcs)) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((mul) (m) ∈ Terms))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(mul) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((mul) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(mul) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(n ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(n ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(n ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁(n ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(n ∈ Terms))
(P₁(Wrap((mul) (m)) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁((mul) (m) ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(Wrap(left-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(left-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(left-multiply ∈ Terms))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(left-multiply) ∈ Funcs))
(P₁(Wrap(left-multiply) ∈ Funcs)) = (P₁(left-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(((mul) (m)) (n) ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(((mul) (m)) (n) ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((left-multiply) (((mul) (m)) (n)) ∈ Terms) -> 0.0
P₁(((mul) (m)) (n) ∈ Terms) -> 0.0
P₁((mul) (m) ∈ Terms) -> 0.0
P₁(m ∈ Terms) -> 0.0
P₁(n ∈ Terms) -> 0.0
P₁(left-multiply ∈ Terms) -> 0.0

Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m)))))
Traced back equations:
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(typeOf(_),FuncsWithDomain,FlipAppn,Terms,Terms))) * (P₁(m ∈ Terms))) * (P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(FiberProductMap(domOf,TermsWithTyp,Appln,Funcs,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
(P₁((right-multiply) (m) ∈ Terms)) = ((Coeff(ZipMapOpt(UnifApplnOpt,Funcs,Terms,Terms))) * (P₁(Wrap(right-multiply) ∈ Funcs))) * (P₁(m ∈ Terms))
(P₁((right-multiply) (m) ∈ Terms)) = (Coeff(Init(Terms))) * (P₀((right-multiply) (m) ∈ Terms))
(P₁(m ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(m ∈ Terms))
(P₁(Wrap(right-multiply) ∈ AtCoord(FuncsWithDomain,M :: HNil))) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncWithDom(M))}))
(P₁(right-multiply ∈ Terms)) = (Coeff(Init(Terms))) * (P₀(right-multiply ∈ Terms))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (Coeff(Init(Funcs))) * (P₀(Wrap(right-multiply) ∈ Funcs))
(P₁(Wrap(right-multiply) ∈ Funcs)) = (P₁(right-multiply ∈ Terms)) / (P₁({Terms ∈ Restrict(FuncOpt)}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (P₁(m ∈ Terms)) / (P₁({Terms ∈ Filter(WithTyp(typ))}))
(P₁(m ∈ AtCoord(TermsWithTyp,M :: HNil))) = (Coeff(Init(AtCoord(TermsWithTyp,M :: HNil)))) * (P₀(m ∈ AtCoord(TermsWithTyp,M :: HNil)))
Weights of terms and types:
P₁((right-multiply) (m) ∈ Terms) -> 0.0
P₁(m ∈ Terms) -> 0.0
P₁(right-multiply ∈ Terms) -> 0.0


2020.06.25 08:09:08 [INFO] provingground.learning.SimpleEquations.timedUnAppEquations:143:54 - all pairs considered with cutoff 1.52587890625E-11
2020.06.25 08:09:09 [INFO] provingground.learning.ErasablePostBuffer.$anon.post:85:22 - Post; tag: TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes], id: (15,-1492985030)
2020.06.25 08:09:09 [INFO] provingground.learning.HoTTBot.scribeLog:1939:16 - Post; tag: TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes], id: (15,-1492985030)
2020.06.25 08:09:09 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.ExpressionEval] to posts of type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes]
2020.06.25 08:09:09 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.HoTTMessages.GeneratedEquationNodes]
2020.06.25 08:09:44 [INFO] provingground.learning.PostBuffer.$anon.post:244:22 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (16,1010987595), content:
provingground.learning.ExpressionEval$$anon$2@3c42724b
2020.06.25 08:09:44 [INFO] provingground.learning.HoTTBot.scribeLog:1939:16 - Post; tag: TypeTag[provingground.learning.ExpressionEval], id: (16,1010987595)
2020.06.25 08:09:44 [INFO] provingground.learning.TypedPostResponse.MicroBot.post:227:18 - triggered response of type TypeTag[provingground.learning.HoTTMessages.FinalState] to posts of type TypeTag[provingground.learning.ExpressionEval]
2020.06.25 08:09:44 [INFO] provingground.learning.HoTTBot.expEvToFinalState:472:26 - computing final state
2020.06.25 08:09:44 [INFO] provingground.learning.TypedPostResponse.Callback.post:188:18 - triggered callback for type TypeTag[provingground.learning.ExpressionEval]
2020.06.25 08:09:46 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2 steps
2020.06.25 08:09:54 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 102 steps
2020.06.25 08:10:00 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 202 steps
2020.06.25 08:10:07 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 302 steps
2020.06.25 08:10:14 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 402 steps
2020.06.25 08:10:20 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 502 steps
2020.06.25 08:10:27 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 602 steps
2020.06.25 08:10:33 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 702 steps
2020.06.25 08:10:40 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 802 steps
2020.06.25 08:10:47 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 902 steps
2020.06.25 08:10:53 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 1002 steps
2020.06.25 08:11:00 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 1102 steps
2020.06.25 08:11:07 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 1202 steps
2020.06.25 08:11:13 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 1302 steps
2020.06.25 08:11:20 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 1402 steps
2020.06.25 08:11:27 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 1502 steps
2020.06.25 08:11:34 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 1602 steps
2020.06.25 08:11:40 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 1702 steps
2020.06.25 08:11:47 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 1802 steps
2020.06.25 08:11:54 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 1902 steps
2020.06.25 08:12:00 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2002 steps
2020.06.25 08:12:07 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2102 steps
2020.06.25 08:12:14 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2202 steps
2020.06.25 08:12:21 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2302 steps
2020.06.25 08:12:27 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2402 steps
2020.06.25 08:12:34 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2502 steps
2020.06.25 08:12:41 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2602 steps
2020.06.25 08:12:47 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2702 steps
2020.06.25 08:12:54 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2802 steps
2020.06.25 08:13:01 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 2902 steps
2020.06.25 08:13:07 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 3002 steps
2020.06.25 08:13:14 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 3102 steps
2020.06.25 08:13:21 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 3202 steps
2020.06.25 08:13:28 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 3302 steps
2020.06.25 08:13:34 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 3402 steps
2020.06.25 08:13:41 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 3502 steps
2020.06.25 08:13:48 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 3602 steps
2020.06.25 08:13:55 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 3702 steps
2020.06.25 08:14:01 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 3802 steps
2020.06.25 08:14:08 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 3902 steps
2020.06.25 08:14:15 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 4002 steps
2020.06.25 08:14:21 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 4102 steps
2020.06.25 08:14:28 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 4202 steps
2020.06.25 08:14:35 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 4302 steps
2020.06.25 08:14:42 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 4402 steps
2020.06.25 08:14:48 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 4502 steps
2020.06.25 08:14:55 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 4602 steps
2020.06.25 08:15:02 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 4702 steps
2020.06.25 08:15:08 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 4802 steps
2020.06.25 08:15:15 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 4902 steps
2020.06.25 08:15:22 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 5002 steps
2020.06.25 08:15:29 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 5102 steps
2020.06.25 08:15:35 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 5202 steps
2020.06.25 08:15:42 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 5302 steps
2020.06.25 08:15:49 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 5402 steps
2020.06.25 08:15:55 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 5502 steps
2020.06.25 08:16:02 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 5602 steps
2020.06.25 08:16:09 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 5702 steps
2020.06.25 08:16:15 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 5802 steps
2020.06.25 08:16:22 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 5902 steps
2020.06.25 08:16:29 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 6002 steps
2020.06.25 08:16:36 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 6102 steps
2020.06.25 08:16:42 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 6202 steps
2020.06.25 08:16:49 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 6302 steps
2020.06.25 08:16:56 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 6402 steps
2020.06.25 08:17:02 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 6502 steps
2020.06.25 08:17:09 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 6602 steps
2020.06.25 08:17:16 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 6702 steps
2020.06.25 08:17:23 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 6802 steps
2020.06.25 08:17:29 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 6902 steps
2020.06.25 08:17:36 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 7002 steps
2020.06.25 08:17:43 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 7102 steps
2020.06.25 08:17:50 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 7202 steps
2020.06.25 08:17:56 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 7302 steps
2020.06.25 08:18:03 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 7402 steps
2020.06.25 08:18:10 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 7502 steps
2020.06.25 08:18:16 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 7602 steps
2020.06.25 08:18:23 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 7702 steps
2020.06.25 08:18:30 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 7802 steps
2020.06.25 08:18:37 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 7902 steps
2020.06.25 08:18:43 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 8002 steps
2020.06.25 08:18:50 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 8102 steps
2020.06.25 08:18:57 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 8202 steps
2020.06.25 08:19:04 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 8302 steps
2020.06.25 08:19:10 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 8402 steps
2020.06.25 08:19:17 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 8502 steps
2020.06.25 08:19:24 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 8602 steps
2020.06.25 08:19:31 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 8702 steps
2020.06.25 08:19:38 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 8802 steps
2020.06.25 08:19:44 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 8902 steps
2020.06.25 08:19:51 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 9002 steps
2020.06.25 08:19:58 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 9102 steps
2020.06.25 08:20:05 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 9202 steps
2020.06.25 08:20:12 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 9302 steps
2020.06.25 08:20:18 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 9402 steps
2020.06.25 08:20:25 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 9502 steps
2020.06.25 08:20:32 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 9602 steps
2020.06.25 08:20:38 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 9702 steps
2020.06.25 08:20:45 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 9802 steps
2020.06.25 08:20:52 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 9902 steps
2020.06.25 08:20:59 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 10002 steps
2020.06.25 08:21:06 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 10102 steps
2020.06.25 08:21:13 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 10202 steps
2020.06.25 08:21:19 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 10302 steps
2020.06.25 08:21:26 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 10402 steps
2020.06.25 08:21:33 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 10502 steps
2020.06.25 08:21:40 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 10602 steps
2020.06.25 08:21:47 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 10702 steps
2020.06.25 08:21:53 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 10802 steps
2020.06.25 08:22:00 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 10902 steps
2020.06.25 08:22:07 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 11002 steps
2020.06.25 08:22:14 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 11102 steps
2020.06.25 08:22:20 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 11202 steps
2020.06.25 08:22:27 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 11302 steps
2020.06.25 08:22:34 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 11402 steps
2020.06.25 08:22:41 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 11502 steps
2020.06.25 08:22:48 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 11602 steps
2020.06.25 08:22:54 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 11702 steps
2020.06.25 08:23:02 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 11802 steps
2020.06.25 08:23:08 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 11902 steps
2020.06.25 08:23:15 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 12002 steps
2020.06.25 08:23:22 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 12102 steps
2020.06.25 08:23:29 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 12202 steps
2020.06.25 08:23:35 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 12302 steps
2020.06.25 08:23:42 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 12402 steps
2020.06.25 08:23:49 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 12502 steps
2020.06.25 08:23:56 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 12602 steps
2020.06.25 08:24:03 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 12702 steps
2020.06.25 08:24:10 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 12802 steps
2020.06.25 08:24:16 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 12902 steps
2020.06.25 08:24:23 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 13002 steps
2020.06.25 08:24:30 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 13102 steps
2020.06.25 08:24:37 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 13202 steps
2020.06.25 08:24:44 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 13302 steps
2020.06.25 08:24:50 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 13402 steps
2020.06.25 08:24:57 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 13502 steps
2020.06.25 08:25:04 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 13602 steps
2020.06.25 08:25:11 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 13702 steps
2020.06.25 08:25:18 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 13802 steps
2020.06.25 08:25:25 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 13902 steps
2020.06.25 08:25:31 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 14002 steps
2020.06.25 08:25:38 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 14102 steps
2020.06.25 08:25:45 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 14202 steps
2020.06.25 08:25:52 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 14302 steps
2020.06.25 08:25:59 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 14402 steps
2020.06.25 08:26:06 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 14502 steps
2020.06.25 08:26:12 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 14602 steps
2020.06.25 08:26:19 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 14702 steps
2020.06.25 08:26:26 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 14802 steps
2020.06.25 08:26:33 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 14902 steps
2020.06.25 08:26:39 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 15002 steps
2020.06.25 08:26:46 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 15102 steps
2020.06.25 08:26:53 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 15202 steps
2020.06.25 08:27:00 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 15302 steps
2020.06.25 08:27:07 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 15402 steps
2020.06.25 08:27:14 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 15502 steps
2020.06.25 08:27:21 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 15602 steps
2020.06.25 08:27:28 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 15702 steps
2020.06.25 08:27:34 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 15802 steps
2020.06.25 08:27:41 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 15902 steps
2020.06.25 08:27:48 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 16002 steps
2020.06.25 08:27:55 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 16102 steps
2020.06.25 08:28:02 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 16202 steps
2020.06.25 08:28:09 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 16302 steps
2020.06.25 08:28:16 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 16402 steps
2020.06.25 08:28:22 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 16502 steps
2020.06.25 08:28:29 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 16602 steps
2020.06.25 08:28:36 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 16702 steps
2020.06.25 08:28:43 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 16802 steps
2020.06.25 08:28:50 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 16902 steps
2020.06.25 08:28:56 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 17002 steps
2020.06.25 08:29:03 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 17102 steps
2020.06.25 08:29:10 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 17202 steps
2020.06.25 08:29:17 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 17302 steps
2020.06.25 08:29:24 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 17402 steps
2020.06.25 08:29:31 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 17502 steps
2020.06.25 08:29:38 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 17602 steps
2020.06.25 08:29:45 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 17702 steps
2020.06.25 08:29:52 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 17802 steps
2020.06.25 08:29:58 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 17902 steps
2020.06.25 08:30:05 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 18002 steps
2020.06.25 08:30:12 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 18102 steps
2020.06.25 08:30:19 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 18202 steps
2020.06.25 08:30:26 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 18302 steps
2020.06.25 08:30:32 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 18402 steps
2020.06.25 08:30:39 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 18502 steps
2020.06.25 08:30:46 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 18602 steps
2020.06.25 08:30:53 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 18702 steps
2020.06.25 08:31:00 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 18802 steps
2020.06.25 08:31:07 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 18902 steps
2020.06.25 08:31:14 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 19002 steps
2020.06.25 08:31:20 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 19102 steps
2020.06.25 08:31:27 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 19202 steps
2020.06.25 08:31:34 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 19302 steps
2020.06.25 08:31:41 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 19402 steps
2020.06.25 08:31:48 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 19502 steps
2020.06.25 08:31:55 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 19602 steps
2020.06.25 08:32:01 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 19702 steps
2020.06.25 08:32:08 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 19802 steps
2020.06.25 08:32:15 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 19902 steps
2020.06.25 08:32:22 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 20002 steps
2020.06.25 08:32:29 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 20102 steps
2020.06.25 08:32:37 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 20202 steps
2020.06.25 08:32:44 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 20302 steps
2020.06.25 08:32:51 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 20402 steps
2020.06.25 08:32:58 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 20502 steps
2020.06.25 08:33:05 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 20602 steps
2020.06.25 08:33:12 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 20702 steps
2020.06.25 08:33:19 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 20802 steps
2020.06.25 08:33:27 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 20902 steps
2020.06.25 08:33:34 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 21002 steps
2020.06.25 08:33:41 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 21102 steps
2020.06.25 08:33:48 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 21202 steps
2020.06.25 08:33:55 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 21302 steps
2020.06.25 08:34:02 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 21402 steps
2020.06.25 08:34:09 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 21502 steps
2020.06.25 08:34:16 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 21602 steps
2020.06.25 08:34:24 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 21702 steps
2020.06.25 08:34:31 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 21802 steps
2020.06.25 08:34:38 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 21902 steps
2020.06.25 08:34:45 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 22002 steps
2020.06.25 08:34:52 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 22102 steps
2020.06.25 08:34:59 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 22202 steps
2020.06.25 08:35:07 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 22302 steps
2020.06.25 08:35:14 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 22402 steps
2020.06.25 08:35:21 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 22502 steps
2020.06.25 08:35:28 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 22602 steps
2020.06.25 08:35:35 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 22702 steps
2020.06.25 08:35:42 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 22802 steps
2020.06.25 08:35:49 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 22902 steps
2020.06.25 08:35:57 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 23002 steps
2020.06.25 08:36:04 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 23102 steps
2020.06.25 08:36:11 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 23202 steps
2020.06.25 08:36:18 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 23302 steps
2020.06.25 08:36:25 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 23402 steps
2020.06.25 08:36:32 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 23502 steps
2020.06.25 08:36:40 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 23602 steps
2020.06.25 08:36:47 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 23702 steps
2020.06.25 08:36:54 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 23802 steps
2020.06.25 08:37:01 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 23902 steps
2020.06.25 08:37:09 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 24002 steps
2020.06.25 08:37:16 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 24102 steps
2020.06.25 08:37:23 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 24202 steps
2020.06.25 08:37:30 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 24302 steps
2020.06.25 08:37:37 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 24402 steps
2020.06.25 08:37:45 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 24502 steps
2020.06.25 08:37:52 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 24602 steps
2020.06.25 08:37:59 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 24702 steps
2020.06.25 08:38:06 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 24802 steps
2020.06.25 08:38:13 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 24902 steps
2020.06.25 08:38:20 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 25002 steps
2020.06.25 08:38:27 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 25102 steps
2020.06.25 08:38:35 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 25202 steps
2020.06.25 08:38:42 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 25302 steps
2020.06.25 08:38:49 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 25402 steps
2020.06.25 08:38:56 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 25502 steps
2020.06.25 08:39:03 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 25602 steps
2020.06.25 08:39:10 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 25702 steps
2020.06.25 08:39:17 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 25802 steps
2020.06.25 08:39:24 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 25902 steps
2020.06.25 08:39:32 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 26002 steps
2020.06.25 08:39:39 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 26102 steps
2020.06.25 08:39:46 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 26202 steps
2020.06.25 08:39:53 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 26302 steps
2020.06.25 08:40:00 [INFO] provingground.learning.ExprCalc.stableVec:602:46 - completed 26402 steps
