2021.02.19 09:36:47:077 [main      ] [INFO ] provingground.interface.InductionSession.InductionSession:31 - 
This is a Bot based run for testing a simple induction problem:
given f(n) = f(n + 1) for all n, we conclude that f(0) = f(n).
We are using a simple local prover, so that all the work should be done by Bots.

2021.02.19 09:36:47:091 [main      ] [INFO ] provingground.interface.InductionSession.InductionSession:41 - JAVA_OPTS: -Xms512m -Xmx4g -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.19 09:36:47:092 [main      ] [INFO ] provingground.interface.InductionSession.InductionSession:43 - JAVA_HOME: /home/gadgil/.cache/coursier/jvm/adopt@1.11.0-8
2021.02.19 09:37:12:097 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (f) (0) = (f) (0) by Some(Refl(A,(f) (0))) in context {Given $aypvk : (`n : Nat.Typ ) ~> ((f) (`n) = (f) (((_ + 1)) (`n)))}
2021.02.19 09:37:33:035 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved ((f) (0) = (f) (`$grlpt)) → ((f) (0) = (f) (((_ + 1)) (`$grlpt))) by Some((```````````$br : ((f) (0) = (f) (`$grlpt)) :  (f) (0) = (f) (`$grlpt)) ↦ (((ind{(`$bvmtpf :  A) ↦ ((`$bvmtpg :  A) ↦ (`$bvmtpf = `$bvmtpg))((f) (0))((f) (`$grlpt))}{(`$p :  A) ↦ ((`$q :  A) ↦ ((````$s : (`$p = `$q) :  `$p = `$q) ↦ ((`$q = (f) (((_ + 1)) (`$grlpt))) → (`$p = (f) (((_ + 1)) (`$grlpt))))))}((`$p :  A) ↦ ((````````$ase : (`$p = (f) (((_ + 1)) (`$grlpt))) :  `$p = (f) (((_ + 1)) (`$grlpt))) ↦ (````````$ase : (`$p = (f) (((_ + 1)) (`$grlpt))))))) (```````````$br : ((f) (0) = (f) (`$grlpt)))) (($aypvk) (`$grlpt) : ((f) (`$grlpt) = (f) (((_ + 1)) (`$grlpt)))) : ((f) (0) = (f) (((_ + 1)) (`$grlpt))))) in context {Given $aypvk : (`n : Nat.Typ ) ~> ((f) (`n) = (f) (((_ + 1)) (`n))); Given `$grlpt : Nat.Typ}
2021.02.19 09:37:35:346 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved Nat.Typ by Some(0) in context {}
2021.02.19 09:37:35:351 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (`$grlpt : Nat.Typ ) ~> (((f) (0) = (f) (`$grlpt)) → ((f) (0) = (f) (((_ + 1)) (`$grlpt)))) by Some((``$grlpt :  Nat.Typ) ↦ ((````````````$br : ((f) (0) = (f) (``$grlpt)) :  (f) (0) = (f) (``$grlpt)) ↦ (((ind{(`$dfnusg :  A) ↦ ((`$dfnush :  A) ↦ (`$dfnusg = `$dfnush))((f) (0))((f) (``$grlpt))}{(`$p :  A) ↦ ((`$q :  A) ↦ ((````$s : (`$p = `$q) :  `$p = `$q) ↦ ((`$q = (f) (((_ + 1)) (``$grlpt))) → (`$p = (f) (((_ + 1)) (``$grlpt))))))}((`$p :  A) ↦ ((`````````$ase : (`$p = (f) (((_ + 1)) (``$grlpt))) :  `$p = (f) (((_ + 1)) (``$grlpt))) ↦ (`````````$ase : (`$p = (f) (((_ + 1)) (``$grlpt))))))) (````````````$br : ((f) (0) = (f) (``$grlpt)))) (($aypvk) (``$grlpt) : ((f) (``$grlpt) = (f) (((_ + 1)) (``$grlpt)))) : ((f) (0) = (f) (((_ + 1)) (``$grlpt)))))) in context {Given $aypvk : (`n : Nat.Typ ) ~> ((f) (`n) = (f) (((_ + 1)) (`n)))}
2021.02.19 09:37:35:351 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (`n : Nat.Typ ) ~> ((f) (0) = (f) (`n)) by Some(ind(Nat.Typ)((`$grkzu :  Nat.Typ) ↦ ((f) (0) = (f) (`$grkzu)))(Refl(A,(f) (0)))((``$grlpt :  Nat.Typ) ↦ ((````````````$br : ((f) (0) = (f) (``$grlpt)) :  (f) (0) = (f) (``$grlpt)) ↦ (((ind{(`$dfnusg :  A) ↦ ((`$dfnush :  A) ↦ (`$dfnusg = `$dfnush))((f) (0))((f) (``$grlpt))}{(`$p :  A) ↦ ((`$q :  A) ↦ ((````$s : (`$p = `$q) :  `$p = `$q) ↦ ((`$q = (f) (((_ + 1)) (``$grlpt))) → (`$p = (f) (((_ + 1)) (``$grlpt))))))}((`$p :  A) ↦ ((`````````$ase : (`$p = (f) (((_ + 1)) (``$grlpt))) :  `$p = (f) (((_ + 1)) (``$grlpt))) ↦ (`````````$ase : (`$p = (f) (((_ + 1)) (``$grlpt))))))) (````````````$br : ((f) (0) = (f) (``$grlpt)))) (($aypvk) (``$grlpt) : ((f) (``$grlpt) = (f) (((_ + 1)) (``$grlpt)))) : ((f) (0) = (f) (((_ + 1)) (``$grlpt))))))) in context {Given $aypvk : (`n : Nat.Typ ) ~> ((f) (`n) = (f) (((_ + 1)) (`n)))}
2021.02.19 09:37:35:353 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportContradicted:342 - Contradicted (((`n : Nat.Typ ) ~> ((f) (`n) = (f) (((_ + 1)) (`n)))) , (∑((``n :  Nat.Typ) ↦ (((f) (0) = (f) (``n)) → (Zero))))) in context {}
2021.02.19 09:37:35:455 [scala-e...] [INFO ] provingground.learning.HoTTPostWeb.halt:23 - Halting HoTT-post-web session
2021.02.19 09:37:35:513 [scala-e...] [INFO ] provingground.learning.HoTTPostWeb.halt:23 - Halting HoTT-post-web session
2021.02.19 09:37:35:516 [scala-e...] [INFO ] provingground.learning.HoTTPostWeb.halt:23 - Halting HoTT-post-web session
2021.02.19 09:37:35:543 [scala-e...] [INFO ] provingground.learning.HoTTPostWeb.halt:23 - Halting HoTT-post-web session
2021.02.19 09:37:35:557 [scala-e...] [INFO ] provingground.learning.HoTTPostWeb.halt:23 - Halting HoTT-post-web session
2021.02.19 09:37:35:597 [scala-e...] [INFO ] provingground.learning.HoTTPostWeb.halt:23 - Halting HoTT-post-web session
2021.02.19 10:04:47:836 [main      ] [INFO ] provingground.interface.CzSlRun.CzSlRun:27 - This is a Bot based run for the Czech-Slovak olympiand problem identified by Achal, who proved this with manual choice.
This problem involves showing the left and right identity coincide given a bunch of axioms. We can only use forward reasoning
since there are no models.

There is a little domain knowledge in the tuning, with tautologies specified (to not be used as lemmas) 
and "base states" given based on what is used together. But this is largely a robust choice of parameters.
Much of the work has been in ensuring that all the hot code is parallelized.

2021.02.19 10:04:47:880 [main      ] [INFO ] provingground.interface.CzSlRun.CzSlRun:40 - JAVA_OPTS: -Xms2G -Xmx40G -Xss6M -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.19 10:04:47:882 [main      ] [INFO ] provingground.interface.CzSlRun.CzSlRun:42 - JAVA_HOME: /usr/lib/jvm/java-8-oracle
2021.02.19 10:04:49:176 [scala-e...] [INFO ] provingground.learning.PostResponse.act:691 - apex posts Vector((3,-555667942))
2021.02.19 10:04:49:180 [scala-e...] [INFO ] provingground.learning.PostResponse.act:697 - acting on post (3,-555667942) with hash -555667942
2021.02.19 10:05:57:050 [scala-e...] [INFO ] provingground.learning.PostResponse.act:691 - apex posts Vector((4,261790153))
2021.02.19 10:05:57:051 [scala-e...] [INFO ] provingground.learning.PostResponse.act:697 - acting on post (4,261790153) with hash 261790153
2021.02.19 10:06:00:453 [scala-e...] [INFO ] provingground.learning.PostResponse.act:691 - apex posts Vector((4,261790153))
2021.02.19 10:06:00:454 [scala-e...] [INFO ] provingground.learning.PostResponse.act:697 - acting on post (4,261790153) with hash 261790153
2021.02.19 10:06:05:664 [scala-e...] [INFO ] provingground.learning.PostResponse.act:691 - apex posts Vector((5,-491581737))
2021.02.19 10:06:05:665 [scala-e...] [INFO ] provingground.learning.PostResponse.act:697 - acting on post (5,-491581737) with hash -491581737
2021.02.19 10:06:08:261 [scala-e...] [INFO ] provingground.learning.PostResponse.act:691 - apex posts Vector((6,834214603))
2021.02.19 10:06:08:261 [scala-e...] [INFO ] provingground.learning.PostResponse.act:697 - acting on post (6,834214603) with hash 834214603
2021.02.19 10:06:08:317 [scala-e...] [INFO ] provingground.learning.PostResponse.act:691 - apex posts Vector((9,257414597))
2021.02.19 10:06:08:317 [scala-e...] [INFO ] provingground.learning.PostResponse.act:697 - acting on post (9,257414597) with hash 257414597
2021.02.19 10:06:28:050 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:466 - Results: 5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best proof: ((ass1) (m)) (n) with weight 4.4991466802622784E-5; statement weight 1.5558054921411602E-5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best proof: ((ass2) (((mul) (m)) (n))) (n) with weight 1.1460984659504984E-4; statement weight 1.0248689160923815E-7
Lemma: ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))); best proof: (((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)) with weight 6.864397586591437E-6; statement weight 1.1105216691571508E-7
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)); best proof: ((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)) with weight 1.2696057169749563E-7; statement weight 7.315490687096206E-10
Lemma: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best proof: ((ass1) (((mul) (m)) (n))) (m) with weight 1.1460984659504984E-4; statement weight 6.196288150382429E-8
2021.02.19 10:06:31:398 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:466 - Steps (in final state): 4
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best proof: trans with weight 0.05875877891014358; statement weight 7.485634800505816E-5
Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))); best proof: (`$ekelzq :  M) ↦ (((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$ekelzq)) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) with weight 4.111366209468645E-7; statement weight 2.33157385737093E-8
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best proof: (left-multiply) (((mul) (m)) (n)) with weight 0.00896506566389679; statement weight 3.086288499779206E-9
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best proof: (right-multiply) (m) with weight 0.003519329258236162; statement weight 8.376881626503368E-12
2021.02.19 10:07:53:651 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:466 - Results: 6
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best proof: ((ass1) (m)) (n) with weight 5.046306822416407E-5; statement weight 1.383177684866235E-5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best proof: ((ass2) (((mul) (m)) (n))) (n) with weight 1.2556404118699651E-4; statement weight 9.723714883174622E-8
Lemma: ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))); best proof: (((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)) with weight 8.159240290314047E-6; statement weight 1.055807706659421E-7
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)); best proof: ((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)) with weight 1.5603389269647423E-7; statement weight 7.422314370475244E-10
Lemma: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best proof: ((ass1) (((mul) (m)) (n))) (m) with weight 1.2556404118699651E-4; statement weight 5.786088238476787E-8
Lemma: ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)); best proof: (((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m))) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) (((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))) with weight 2.7478094958554935E-14; statement weight 4.762580809972081E-5
2021.02.19 10:07:59:114 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:466 - Steps (in final state): 4
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best proof: trans with weight 0.057555681471319085; statement weight 1.5198210812638173E-4
Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))); best proof: (`$ekelzq :  M) ↦ (((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$ekelzq)) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) with weight 5.301950176708091E-7; statement weight 3.1871202196505304E-8
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best proof: (left-multiply) (((mul) (m)) (n)) with weight 0.009306031079713912; statement weight 3.851266313776043E-9
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best proof: (right-multiply) (m) with weight 0.0037400072233850904; statement weight 8.098214865340764E-12
2021.02.19 10:10:43:661 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:466 - Results: 7
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best proof: ((ass1) (m)) (n) with weight 5.422996647748643E-5; statement weight 1.2523716394150121E-5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best proof: ((ass2) (((mul) (m)) (n))) (n) with weight 1.3296399874517285E-4; statement weight 9.181315584332441E-8
Lemma: ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))); best proof: (((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)) with weight 9.101604841704262E-6; statement weight 9.983153221537087E-8
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)); best proof: ((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)) with weight 1.7776952478394125E-7; statement weight 7.318800698189641E-10
Lemma: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best proof: ((ass1) (((mul) (m)) (n))) (m) with weight 1.3296399874517285E-4; statement weight 5.4067925473757105E-8
Lemma: ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)); best proof: (((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m))) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) (((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))) with weight 3.809239660764504E-14; statement weight 4.202553622516127E-5
Lemma: ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)); best proof: ((((right-multiply) (m)) (n)) (((mul) (((mul) (m)) (n))) (m))) ((((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m))) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) (((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)))) with weight 5.1904135307290644E-17; statement weight 4.6132707505179603E-10
2021.02.19 10:10:51:225 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:466 - Steps (in final state): 4
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best proof: trans with weight 0.05676908896192911; statement weight 2.303922803565546E-4
Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))); best proof: (`$ekelzq :  M) ↦ (((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$ekelzq)) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) with weight 6.230236918552165E-7; statement weight 3.827798324997862E-8
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best proof: (left-multiply) (((mul) (m)) (n)) with weight 0.00952775042561046; statement weight 4.330019330309781E-9
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best proof: (right-multiply) (m) with weight 0.0038859298186933395; statement weight 7.706036410849821E-12
2021.02.19 10:15:11:578 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:466 - Results: 7
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (n))) (m); best proof: ((ass1) (m)) (n) with weight 5.552043047694925E-5; statement weight 1.2064731162193358E-5
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n); best proof: ((ass2) (((mul) (m)) (n))) (n) with weight 1.354710256561851E-4; statement weight 8.967712076819852E-8
Lemma: ((eqM) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))); best proof: (((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)) with weight 9.434232103520023E-6; statement weight 9.755535388108846E-8
Lemma: ((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m)); best proof: ((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)) with weight 1.8553318032437292E-7; statement weight 7.251294579473337E-10
Lemma: ((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (((mul) (m)) (n)); best proof: ((ass1) (((mul) (m)) (n))) (m) with weight 1.354710256561851E-4; statement weight 5.2626972280905205E-8
Lemma: ((eqM) (n)) (((mul) (((mul) (m)) (n))) (m)); best proof: (((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m))) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) (((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n))) with weight 4.240925889391587E-14; statement weight 4.0146812045569654E-5
Lemma: ((eqM) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m)); best proof: ((((right-multiply) (m)) (n)) (((mul) (((mul) (m)) (n))) (m))) ((((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m))) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) (((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)))) with weight 5.920122695163019E-17; statement weight 4.5560122260223924E-10
2021.02.19 10:15:32:646 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:466 - Steps (in final state): 5
Lemma: (`a : M ) ~> ((`b : M ) ~> ((`c : M ) ~> ((((eqM) (`a)) (`b)) → ((((eqM) (`b)) (`c)) → (((eqM) (`a)) (`c)))))); best proof: trans with weight 0.05650566559000803; statement weight 2.6302640211200295E-4
Lemma: (`$afm : M ) ~> ((((eqM) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$afm)) → (((eqM) (n)) (`$afm))); best proof: (`$ekelzq :  M) ↦ (((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (`$ekelzq)) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) with weight 6.570062026229326E-7; statement weight 4.054104953846942E-8
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (((mul) (m)) (n))) (`b))) (((mul) (((mul) (m)) (n))) (`c))))); best proof: (left-multiply) (((mul) (m)) (n)) with weight 0.009601643766868758; statement weight 4.48232102846048E-9
Lemma: (`b : M ) ~> ((`c : M ) ~> ((((eqM) (`b)) (`c)) → (((eqM) (((mul) (`b)) (m))) (((mul) (`c)) (m))))); best proof: (right-multiply) (m) with weight 0.003935060111220138; statement weight 7.54617825229271E-12
Lemma: (`$dkp : M ) ~> ((((eqM) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`$dkp)) → (((eqM) (((mul) (n)) (m))) (`$dkp))); best proof: (`$bhaxytb :  M) ↦ (((((trans) (((mul) (n)) (m))) (((mul) (((mul) (((mul) (m)) (n))) (m))) (m))) (`$bhaxytb)) (((((right-multiply) (m)) (n)) (((mul) (((mul) (m)) (n))) (m))) ((((((trans) (n)) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (((mul) (((mul) (m)) (n))) (m))) ((((sym) (((mul) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n)))) (n)) (((ass2) (((mul) (m)) (n))) (n)))) (((((left-multiply) (((mul) (m)) (n))) (((mul) (((mul) (m)) (n))) (n))) (m)) (((ass1) (m)) (n)))))) with weight 4.122742624157189E-18; statement weight 2.1176825788159902E-10
