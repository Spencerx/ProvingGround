2021.02.18 09:17:10:803 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:243 - 
This is a Bot based run for parallel generation goal chomping. This has been refined a few times.
Biggest change after first runs was having a session with bots.
Also parallel chomping, proving via zero, using inclusions and projections,
better reporting of status. 
After debugging, everything generated was proved but there was an error in reporting.

2021.02.18 09:17:10:816 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:255 - JAVA_OPTS: -Xms512m -Xmx4g -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.18 09:17:10:817 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:257 - JAVA_HOME: /home/gadgil/.cache/coursier/jvm/adopt@1.11.0-8
2021.02.18 09:17:11:314 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((0,257821092))
2021.02.18 09:17:11:316 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (0,257821092) with hash 257821092
2021.02.18 09:17:29:094 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:243 - 
This is a Bot based run for parallel generation goal chomping. This has been refined a few times.
Biggest change after first runs was having a session with bots.
Also parallel chomping, proving via zero, using inclusions and projections,
better reporting of status. 
After debugging, everything generated was proved but there was an error in reporting.

2021.02.18 09:17:29:110 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:255 - JAVA_OPTS: -Xms512m -Xmx4g -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.18 09:17:29:111 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:257 - JAVA_HOME: /home/gadgil/.cache/coursier/jvm/adopt@1.11.0-8
2021.02.18 09:17:29:638 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((0,257821092))
2021.02.18 09:17:29:640 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (0,257821092) with hash 257821092
2021.02.18 09:17:50:157 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((1,1913075530))
2021.02.18 09:17:50:157 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (1,1913075530) with hash 1913075530
2021.02.18 09:17:50:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:199 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:199 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:199 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:199 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:199 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:199 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:200 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:200 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:200 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:200 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:202 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:202 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:202 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:201 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:202 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:202 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:202 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:203 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:203 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:203 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:203 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:203 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:203 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:204 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:204 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:204 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:204 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:204 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:204 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:204 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:204 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:205 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:205 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:205 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:205 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:205 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:205 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:205 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:206 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:206 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:206 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:206 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:206 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:207 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:220 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:220 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:220 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:220 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:220 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:220 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:233 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:234 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:235 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:235 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:235 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:235 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:235 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:235 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:236 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:236 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:236 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:236 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:236 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:235 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:236 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:240 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:240 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:240 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:240 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:240 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:240 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:241 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:241 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:241 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:241 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:241 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:241 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:242 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:242 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:242 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:242 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:242 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:243 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:243 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:243 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:243 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:243 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:244 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:244 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:244 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:244 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:245 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:245 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:245 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:245 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:245 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:245 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:246 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:246 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:246 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:246 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:246 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:246 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:246 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:247 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:246 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:247 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:247 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:247 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:247 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:247 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:247 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:247 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:247 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:248 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:248 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:247 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:248 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:248 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:248 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:248 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:248 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:249 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:249 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:249 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:249 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:249 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:249 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:249 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:250 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:250 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:250 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:250 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:250 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:250 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:251 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:251 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:251 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:251 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:251 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:252 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:252 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:252 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:252 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:253 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:252 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:253 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:253 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:253 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:253 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:253 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:255 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:255 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:254 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:256 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:254 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:254 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:254 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:254 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:254 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:254 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:254 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:279 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:279 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:279 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:280 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:281 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:279 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:282 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:283 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:283 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:283 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:283 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:283 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:283 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:283 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:283 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:283 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:283 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:285 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:284 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:286 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:286 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:286 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:286 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:287 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:287 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:287 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:287 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:287 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:287 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:287 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:287 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:288 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:288 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:289 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:288 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:289 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:289 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:289 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:289 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:289 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:289 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:289 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:290 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:290 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:290 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:290 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:289 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:290 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:290 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:291 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:291 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:291 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:291 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:291 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:291 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:291 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:291 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:291 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:291 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:292 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:292 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:292 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:292 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:292 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:292 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:292 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:292 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:292 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:293 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:293 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:293 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:293 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:293 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:294 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:294 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:294 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:294 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:294 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:294 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:294 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:294 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:295 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:296 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:296 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:296 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:296 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:297 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:297 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:297 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:297 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:298 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:297 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:298 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:298 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:298 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:298 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:298 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:298 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:298 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:299 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:299 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:299 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:299 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:299 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:299 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:299 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:299 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:299 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:300 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:301 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:301 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:301 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:301 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:301 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:301 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:301 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:301 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:301 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:301 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:302 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:302 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:302 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:302 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:302 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:302 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:302 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:302 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:302 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:302 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:303 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:303 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:303 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:303 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:303 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:303 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:303 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:303 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:304 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:305 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:306 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:306 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:306 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:306 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:306 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:306 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:306 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:306 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:306 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:306 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:307 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:307 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:307 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:307 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:307 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:307 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:308 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:308 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:308 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:308 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:308 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:308 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:308 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:309 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:309 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:309 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:309 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:309 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:309 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:309 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:309 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:310 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:310 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:310 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:310 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:310 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:310 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:310 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:311 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:311 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:311 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:311 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:311 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:311 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:312 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:312 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:312 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:312 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:312 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:312 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:312 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:312 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:312 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:312 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:313 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:313 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:314 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:314 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:314 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:314 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:314 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:314 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:315 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:316 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:316 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:316 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:316 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:316 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:316 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:316 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:316 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:316 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:323 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:324 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:324 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:325 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:325 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:326 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:326 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:316 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:331 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:332 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:332 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:333 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:333 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:333 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:334 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:334 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:334 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:335 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:335 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:335 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:336 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:336 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:336 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:336 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:337 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:337 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:337 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:338 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:338 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:338 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:338 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:338 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:339 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:339 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:340 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:340 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:341 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:341 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:342 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:343 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:343 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:343 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:343 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:343 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:344 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:344 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:344 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:345 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:345 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:346 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:346 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:347 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:347 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:347 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:348 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:348 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:348 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:348 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:348 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:348 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:348 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:348 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:350 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:350 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:350 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:348 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:351 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:351 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:351 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:351 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:351 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:351 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:352 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:352 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:352 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:352 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:352 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:352 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:352 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:352 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:352 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:353 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:353 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:353 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:353 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:353 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:353 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:353 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:354 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:354 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:354 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:353 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:355 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:355 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:355 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:355 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:355 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:355 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:355 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:355 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:355 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:356 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:356 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:356 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:356 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:356 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:356 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:357 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:357 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:357 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:357 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:357 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:358 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:358 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:358 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:358 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:358 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:358 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:358 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:358 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:358 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:359 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:359 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:359 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:356 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:359 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:359 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:359 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:359 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:360 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:360 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:360 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:361 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:361 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:361 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:362 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:362 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:362 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:362 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:362 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:362 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:363 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:363 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:363 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:363 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:363 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:363 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:364 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:364 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:364 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:364 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:365 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:365 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:365 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:365 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:366 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:366 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:366 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:366 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:366 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:366 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:367 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:367 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:368 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:368 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:368 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:369 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:369 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:369 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:369 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:369 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:370 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:370 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:370 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:370 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:370 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:371 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:371 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:371 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:371 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:371 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:371 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:371 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:371 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:372 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:372 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:363 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:373 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:373 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:373 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:373 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:374 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:374 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:374 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:374 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:374 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:376 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:376 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:376 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:376 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:376 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:376 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:376 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:377 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:377 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:377 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:377 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:377 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:377 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:377 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:377 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:378 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:378 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:378 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:378 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:378 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:378 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:379 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:379 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:379 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:380 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:380 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:380 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:381 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:381 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:381 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:381 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:382 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:382 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:382 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:383 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:383 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:383 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:383 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:383 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:384 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:383 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:384 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:384 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:385 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:385 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:385 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:385 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:385 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:385 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:385 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:385 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:385 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:385 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:386 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:387 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:388 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:388 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:388 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:389 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:389 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:389 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:390 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:390 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:390 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:391 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:391 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:391 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:391 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:391 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:391 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:391 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:391 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:391 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:392 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:394 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:393 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:395 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:396 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:397 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:398 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:399 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:400 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:402 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:402 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:402 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:402 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:402 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:402 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:402 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:402 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:402 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:403 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:401 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:410 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:410 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:410 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:411 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:412 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:413 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:413 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:413 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:413 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:413 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:414 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:415 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:416 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:417 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:418 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:419 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:420 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:421 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:422 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:423 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:424 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:425 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:426 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:427 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:428 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:428 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:428 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:428 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:428 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:428 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:428 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:428 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:429 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:429 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:429 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:429 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:429 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:429 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:429 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:430 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:430 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:430 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:430 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:430 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:430 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:430 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:430 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:431 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:431 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:431 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:431 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:431 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:431 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:431 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:431 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:431 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:432 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:433 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:433 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:433 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:433 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:433 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:433 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:433 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:433 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:434 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:434 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:434 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:434 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:434 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:435 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:436 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:437 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:437 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:438 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:438 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:438 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:438 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:438 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:438 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:438 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:438 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:438 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:439 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:439 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:439 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:439 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:439 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:439 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:439 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:440 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:441 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:459 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:460 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:461 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:461 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:461 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:461 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:461 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:462 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:462 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:462 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:462 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:462 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:463 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:463 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:463 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:463 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:463 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:463 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:463 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:464 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:464 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:464 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:464 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:464 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:464 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:464 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:464 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:465 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:464 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:465 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:465 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:465 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:465 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:465 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:465 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:465 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:465 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:465 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:466 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:466 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:466 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:466 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:466 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:466 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:466 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:467 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:467 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:467 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:467 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:467 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:467 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:467 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:467 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:467 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:468 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:469 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:471 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:470 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:472 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:473 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:474 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:474 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:474 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:474 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:474 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:474 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:474 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:475 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:476 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:477 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:478 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:479 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:480 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:481 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:482 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:483 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:484 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:485 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:486 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:487 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:501 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:501 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:501 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:501 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:501 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:501 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:501 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:501 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:502 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:502 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:502 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:502 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:502 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:502 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:502 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:503 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:504 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:505 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:506 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:506 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:506 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:506 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:506 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:506 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:506 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:506 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:506 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:507 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:507 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:507 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:507 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:507 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:507 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:507 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:507 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:508 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:508 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:508 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:508 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:508 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:508 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:508 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:508 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:508 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:508 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:509 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:509 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:509 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:509 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:509 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:509 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:509 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:509 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:509 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:510 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:510 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:511 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:512 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:513 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:514 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:515 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:515 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:515 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:516 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:517 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:517 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:518 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:518 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:518 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:518 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:518 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:518 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:518 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:519 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:519 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:519 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:519 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:519 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:519 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:520 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:520 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:520 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:520 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:521 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:521 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:521 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:521 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:521 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:521 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:522 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:522 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:522 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:522 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:522 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:522 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:523 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:524 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:525 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:526 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:527 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:528 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:529 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:529 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:529 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:529 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:529 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:529 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:529 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:529 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:530 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:530 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:530 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:530 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:530 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:531 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:532 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:533 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:539 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:539 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:539 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:539 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:539 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:540 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:541 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:542 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:543 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:544 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:545 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:545 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:545 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:545 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:545 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:545 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:545 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:545 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:545 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:545 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:546 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:547 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:548 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:549 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:550 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:551 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:552 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:553 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:554 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:555 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:556 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:557 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:558 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:559 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:560 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:561 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:562 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:563 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:564 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:565 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:566 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:566 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:566 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:566 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:567 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:567 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:567 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:567 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:567 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:567 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:567 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:567 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:567 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:568 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:569 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:570 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:571 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:571 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:571 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:583 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:584 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:585 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:586 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:587 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:587 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:587 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:587 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:587 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:587 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:587 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:587 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:587 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:588 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:589 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:589 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:589 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:589 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:589 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:589 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:589 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:589 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:590 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:591 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:592 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:592 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:592 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:592 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:592 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:592 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:592 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:592 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:592 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:592 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:593 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:594 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:595 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:596 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:597 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:598 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:599 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:600 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:601 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:602 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:603 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:604 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:605 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:606 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:607 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:608 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:609 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:610 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:611 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:612 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:616 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:616 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:616 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:616 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:617 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:618 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:619 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:637 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:637 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:637 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:637 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:637 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:637 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:638 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:639 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:640 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:640 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:640 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:640 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:640 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:640 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:641 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:642 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:643 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:644 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:645 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:646 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:647 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:648 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:649 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:650 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:651 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:652 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:653 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:654 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:655 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:656 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:657 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:661 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:661 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:661 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:661 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:661 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:661 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:661 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:661 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:661 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:661 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:662 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:662 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:660 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:662 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:663 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:663 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:663 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:664 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:664 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:664 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:664 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:664 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:664 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:664 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:664 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:664 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:664 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:665 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:666 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:666 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:666 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:666 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:666 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:666 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:666 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:666 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:666 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:666 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:667 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:667 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:667 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:667 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:667 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:667 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:667 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:667 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:667 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:667 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:668 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:668 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:668 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:668 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:668 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:668 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:668 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:668 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:668 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:668 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:669 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:669 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:687 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:688 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:688 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:688 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:688 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:688 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:688 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:689 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:689 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:689 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:689 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:689 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:689 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:689 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:689 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:689 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:690 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:690 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:690 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:690 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:690 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:690 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:690 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:691 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:691 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:691 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:691 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:691 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:691 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:691 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:691 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:692 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:693 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:693 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:693 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:693 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:693 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:693 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:693 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:693 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:693 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:694 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:694 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:694 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:694 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:694 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:694 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:694 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:694 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:694 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:694 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:695 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:695 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:695 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:695 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:695 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:695 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:695 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:696 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:697 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:697 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:697 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:697 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:697 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:697 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:697 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:697 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:697 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:697 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:698 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:698 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:698 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:698 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:698 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:699 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:699 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:699 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:699 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:700 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:700 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:700 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:700 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:700 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:700 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:701 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:701 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:701 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:701 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:701 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:701 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:701 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:701 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:702 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:707 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:708 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:708 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:700 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:708 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:708 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:708 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:709 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:709 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:709 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:709 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:709 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:709 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:710 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:710 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:710 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:710 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:710 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:713 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:713 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:712 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:713 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:713 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:713 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:713 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:713 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:714 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:715 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:715 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:724 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:724 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:711 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:727 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:728 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:728 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:728 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:728 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:728 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:729 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:730 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:730 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:730 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:730 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:730 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:730 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:730 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:730 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:730 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:731 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:731 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:731 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:731 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:731 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:731 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:731 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:731 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:731 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:731 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:732 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:733 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:734 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:735 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:735 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:735 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:735 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:735 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:735 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:735 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:735 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:735 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:736 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:737 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:738 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:739 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:740 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:740 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:740 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:740 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:740 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:740 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:740 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:740 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:740 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:740 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:741 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:742 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:743 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:744 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:745 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:746 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:746 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:746 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:746 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:746 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:746 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:746 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:747 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:747 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:747 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:747 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:747 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:747 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:747 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:747 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:747 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:747 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:748 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:750 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:749 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:751 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:752 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:753 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:754 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:755 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:756 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:767 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:768 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:769 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:770 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:771 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:772 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:773 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:773 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:773 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:773 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:773 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:773 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:773 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:773 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:774 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:774 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:774 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:774 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:774 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:774 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:774 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:774 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:775 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:775 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:775 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:775 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:775 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:775 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:776 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:778 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:781 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:782 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:784 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:785 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:786 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:787 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:788 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:789 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:789 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:789 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:789 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:789 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:789 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:789 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:789 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:789 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:789 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:790 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:790 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:790 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:790 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:790 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:790 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:790 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:777 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:783 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:780 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:779 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:793 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:791 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:792 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:795 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:796 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:797 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:798 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:799 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:799 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:799 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:799 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:794 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:809 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:815 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:818 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:819 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:820 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:821 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:822 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:822 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:822 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:822 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:822 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:822 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:822 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:822 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:822 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:822 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:823 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:824 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:825 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:826 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:826 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:826 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:826 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:826 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:828 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:828 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:828 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:828 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:828 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:829 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:830 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:831 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:832 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:833 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:834 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:835 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:836 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:837 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:838 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:839 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:840 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:841 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:842 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:842 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:842 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:842 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:842 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:842 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:842 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:842 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:842 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:842 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:843 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:843 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:843 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:843 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:843 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:843 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:843 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:843 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:844 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:844 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:844 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:844 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:844 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:844 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:844 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:844 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:845 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:845 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:845 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:845 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:845 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:845 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:846 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:846 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:846 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:846 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:847 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:847 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:847 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:847 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:847 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:847 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:847 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:847 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:847 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:848 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:849 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:849 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:849 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:849 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:849 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:849 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:849 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:859 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:859 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:859 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:859 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:859 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:859 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:859 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:859 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:860 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:861 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:862 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:863 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:864 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:865 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:865 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:865 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:865 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:865 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:865 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:865 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:865 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:865 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:866 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:867 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:868 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:869 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:870 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:871 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:874 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:872 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:873 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:875 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:876 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:877 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:878 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:878 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:878 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:878 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:878 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:878 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:878 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:878 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:878 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:879 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:879 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:879 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:879 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:879 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:879 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:879 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:879 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:879 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:879 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:880 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:881 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:881 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:881 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:881 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:881 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:881 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:881 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:881 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:881 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:881 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:882 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:882 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:882 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:882 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:882 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:882 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:882 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:882 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:882 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:882 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:883 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:883 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:883 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:883 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:883 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:883 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:883 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:883 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:884 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:884 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:884 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:884 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:884 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:885 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:886 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:886 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:886 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:886 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:886 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:886 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:886 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:886 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:886 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:886 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:887 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:888 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:889 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:890 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:891 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:891 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:891 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:891 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:907 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:907 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:908 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:909 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:909 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:909 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:909 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:909 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:909 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:909 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:910 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:910 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:910 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:911 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:911 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:911 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:911 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:911 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:911 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:911 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:911 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:912 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:913 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:917 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:918 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:919 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:919 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:919 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:919 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:919 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:919 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:919 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:919 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:919 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:919 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:920 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:920 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:920 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:920 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:920 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:920 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:920 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:920 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:920 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:921 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:922 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:922 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:922 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:922 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:922 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:922 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:923 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:923 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:923 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:923 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:923 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:923 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:923 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:923 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:924 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:924 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:924 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:924 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:924 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:924 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:924 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:924 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:925 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:925 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:925 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:925 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:925 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:925 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:925 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:925 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:925 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:926 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:927 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:928 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:929 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:930 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:931 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:932 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:933 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:943 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:943 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:943 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:943 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:943 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:943 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:943 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:944 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:945 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:946 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:947 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:948 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:949 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:950 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:950 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:950 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:951 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:952 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:953 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:953 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:953 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:953 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:953 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:953 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:953 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:954 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:954 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:954 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:954 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:954 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:954 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:954 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:954 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:954 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:955 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:956 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:957 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:958 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:959 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:960 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:961 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:961 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:961 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:961 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:961 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:961 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:961 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:961 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:962 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:963 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:964 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:965 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:966 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:967 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:968 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:969 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:969 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:969 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:969 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:969 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:969 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:969 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:969 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:969 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:969 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:970 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:970 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:970 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:970 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:970 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:970 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:970 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:970 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:970 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:970 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:971 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:971 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:971 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:971 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:971 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:971 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:971 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:971 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:972 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:973 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:973 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:973 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:973 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:973 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:973 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:973 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:973 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:973 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:973 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:975 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:976 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:976 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:976 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:976 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:976 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:976 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:976 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:976 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:976 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:976 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:987 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:988 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:989 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:990 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:991 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:992 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:993 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:994 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:50:995 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:50:996 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:997 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:998 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:50:998 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:998 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:998 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:998 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:998 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:50:998 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:998 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:50:998 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:50:998 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:023 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:023 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:023 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:023 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:023 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:024 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:025 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:025 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:025 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:033 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:033 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:034 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:035 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:036 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:037 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:038 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:039 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:040 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:041 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:041 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:041 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:041 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:041 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:041 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:041 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:041 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:042 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:042 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:042 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:042 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:042 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:042 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:042 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:042 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:042 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:043 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:043 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:043 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:043 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:043 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:043 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:043 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:043 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:043 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:044 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:045 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:046 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:047 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:048 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:049 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:050 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:051 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:052 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:053 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:054 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:055 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:055 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:055 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:055 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:055 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:055 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:055 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:055 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:055 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:055 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:056 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:056 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:056 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:056 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:056 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:056 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:056 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:056 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:056 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:056 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:057 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:057 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:057 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:057 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:057 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:057 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:057 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:058 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:059 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:059 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:059 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:059 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:059 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:059 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:060 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:060 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:060 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:060 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:061 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:062 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:062 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:062 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:062 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:062 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:062 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:062 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:062 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:063 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:064 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:064 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:064 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:064 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:064 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:064 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:064 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:064 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:064 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:064 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:078 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:078 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:078 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:078 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:078 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:078 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:079 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:080 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:081 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:082 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:083 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:084 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:085 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:086 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:087 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:088 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:089 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:090 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:091 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:092 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:093 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:094 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:094 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:094 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:094 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:094 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:094 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:094 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:094 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:094 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:094 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:095 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:096 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:096 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:096 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:096 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:096 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:096 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:096 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:096 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:096 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:097 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:098 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:099 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:100 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:103 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:104 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:105 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:106 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:107 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:108 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:109 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:112 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:113 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:122 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:122 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:122 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:122 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:123 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:124 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:126 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:125 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:127 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:128 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:129 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:130 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:131 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:132 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:133 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:133 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:133 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:133 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:133 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:134 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:134 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:134 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:134 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:134 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:134 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:134 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:134 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:135 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:136 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:137 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:137 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:137 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:137 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:137 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:137 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:137 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:137 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:137 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:137 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:138 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:139 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:139 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:139 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:139 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:139 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:139 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:140 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:141 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:142 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:143 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:144 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:144 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:144 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:144 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:144 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:144 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:144 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:144 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:145 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:145 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:145 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:145 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:145 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:145 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:145 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:145 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:146 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:147 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:148 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:149 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:150 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:150 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:150 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:150 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:150 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:150 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:150 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:151 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:152 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:153 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:153 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:153 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:153 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:166 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:167 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:168 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:169 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:170 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:171 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:172 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:173 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:174 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:175 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:176 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:176 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:176 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:176 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:177 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:178 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:179 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:179 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:179 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:179 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:179 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:179 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:179 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:179 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:179 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:180 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:181 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:182 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:183 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:184 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:185 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:186 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:187 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:188 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:189 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:190 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:191 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:192 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:193 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:194 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:195 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:196 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:197 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:198 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:220 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:221 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:222 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:223 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:224 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:225 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:225 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:225 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:225 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:225 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:225 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:225 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:225 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:225 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:226 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:226 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:226 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:226 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:226 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:226 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:226 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:226 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:226 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:226 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:227 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:227 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:227 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:227 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:227 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:227 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:228 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:229 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:229 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:229 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:229 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:229 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:229 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:229 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:230 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:231 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:231 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:231 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:231 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:236 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((𝒰 _0) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(𝒰 _0) → (@a) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:237 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (`@a)) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (`@a) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (`@a)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,@a :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (@a)) :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (`@a)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (`@a))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (@a) :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:238 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0)) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> ((`@a) → (𝒰 _0))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,(@a) → (𝒰 _0) :: HNil)
2021.02.18 09:17:51:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((`@a) , (𝒰 _0)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((@a) , (𝒰 _0)) :: HNil)
2021.02.18 09:17:51:239 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@b : 𝒰 _0 ) ~> (`@b)) in Island(AtCoord(TermsWithTyp,(`@b : 𝒰 _0 ) ~> (`@b) :: HNil),PiOutput((`@b : 𝒰 _0 ) ~> (`@b)),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @b gives AtCoord(TermsWithTyp,@b :: HNil)
2021.02.18 09:17:51:240 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:240 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random variable by substitution  for PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))) in Island(AtCoord(TermsWithTyp,(`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a))) :: HNil),PiOutput((`@a : 𝒰 _0 ) ~> (((𝒰 _0) , (`@a)))),ParAddVar(𝒰 _0),Lambda,ParEnterIsle); @a gives AtCoord(TermsWithTyp,((𝒰 _0) , (@a)) :: HNil)
2021.02.18 09:17:51:240 [scala-e...] [WARN ] provingground.learning.TermRandomVars.newIsleOutput:422 - creating lambda random vari2021.02.18 09:24:53:402 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:243 - 
This is a Bot based run for parallel generation goal chomping. This has been refined a few times.
Biggest change after first runs was having a session with bots.
Also parallel chomping, proving via zero, using inclusions and projections,
better reporting of status. 
After debugging, everything generated was proved but there was an error in reporting.

2021.02.18 09:24:53:415 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:255 - JAVA_OPTS: -Xms512m -Xmx4g -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.18 09:24:53:416 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:257 - JAVA_HOME: /home/gadgil/.cache/coursier/jvm/adopt@1.11.0-8
2021.02.18 09:24:53:906 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((0,257821092))
2021.02.18 09:24:53:909 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (0,257821092) with hash 257821092
2021.02.18 09:49:30:650 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:243 - 
This is a Bot based run for parallel generation goal chomping. This has been refined a few times.
Biggest change after first runs was having a session with bots.
Also parallel chomping, proving via zero, using inclusions and projections,
better reporting of status. 
After debugging, everything generated was proved but there was an error in reporting.

2021.02.18 09:49:30:882 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:255 - JAVA_OPTS: -Xms2G -Xmx20G -Xss6M -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.18 09:49:30:884 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:257 - JAVA_HOME: /usr/lib/jvm/java-8-oracle
2021.02.18 09:49:31:630 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((0,257821092))
2021.02.18 09:49:31:633 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (0,257821092) with hash 257821092
2021.02.18 10:35:00:705 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:243 - 
This is a Bot based run for parallel generation goal chomping. This has been refined a few times.
Biggest change after first runs was having a session with bots.
Also parallel chomping, proving via zero, using inclusions and projections,
better reporting of status. 
After debugging, everything generated was proved but there was an error in reporting.

2021.02.18 10:35:00:935 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:255 - JAVA_OPTS: -Xms2G -Xmx20G -Xss6M -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.18 10:35:00:940 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:257 - JAVA_HOME: /usr/lib/jvm/java-8-oracle
2021.02.18 10:35:01:622 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((0,-271021757))
2021.02.18 10:35:01:631 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (0,-271021757) with hash -271021757
2021.02.18 10:35:29:130 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((1,-775531565))
2021.02.18 10:35:29:131 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (1,-775531565) with hash -775531565
2021.02.18 10:35:30:055 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((1,-775531565))
2021.02.18 10:35:30:056 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (1,-775531565) with hash -775531565
2021.02.18 10:35:33:211 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((2,11541132))
2021.02.18 10:35:33:212 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (2,11541132) with hash 11541132
2021.02.18 10:45:34:668 [scala-e...] [ERROR] provingground.learning.ExpressionEval.stableVec:1376 - Timeout for stable vector after 110128 steps
2021.02.18 10:45:37:350 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((4,-112047676))
2021.02.18 10:45:37:350 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (4,-112047676) with hash -112047676
2021.02.18 10:45:39:497 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:943 - seeking to chomp 755 unknown groups
2021.02.18 11:02:45:868 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((5,-269579703))
2021.02.18 11:02:45:868 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (5,-269579703) with hash -269579703
2021.02.18 11:02:45:940 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:998 - number of successes: 754
2021.02.18 11:02:45:944 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:1003 - number of failures: 1
2021.02.18 11:02:45:944 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:1004 - top 10 failures: (`@a : 𝒰 _0 ) ~> (((𝒰 _0) → (((`@a) , (𝒰 _0)))) → (`@a))
2021.02.18 11:02:45:977 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((5,-269579703))
2021.02.18 11:02:45:977 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (5,-269579703) with hash -269579703
2021.02.18 11:03:15:289 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((5,-269579703))
2021.02.18 11:03:15:290 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (5,-269579703) with hash -269579703
2021.02.18 11:04:52:850 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:293 - completed response 'skolemizing goal' of type TypeTag[Option[provingground.learning.HoTTMessages.Consequence :: provingground.learning.HoTTMessages.SeekGoal :: shapeless.HNil]] to posts of type TypeTag[provingground.learning.HoTTMessages.FailedToProve] with input hash -154113873 with error;
2021.02.18 11:04:52:860 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:295 - Boxed Exception
scala.concurrent.impl.Promise$.scala$concurrent$impl$Promise$$resolve(Promise.scala:99)
scala.concurrent.impl.Promise$Transformation.handleFailure(Promise.scala:407)
scala.concurrent.impl.Promise$Transformation.run(Promise.scala:469)
scala.concurrent.BatchingExecutor$AbstractBatch.runN(BatchingExecutor.scala:141)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:163)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:146)
scala.concurrent.BlockContext$.usingBlockContext(BlockContext.scala:107)
scala.concurrent.BatchingExecutor$AsyncBatch.run(BatchingExecutor.scala:154)
java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2021.02.18 11:09:37:231 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (𝒰 _0) → (((Unit) , (𝒰 _0))) by Some((@a :  𝒰 _0) ↦ (((Star) , ((`@a : 𝒰 _0 ) ~> (((`@a) , ((`@b : 𝒰 _0 ) ~> (`@b)))))))) in context {}
2021.02.18 11:10:33:599 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:293 - completed response 'skolemizing goal' of type TypeTag[Option[provingground.learning.HoTTMessages.Consequence :: provingground.learning.HoTTMessages.SeekGoal :: shapeless.HNil]] to posts of type TypeTag[provingground.learning.HoTTMessages.FailedToProve] with input hash -985169787 with error;
2021.02.18 11:10:33:601 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:295 - Boxed Exception
scala.concurrent.impl.Promise$.scala$concurrent$impl$Promise$$resolve(Promise.scala:99)
scala.concurrent.impl.Promise$Transformation.handleFailure(Promise.scala:407)
scala.concurrent.impl.Promise$Transformation.run(Promise.scala:469)
scala.concurrent.BatchingExecutor$AbstractBatch.runN(BatchingExecutor.scala:141)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:163)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:146)
scala.concurrent.BlockContext$.usingBlockContext(BlockContext.scala:107)
scala.concurrent.BatchingExecutor$AsyncBatch.run(BatchingExecutor.scala:154)
java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2021.02.18 11:10:33:607 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:293 - completed response 'negating goal' of type TypeTag[Option[provingground.learning.HoTTMessages.Contradicts :: provingground.learning.HoTTMessages.SeekGoal :: shapeless.HNil]] to posts of type TypeTag[provingground.learning.HoTTMessages.FailedToProve] with input hash -985169787 with error;
2021.02.18 11:10:33:608 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:295 - function (($zupnhd :  Unit) ↦ ($zupnhe) :  (Unit) → (Zero)) ↦ ($zupnhe) with domain(optional) Some((Unit) → (Zero)) cannot act on given term $zupnax with type Unit
provingground.HoTT$.fold(HoTT.scala:3785)
provingground.HoTT$.negateContra(HoTT.scala:848)
provingground.HoTT$.negateContra(HoTT.scala:827)
provingground.HoTT$.negateContra(HoTT.scala:848)
provingground.learning.HoTTMessages$Contradicts$.fromTyp(HoTTMessages.scala:460)
provingground.learning.HoTTBot$.$anonfun$negateGoal$3(HoTTBot.scala:2514)
scala.concurrent.Future$.$anonfun$apply$1(Future.scala:671)
scala.concurrent.impl.Promise$Transformation.run(Promise.scala:430)
scala.concurrent.BatchingExecutor$AbstractBatch.runN(BatchingExecutor.scala:141)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:163)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:146)
scala.concurrent.BlockContext$.usingBlockContext(BlockContext.scala:107)
scala.concurrent.BatchingExecutor$AsyncBatch.run(BatchingExecutor.scala:154)
java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2021.02.18 11:14:20:502 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (Zero) → (Zero) by Some((```@a :  Zero) ↦ (```@a)) in context {}
2021.02.18 11:20:24:160 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved 𝒰 _0 by Some((`@a : ((𝒰 _0) → (𝒰 _0)) → (𝒰 _0) ) ~> ((`@a) ((`@a :  𝒰 _0) ↦ (`@a)))) in context {Given `$lzegsu : 𝒰 _0}
2021.02.18 11:21:03:716 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved 𝒰 _0 by Some((`@a : ((𝒰 _0) → (𝒰 _0)) → (𝒰 _0) ) ~> ((`@a) ((`@a :  𝒰 _0) ↦ (`@a)))) in context {Given $apyvqvo : 𝒰 _0}
2021.02.18 11:23:59:330 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:293 - completed response 'skolemizing goal' of type TypeTag[Option[provingground.learning.HoTTMessages.Consequence :: provingground.learning.HoTTMessages.SeekGoal :: shapeless.HNil]] to posts of type TypeTag[provingground.learning.HoTTMessages.FailedToProve] with input hash 1436813206 with error;
2021.02.18 11:23:59:331 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:295 - Boxed Exception
scala.concurrent.impl.Promise$.scala$concurrent$impl$Promise$$resolve(Promise.scala:99)
scala.concurrent.impl.Promise$Transformation.handleFailure(Promise.scala:407)
scala.concurrent.impl.Promise$Transformation.run(Promise.scala:469)
scala.concurrent.BatchingExecutor$AbstractBatch.runN(BatchingExecutor.scala:141)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:163)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:146)
scala.concurrent.BlockContext$.usingBlockContext(BlockContext.scala:107)
scala.concurrent.BatchingExecutor$AsyncBatch.run(BatchingExecutor.scala:154)
java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2021.02.18 11:26:05:385 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved ((𝒰 _0) , (PlusTyp(Unit,(𝒰 _0) → (Zero)))) by Some(((Unit) , (FirstIncl(PlusTyp(Unit,(𝒰 _0) → (Zero)),Star)))) in context {}
2021.02.18 11:27:13:029 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:293 - completed response 'skolemizing goal' of type TypeTag[Option[provingground.learning.HoTTMessages.Consequence :: provingground.learning.HoTTMessages.SeekGoal :: shapeless.HNil]] to posts of type TypeTag[provingground.learning.HoTTMessages.FailedToProve] with input hash 37018392 with error;
2021.02.18 11:27:13:030 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:295 - Boxed Exception
scala.concurrent.impl.Promise$.scala$concurrent$impl$Promise$$resolve(Promise.scala:99)
scala.concurrent.impl.Promise$Transformation.handleFailure(Promise.scala:407)
scala.concurrent.impl.Promise$Transformation.run(Promise.scala:469)
scala.concurrent.BatchingExecutor$AbstractBatch.runN(BatchingExecutor.scala:141)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:163)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:146)
scala.concurrent.BlockContext$.usingBlockContext(BlockContext.scala:107)
scala.concurrent.BatchingExecutor$AsyncBatch.run(BatchingExecutor.scala:154)
java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2021.02.18 11:29:24:371 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved PlusTyp(((𝒰 _0) , (PlusTyp(Unit,(𝒰 _0) → (Zero)))),((Zero) → (Zero)) → (Zero)) by Some(FirstIncl(PlusTyp(((𝒰 _0) , (PlusTyp(Unit,(𝒰 _0) → (Zero)))),((Zero) → (Zero)) → (Zero)),((Unit) , (FirstIncl(PlusTyp(Unit,(𝒰 _0) → (Zero)),Star))))) in context {}
2021.02.18 11:29:52:557 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved PlusTyp((𝒰 _0) → (Zero),((Unit) , (𝒰 _0))) by Some(ScndIncl(PlusTyp((𝒰 _0) → (Zero),((Unit) , (𝒰 _0))),((Star) , (Zero)))) in context {}
2021.02.18 11:31:00:043 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:293 - completed response 'negating goal' of type TypeTag[Option[provingground.learning.HoTTMessages.Contradicts :: provingground.learning.HoTTMessages.SeekGoal :: shapeless.HNil]] to posts of type TypeTag[provingground.learning.HoTTMessages.FailedToProve] with input hash 292077028 with error;
2021.02.18 11:31:00:044 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:295 - function (($cblghxs :  Unit) ↦ ($cblghxt) :  (Unit) → (Zero)) ↦ ($cblghxt) with domain(optional) Some((Unit) → (Zero)) cannot act on given term $cblghrh with type Unit
provingground.HoTT$.fold(HoTT.scala:3785)
provingground.HoTT$.negateContra(HoTT.scala:848)
provingground.HoTT$.negateContra(HoTT.scala:838)
provingground.HoTT$.negateContra(HoTT.scala:848)
provingground.learning.HoTTMessages$Contradicts$.fromTyp(HoTTMessages.scala:460)
provingground.learning.HoTTBot$.$anonfun$negateGoal$3(HoTTBot.scala:2514)
scala.concurrent.Future$.$anonfun$apply$1(Future.scala:671)
scala.concurrent.impl.Promise$Transformation.run(Promise.scala:430)
scala.concurrent.BatchingExecutor$AbstractBatch.runN(BatchingExecutor.scala:141)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:163)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:146)
scala.concurrent.BlockContext$.usingBlockContext(BlockContext.scala:107)
scala.concurrent.BatchingExecutor$AsyncBatch.run(BatchingExecutor.scala:154)
java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2021.02.18 11:40:30:420 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved 𝒰 _0 by Some((`@a : ((𝒰 _0) → (𝒰 _0)) → (𝒰 _0) ) ~> ((`@a) ((`@a :  𝒰 _0) ↦ (`@a)))) in context {Given `@a : 𝒰 _0}
2021.02.18 14:22:21:583 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:243 - 
This is a Bot based run for parallel generation goal chomping. This has been refined a few times.
Biggest change after first runs was having a session with bots.
Also parallel chomping, proving via zero, using inclusions and projections,
better reporting of status. 
After debugging, everything generated was proved but there was an error in reporting.

2021.02.18 14:22:21:807 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:255 - JAVA_OPTS: -Xms2G -Xmx20G -Xss6M -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.18 14:22:21:813 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:257 - JAVA_HOME: /usr/lib/jvm/java-8-oracle
2021.02.18 14:22:22:515 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((0,-271021757))
2021.02.18 14:22:22:517 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (0,-271021757) with hash -271021757
2021.02.18 14:22:48:044 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((1,-811446451))
2021.02.18 14:22:48:045 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (1,-811446451) with hash -811446451
2021.02.18 14:22:48:955 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((1,-811446451))
2021.02.18 14:22:48:955 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (1,-811446451) with hash -811446451
2021.02.18 14:22:52:040 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((2,982982116))
2021.02.18 14:22:52:040 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (2,982982116) with hash 982982116
2021.02.18 14:32:53:606 [scala-e...] [ERROR] provingground.learning.ExpressionEval.stableVec:1376 - Timeout for stable vector after 118364 steps
2021.02.18 14:32:56:375 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((4,-112047676))
2021.02.18 14:32:56:375 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (4,-112047676) with hash -112047676
2021.02.18 14:32:58:534 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:943 - seeking to chomp 754 unknown groups
2021.02.18 14:49:41:459 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((5,-1953963689))
2021.02.18 14:49:41:460 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (5,-1953963689) with hash -1953963689
2021.02.18 14:49:41:533 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:998 - number of successes: 753
2021.02.18 14:49:41:537 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:1003 - number of failures: 1
2021.02.18 14:49:41:537 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:1004 - top 10 failures: (`@a : 𝒰 _0 ) ~> (((𝒰 _0) → (((`@a) , (𝒰 _0)))) → (`@a))
2021.02.18 14:49:41:567 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((5,-1953963689))
2021.02.18 14:49:41:567 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (5,-1953963689) with hash -1953963689
2021.02.18 14:50:06:723 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((5,-1953963689))
2021.02.18 14:50:06:723 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (5,-1953963689) with hash -1953963689
2021.02.18 14:56:49:016 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (𝒰 _0) → (((Unit) , (𝒰 _0))) by Some((@a :  𝒰 _0) ↦ (((Star) , ((`@a : 𝒰 _0 ) ~> (((`@a) , ((`@b : 𝒰 _0 ) ~> (`@b)))))))) in context {}
2021.02.18 14:58:59:429 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (((𝒰 _0) → (Unit)) , ((𝒰 _0) → (𝒰 _0))) by Some((((@a :  𝒰 _0) ↦ (Star)) , ((`@a :  𝒰 _0) ↦ (`@a)))) in context {}
2021.02.18 15:00:04:242 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:293 - completed response 'negating goal' of type TypeTag[Option[provingground.learning.HoTTMessages.Contradicts :: provingground.learning.HoTTMessages.SeekGoal :: shapeless.HNil]] to posts of type TypeTag[provingground.learning.HoTTMessages.FailedToProve] with input hash 1741922566 with error;
2021.02.18 15:00:04:246 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:295 - function (($akoqghn :  Unit) ↦ ($akoqghp) :  (Unit) → (Zero)) ↦ ($akoqghp) with domain(optional) Some((Unit) → (Zero)) cannot act on given term ($akoqghj) ($akoqghk) with type Unit
provingground.HoTT$.fold(HoTT.scala:3786)
provingground.HoTT$.negateContra(HoTT.scala:827)
provingground.HoTT$.negateContra(HoTT.scala:848)
provingground.HoTT$.negateContra(HoTT.scala:848)
provingground.learning.HoTTMessages$Contradicts$.fromTyp(HoTTMessages.scala:460)
provingground.learning.HoTTBot$.$anonfun$negateGoal$3(HoTTBot.scala:2514)
scala.concurrent.Future$.$anonfun$apply$1(Future.scala:671)
scala.concurrent.impl.Promise$Transformation.run(Promise.scala:430)
scala.concurrent.BatchingExecutor$AbstractBatch.runN(BatchingExecutor.scala:141)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:163)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:146)
scala.concurrent.BlockContext$.usingBlockContext(BlockContext.scala:107)
scala.concurrent.BatchingExecutor$AsyncBatch.run(BatchingExecutor.scala:154)
java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2021.02.18 15:02:07:439 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:293 - completed response 'negating goal' of type TypeTag[Option[provingground.learning.HoTTMessages.Contradicts :: provingground.learning.HoTTMessages.SeekGoal :: shapeless.HNil]] to posts of type TypeTag[provingground.learning.HoTTMessages.FailedToProve] with input hash 371058896 with error;
2021.02.18 15:02:07:440 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:295 - function (($arapeiz :  Unit) ↦ ($arapeja) :  (Unit) → (Zero)) ↦ ($arapeja) with domain(optional) Some((Unit) → (Zero)) cannot act on given term ($arapeiv) ($arapeiw) with type Unit
provingground.HoTT$.fold(HoTT.scala:3786)
provingground.HoTT$.negateContra(HoTT.scala:827)
provingground.HoTT$.negateContra(HoTT.scala:848)
provingground.HoTT$.negateContra(HoTT.scala:848)
provingground.learning.HoTTMessages$Contradicts$.fromTyp(HoTTMessages.scala:460)
provingground.learning.HoTTBot$.$anonfun$negateGoal$3(HoTTBot.scala:2514)
scala.concurrent.Future$.$anonfun$apply$1(Future.scala:671)
scala.concurrent.impl.Promise$Transformation.run(Promise.scala:430)
scala.concurrent.BatchingExecutor$AbstractBatch.runN(BatchingExecutor.scala:141)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:163)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:146)
scala.concurrent.BlockContext$.usingBlockContext(BlockContext.scala:107)
scala.concurrent.BatchingExecutor$AsyncBatch.run(BatchingExecutor.scala:154)
java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2021.02.18 15:02:07:495 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:293 - completed response 'negating goal' of type TypeTag[Option[provingground.learning.HoTTMessages.Contradicts :: provingground.learning.HoTTMessages.SeekGoal :: shapeless.HNil]] to posts of type TypeTag[provingground.learning.HoTTMessages.FailedToProve] with input hash -985169787 with error;
2021.02.18 15:02:07:495 [scala-e...] [ERROR] provingground.learning.PostResponse.applyOrElse:295 - function (($araqfge :  Unit) ↦ ($araqfgf) :  (Unit) → (Zero)) ↦ ($araqfgf) with domain(optional) Some((Unit) → (Zero)) cannot act on given term $araqezt with type Unit
provingground.HoTT$.fold(HoTT.scala:3786)
provingground.HoTT$.negateContra(HoTT.scala:848)
provingground.HoTT$.negateContra(HoTT.scala:827)
provingground.HoTT$.negateContra(HoTT.scala:848)
provingground.learning.HoTTMessages$Contradicts$.fromTyp(HoTTMessages.scala:460)
provingground.learning.HoTTBot$.$anonfun$negateGoal$3(HoTTBot.scala:2514)
scala.concurrent.Future$.$anonfun$apply$1(Future.scala:671)
scala.concurrent.impl.Promise$Transformation.run(Promise.scala:430)
scala.concurrent.BatchingExecutor$AbstractBatch.runN(BatchingExecutor.scala:141)
scala.concurrent.BatchingExecutor$AsyncBatch.apply(BatchingExecutor.scala:163)
scala.concurrent.BatchingExecut2021.02.18 15:43:27:440 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:243 - 
This is a Bot based run for parallel generation goal chomping. This has been refined a few times.
Biggest change after first runs was having a session with bots.
Also parallel chomping, proving via zero, using inclusions and projections,
better reporting of status. 
After debugging, everything generated was proved but there was an error in reporting.

2021.02.18 15:43:27:685 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:255 - JAVA_OPTS: -Xms2G -Xmx20G -Xss6M -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.18 15:43:27:691 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:257 - JAVA_HOME: /usr/lib/jvm/java-8-oracle
2021.02.18 15:43:28:388 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((0,-271021757))
2021.02.18 15:43:28:393 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (0,-271021757) with hash -271021757
2021.02.18 15:43:54:722 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((1,85546269))
2021.02.18 15:43:54:722 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (1,85546269) with hash 85546269
2021.02.18 15:43:55:664 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((1,85546269))
2021.02.18 15:43:55:665 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (1,85546269) with hash 85546269
2021.02.18 15:43:59:019 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((2,45802850))
2021.02.18 15:43:59:019 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (2,45802850) with hash 45802850
2021.02.18 15:54:00:433 [scala-e...] [ERROR] provingground.learning.ExpressionEval.stableVec:1376 - Timeout for stable vector after 107935 steps
2021.02.18 15:54:03:362 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((4,-112047676))
2021.02.18 15:54:03:362 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (4,-112047676) with hash -112047676
2021.02.18 15:54:05:618 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:943 - seeking to chomp 755 unknown groups
2021.02.18 16:11:21:622 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((5,96695697))
2021.02.18 16:11:21:622 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (5,96695697) with hash 96695697
2021.02.18 16:11:21:688 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:998 - number of successes: 754
2021.02.18 16:11:21:691 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:1003 - number of failures: 1
2021.02.18 16:11:21:691 [scala-e...] [INFO ] provingground.learning.HoTTBot.response:1004 - top 10 failures: (`@a : 𝒰 _0 ) ~> (((𝒰 _0) → (((`@a) , (𝒰 _0)))) → (`@a))
2021.02.18 16:11:21:723 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((5,96695697))
2021.02.18 16:11:21:723 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (5,96695697) with hash 96695697
2021.02.18 16:11:53:205 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((5,96695697))
2021.02.18 16:11:53:205 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (5,96695697) with hash 96695697
2021.02.18 16:21:24:084 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (𝒰 _0) → (((Unit) , (𝒰 _0))) by Some((@a :  𝒰 _0) ↦ (((Star) , ((`@a : 𝒰 _0 ) ~> (((`@a) , ((`@b : 𝒰 _0 ) ~> (`@b)))))))) in context {}
2021.02.18 16:24:59:192 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (((𝒰 _0) → (Unit)) , ((𝒰 _0) → (𝒰 _0))) by Some((((@a :  𝒰 _0) ↦ (Star)) , ((`@a :  𝒰 _0) ↦ (`@a)))) in context {}
2021.02.18 16:30:10:635 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved PlusTyp(PlusTyp(((𝒰 _0) , (Zero)),((𝒰 _0) , ((𝒰 _0) → (Zero)))),Unit) by Some(ScndIncl(PlusTyp(PlusTyp(((𝒰 _0) , (Zero)),((𝒰 _0) , ((𝒰 _0) → (Zero)))),Unit),Star)) in context {}
2021.02.18 16:35:11:886 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved PlusTyp(((𝒰 _0) , (PlusTyp(Zero,(𝒰 _0) → (Zero)))),Unit) by Some(ScndIncl(PlusTyp(((𝒰 _0) , (PlusTyp(Zero,(𝒰 _0) → (Zero)))),Unit),Star)) in context {}
2021.02.18 16:38:51:105 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (Zero) → (Zero) by Some((```@a :  Zero) ↦ (```@a)) in context {}
2021.02.18 16:43:59:721 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (Zero) → (Zero) by Some((```@a :  Zero) ↦ (```@a)) in context {}
2021.02.18 16:44:26:148 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved 𝒰 _0 by Some((`@a : ((𝒰 _0) → (𝒰 _0)) → (𝒰 _0) ) ~> ((`@a) ((`@a :  𝒰 _0) ↦ (`@a)))) in context {Given `$ssvvzd : 𝒰 _0}
2021.02.18 16:47:28:346 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (𝒰 _0) → (𝒰 _0) by Some((`@a :  𝒰 _0) ↦ (`@a)) in context {}
2021.02.18 16:55:06:521 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved PlusTyp(𝒰 _0,((𝒰 _0) , ((𝒰 _0) → (Zero)))) by Some(FirstIncl(PlusTyp(𝒰 _0,((𝒰 _0) , ((𝒰 _0) → (Zero)))),Unit)) in context {}
2021.02.18 16:56:57:855 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved 𝒰 _0 by Some((`@a : ((𝒰 _0) → (𝒰 _0)) → (𝒰 _0) ) ~> ((`@a) ((`@a :  𝒰 _0) ↦ (`@a)))) in context {Given $cftrmvr : 𝒰 _0}
2021.02.18 17:01:45:101 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved PlusTyp(PlusTyp(𝒰 _0,((𝒰 _0) , ((𝒰 _0) → (Zero)))),((Zero) → (Zero)) → (Zero)) by Some(FirstIncl(PlusTyp(PlusTyp(𝒰 _0,((𝒰 _0) , ((𝒰 _0) → (Zero)))),((Zero) → (Zero)) → (Zero)),FirstIncl(PlusTyp(𝒰 _0,((𝒰 _0) , ((𝒰 _0) → (Zero)))),Unit))) in context {}
2021.02.18 17:02:54:146 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved (Zero) → (Zero) by Some((```@a :  Zero) ↦ (```@a)) in context {}
2021.02.18 17:09:05:942 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved ((𝒰 _0) , (PlusTyp(Unit,(𝒰 _0) → (Zero)))) by Some(((Unit) , (FirstIncl(PlusTyp(Unit,(𝒰 _0) → (Zero)),Star)))) in context {}
2021.02.18 17:11:52:720 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved PlusTyp((𝒰 _0) → (Zero),𝒰 _0) by Some(ScndIncl(PlusTyp((𝒰 _0) → (Zero),𝒰 _0),Unit)) in context {}
2021.02.18 17:16:20:271 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved PlusTyp(((𝒰 _0) , (PlusTyp(Unit,(𝒰 _0) → (Zero)))),((Zero) → (Zero)) → (Zero)) by Some(FirstIncl(PlusTyp(((𝒰 _0) , (PlusTyp(Unit,(𝒰 _0) → (Zero)))),((Zero) → (Zero)) → (Zero)),((Unit) , (FirstIncl(PlusTyp(Unit,(𝒰 _0) → (Zero)),Star))))) in context {}
2021.02.18 17:18:50:997 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved PlusTyp(((𝒰 _0) , (Unit)),((𝒰 _0) , ((𝒰 _0) → (Zero)))) by Some(FirstIncl(PlusTyp(((𝒰 _0) , (Unit)),((𝒰 _0) , ((𝒰 _0) → (Zero)))),((Unit) , (Star)))) in context {}
2021.02.18 17:23:02:208 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved PlusTyp(PlusTyp(((𝒰 _0) , (Unit)),((𝒰 _0) , ((𝒰 _0) → (Zero)))),((Zero) → (Zero)) → (Zero)) by Some(FirstIncl(PlusTyp(PlusTyp(((𝒰 _0) , (Unit)),((𝒰 _0) , ((𝒰 _0) → (Zero)))),((Zero) → (Zero)) → (Zero)),FirstIncl(PlusTyp(((𝒰 _0) , (Unit)),((𝒰 _0) , ((𝒰 _0) → (Zero)))),((Unit) , (Star))))) in context {}
2021.02.18 17:23:39:520 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved 𝒰 _0 by Some((`@a : ((𝒰 _0) → (𝒰 _0)) → (𝒰 _0) ) ~> ((`@a) ((`@a :  𝒰 _0) ↦ (`@a)))) in context {Given `$cmakfmn : 𝒰 _0}
2021.02.18 17:50:52:253 [scala-e...] [INFO ] provingground.learning.HoTTBot.reportProved:331 - Proved 𝒰 _0 by Some((`@a : ((𝒰 _0) → (𝒰 _0)) → (𝒰 _0) ) ~> ((`@a) ((`@a :  𝒰 _0) ↦ (`@a)))) in context {Given `@a : 𝒰 _0}
2021.02.18 18:04:21:695 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:243 - 
This is a Bot based run for parallel generation goal chomping. This has been refined a few times.
Biggest change after first runs was having a session with bots.
Also parallel chomping, proving via zero, using inclusions and projections,
better reporting of status. 
After debugging, everything generated was proved but there was an error in reporting.

2021.02.18 18:04:21:942 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:255 - JAVA_OPTS: -Xms2G -Xmx20G -Xss6M -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.18 18:04:21:946 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:257 - JAVA_HOME: /usr/lib/jvm/java-8-oracle
2021.02.18 18:04:22:642 [scala-e...] [INFO ] provingground.learning.PostResponse.act:668 - apex posts Vector((0,-271021757))
2021.02.18 18:04:22:646 [scala-e...] [INFO ] provingground.learning.PostResponse.act:674 - acting on post (0,-271021757) with hash -271021757
2021.02.18 19:06:13:477 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:243 - 
This is a Bot based run for parallel generation goal chomping. This has been refined a few times.
Biggest change after first runs was having a session with bots.
Also parallel chomping, proving via zero, using inclusions and projections,
better reporting of status. 
After debugging, everything generated was proved but there was an error in reporting.

2021.02.18 19:06:13:505 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:255 - JAVA_OPTS: -Xms2G -Xmx20G -Xss6M -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
2021.02.18 19:06:13:507 [main      ] [INFO ] provingground.interface.ChompSession.ParChompSessionEq:257 - JAVA_HOME: /usr/lib/jvm/java-8-oracle
2021.02.18 19:06:14:431 [scala-e...] [INFO ] provingground.learning.PostResponse.act:670 - apex posts Vector((0,-271021757))
2021.02.18 19:06:14:437 [scala-e...] [INFO ] provingground.learning.PostResponse.act:676 - acting on post (0,-271021757) with hash -271021757
